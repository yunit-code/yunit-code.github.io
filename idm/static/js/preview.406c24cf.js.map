{"version":3,"sources":["webpack:///./node_modules/_@babel_runtime@7.17.2@@babel/runtime/regenerator/index.js","webpack:///./src/views/Preview.vue?a9a3","webpack:///./src/api/preview.js","webpack:///./src/plugins/preview.js","webpack:///src/views/Preview.vue","webpack:///./src/views/Preview.vue?e8c8","webpack:///./src/views/Preview.vue","webpack:///./src/views/Preview.vue?87b8","webpack:///./node_modules/_@babel_runtime@7.17.2@@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":["module","exports","require","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","directives","name","rawName","value","expression","dialogIsHideing","_l","item","index","key","class","packageid","on","layerClickHandle","ref","PageSettingData","id","pagePropData","drawerTitleShow","drawerTitle","drawerPlacement","drawerClosable","drawerDestroyOnClose","drawerMaskClosable","drawerMask","drawerKeyboarde","commonCustomEventFunHandle","drawerWidth","drawerHeight","drawerZIndex","drawerWrapClassName","drawerVisible","drawerOnClose","drawerOnAfterVisibleChange","drawerIframeUrl","staticRenderFns","fetchPageSettingDataForVersion","params","savetype","IDM","setting","pageSchema","saveType","version","http","get","jsonDir","replace","projectNo","webRoot","pageid","api","pageSettingDataUrl","mockurl","fetchApplicationInfo","url","fetchUserInfo","fetchThemeInfo","getPageInterfaceInfo","postPageInterfaceInfo","options","post","Vue","prototype","$previewApi","preview","$replace","express","varible","call","$eval","eval","components","data","dialogVisibleStatus","dialogObjectList","drawerControlSetPanelOption","mounted","windowResizeEvent","type","rangeModule","message","created","$route","JSON","parse","window","localStorage","loadPageElement","then","injectInnerActionToWindow","methods","callback","clearTimeout","target","beforeLoadingFunction","propData","afterLoadingFunction","e","IdmBuiltin_CloseDialog","targetModule","moduleId","IdmBuiltin_OpenControlSetPanel","ctx","iframeUrl","Object","getWebPath","controlSetPanelOption","IdmBuiltin_CloseControlSetPanel","actionType","IdmBuiltin_OpenUrl","customParam","IdmBuiltin_OpenDialog","moduleIdArray","dialogObject","existsCount","$","$nextTick","setTimeout","that","ditem","existsIndex","IdmBuiltin_ShowModule","sendBroadcastMessage","IdmBuiltin_HideModule","object","initAppAndUserInfo","propDataObject","catch","switchUserInfoFiledValue","filedExp","echoDataName","dataObject","switchThemeValue","_this","themeInterfaceHandle","resultData","themeDataFunction","paramObject","pageScriptDom","document","requestPageCommonInterfaceData","broadcast","pageLoadCompleteAfter","isloadPageCommonInterface","interfaceList","page","layout","props","compositeAttr","pageId","componentsMap","forEach","componentIdArray","idmPageId","moduleIds","componentIds","orderlyRequestInterface","itemParam","headers","callbackModuleSetContext","resData","sitem","interfaceRunLaterFunction","pageAttrPropHandle","styleObject","bgSize","positionX","inputVal","positionY","hasOwnProperty","element","hex8","marginTopVal","marginRightVal","marginBottomVal","marginLeftVal","paddingTopVal","paddingRightVal","paddingBottomVal","paddingLeftVal","link","createElement","border","top","width","colors","right","bottom","left","fontColors","display","direction","watermarkType","_watermarkFont","watermarkFont","_watermarkFont1","fontColor","fontSize","height","rotate","imgSize","imgLeftSize","fontLeftSize","opacity","topSize","async","defer","renderDialog","opModule","_","cloneDeep","pageModuleLoadCompleteBefore","resetLayoutInnerModuleLoadedStatus","initModuleTreeToPage","destroyDialog","moduleData","ischildren","fModule","addNextForModulePackageid","loadModule","Array","loaded","comObject","newComDiv","createModuleDom","containerId","containerDom","containerInnerDom","find","containerIndex","innercontainer","children","length","pageModuleDataIsLoaded","isnotloadinner","isLoaded","getModuleTree","_findModule","moduleReload","innerContainerIndex","reloadModuleArray","reloadModule","parentModule","globalId","moduleMountComplete","targetNode","invcount","intval","setInterval","clearInterval","moduleMountCompleteCommon","moduleDom","moduleInnerDom","idmCtrl","attr","idmCtrlId","domId","initModuleInnerEventHandle","customHandle","commonParam","urlData","component","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined"],"mappings":"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","file":"static/js/preview.406c24cf.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"idm_render_engine_container\"},[_c('div',{attrs:{\"id\":\"idm_render_engine_page_container\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.dialogVisibleStatus),expression:\"dialogVisibleStatus\"}],staticClass:\"idm_dialog_wrap_preview\",attrs:{\"id\":\"idm_dialog_wrap\",\"hideing\":(\"\" + (_vm.dialogIsHideing?'hideing':''))}},_vm._l((_vm.dialogObjectList),function(item,index){return _c('div',{key:index,staticClass:\"idm_dialog_shade_layer\",class:'idm_dialog_shade_layer_'+item.packageid,attrs:{\"dialog-id\":item.packageid},on:{\"click\":_vm.layerClickHandle}})}),0),_c('div',{ref:\"idm_page_root\",staticClass:\"idm_page_root\",class:(\"\" + (_vm.PageSettingData.id)),attrs:{\"id\":'PAGE_' + _vm.PageSettingData.id,\"idm-com-anchor-id\":_vm.PageSettingData.id}})]),_c('a-drawer',{attrs:{\"title\":_vm.pagePropData.drawerTitleShow?_vm.pagePropData.drawerTitle:'',\"placement\":_vm.pagePropData.drawerPlacement||'right',\"closable\":_vm.pagePropData.drawerClosable===false?false:true,\"destroyOnClose\":_vm.pagePropData.drawerDestroyOnClose,\"maskClosable\":_vm.pagePropData.drawerMaskClosable===false?false:true,\"mask\":_vm.pagePropData.drawerMask===false?false:true,\"keyboard\":_vm.pagePropData.drawerKeyboarde===false?false:true,\"maskStyle\":_vm.commonCustomEventFunHandle(_vm.pagePropData,'drawerMaskStyleFunction')||{},\"wrapStyle\":_vm.commonCustomEventFunHandle(_vm.pagePropData,'drawerWrapStyleFunction')||{},\"drawerStyle\":_vm.commonCustomEventFunHandle(_vm.pagePropData,'drawerStyleFunction')||{},\"headerStyle\":_vm.commonCustomEventFunHandle(_vm.pagePropData,'drawerHeaderStyleFunction')||{},\"bodyStyle\":_vm.commonCustomEventFunHandle(_vm.pagePropData,'drawerBodyStyleFunction')||{},\"width\":_vm.pagePropData.drawerWidth||256,\"height\":_vm.pagePropData.drawerHeight||256,\"zIndex\":_vm.pagePropData.drawerZIndex||1000,\"wrapClassName\":(_vm.pagePropData.drawerWrapClassName||'')+' idm_module_setting_drawer',\"visible\":_vm.drawerVisible},on:{\"close\":_vm.drawerOnClose,\"afterVisibleChange\":_vm.drawerOnAfterVisibleChange}},[_c('iframe',{staticClass:\"idm_drawer_iframe_basestyle\",attrs:{\"src\":_vm.drawerIframeUrl,\"name\":\"idm_drawer_iframe\"}})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default {\r\n    /**\r\n     * 页面配置数据（根据版本号和页面ID获取的），版本号为空则获取正在使用的数据【配置为空会返回测试数据】\r\n     * @param {pageid：页面ID,version：版本号} params \r\n     * @returns \r\n     */\r\n    fetchPageSettingDataForVersion(params){\r\n        params.savetype = IDM.setting.pageSchema.saveType;\r\n        //如果是磁盘直接读取json文件\r\n        if(IDM.setting.pageSchema.saveType==\"disk\"&&params.version&&process.env.NODE_ENV ==\"production\"){\r\n            return IDM.http.get(IDM.setting.pageSchema.jsonDir.replace(/{projectNo}/g, params.projectNo||IDM.setting.webRoot.projectNo).replace(/{pageid}/g,params.pageid).replace(/{version}/g,params.version));\r\n        }\r\n        return IDM.http.get(IDM.setting.api.pageSettingDataUrl||IDM.setting.mockurl.pageSettingDataUrl,params);\r\n    },\r\n    /**\r\n     * 获取应用信息\r\n     * @param {*} url 配置的接口地址\r\n     * @param {pageid：页面ID} params \r\n     * @returns \r\n     */\r\n    fetchApplicationInfo(url,params){\r\n        return IDM.http.get(url,params);\r\n    },\r\n    /**\r\n     * 获取当前登录用户信息\r\n     * @param {*} url 配置的接口地址\r\n     * @param {pageid：页面ID} params \r\n     * @returns \r\n     */\r\n    fetchUserInfo(url,params){\r\n        return IDM.http.get(url,params);\r\n    },\r\n    /**\r\n     * 获取当前应用主题信息\r\n     * @param {*} url 配置的接口地址\r\n     * @param {pageid：页面ID} params \r\n     * @returns \r\n     */\r\n    fetchThemeInfo(url,params){\r\n        return IDM.http.get(url,params);\r\n    },\r\n    /**\r\n     * 获取页面接口数据（get）\r\n     * @param {*} url \r\n     * @param {*} params \r\n     */\r\n    getPageInterfaceInfo(url,params){\r\n        return IDM.http.get(url,params);\r\n    },\r\n    /**\r\n     * 请求页面接口数据（post）\r\n     * @param {*} url \r\n     * @param {*} params \r\n     * @param {*} options \r\n     * @returns \r\n     */\r\n    postPageInterfaceInfo(url,params,options){\r\n        return IDM.http.post(url,params,options);\r\n    }\r\n}","import Vue from 'vue';\r\nimport preview from '../api/preview';\r\n\r\nVue.prototype.$previewApi = preview;\r\n//为vue对象注入表达式替换\r\nVue.prototype.$replace = function (express, varible) {\r\n    return IDM.express.replace.call(this, express, varible);\r\n};\r\n//为vue对象注入表达式执行\r\nVue.prototype.$eval = function (express, varible) {\r\n    return IDM.express.eval.call(this, express, varible);\r\n};\r\n\r\n\r\n// import {\r\n//     Drawer\r\n// } from 'ant-design-vue';\r\n\r\n// Vue.use(Drawer);","<template>\n  <!--页面根元素-->\n  <div class=\"idm_render_engine_container\">\n    <!--页面渲染的容器-->\n    <div id=\"idm_render_engine_page_container\">\n      <!--弹出框容器-->\n      <div id=\"idm_dialog_wrap\" v-show=\"dialogVisibleStatus\" class=\"idm_dialog_wrap_preview\" :hideing=\"`${dialogIsHideing?'hideing':''}`\">\n        <div class=\"idm_dialog_shade_layer\" :class=\"'idm_dialog_shade_layer_'+item.packageid\" v-for=\"(item,index) in dialogObjectList\" :key=\"index\" :dialog-id=\"item.packageid\" @click=\"layerClickHandle\"></div>\n      </div>\n      <div\n        class=\"idm_page_root\"\n        :id=\"'PAGE_' + PageSettingData.id\"\n        :idm-com-anchor-id=\"PageSettingData.id\"\n        ref=\"idm_page_root\"\n        :class=\"`${PageSettingData.id}`\"\n      ></div>\n    </div>\n    <a-drawer\n      :title=\"pagePropData.drawerTitleShow?pagePropData.drawerTitle:''\"\n      :placement=\"pagePropData.drawerPlacement||'right'\"\n      :closable=\"pagePropData.drawerClosable===false?false:true\"\n      :destroyOnClose=\"pagePropData.drawerDestroyOnClose\"\n      :maskClosable=\"pagePropData.drawerMaskClosable===false?false:true\"\n      :mask=\"pagePropData.drawerMask===false?false:true\"\n      :keyboard=\"pagePropData.drawerKeyboarde===false?false:true\"\n      :maskStyle=\"commonCustomEventFunHandle(pagePropData,'drawerMaskStyleFunction')||{}\"\n      :wrapStyle=\"commonCustomEventFunHandle(pagePropData,'drawerWrapStyleFunction')||{}\"\n      :drawerStyle=\"commonCustomEventFunHandle(pagePropData,'drawerStyleFunction')||{}\"\n      :headerStyle=\"commonCustomEventFunHandle(pagePropData,'drawerHeaderStyleFunction')||{}\"\n      :bodyStyle=\"commonCustomEventFunHandle(pagePropData,'drawerBodyStyleFunction')||{}\"\n      :width=\"pagePropData.drawerWidth||256\"\n      :height=\"pagePropData.drawerHeight||256\"\n      :zIndex=\"pagePropData.drawerZIndex||1000\"\n      :wrapClassName=\"(pagePropData.drawerWrapClassName||'')+' idm_module_setting_drawer'\"\n      :visible=\"drawerVisible\"\n      @close=\"drawerOnClose\"\n      @afterVisibleChange=\"drawerOnAfterVisibleChange\"\n    >\n      <iframe class=\"idm_drawer_iframe_basestyle\" :src=\"drawerIframeUrl\" name=\"idm_drawer_iframe\"/>\n    </a-drawer>\n  </div>\n</template>\n\n<script>\n//页面渲染引擎所需要的组件注册\nimport \"@/plugins/preview\";\nexport default {\n  name: \"Preview\",\n  components: {},\n  data() {\n    return {\n      pageid: \"\",\n      //当前页面的数据\n      PageSettingData: {},\n      dialogVisibleStatus:false,\n      //是否正在隐藏中\n      dialogIsHideing:false,\n      //窗口的对象\n      dialogObjectList:[],\n      //控制中心窗口是否显示\n      drawerVisible:false,\n      //控制中心窗口iframe的URL\n      drawerIframeUrl:\"\",\n      //控制中心窗口的option\n      drawerControlSetPanelOption:null,\n      //页面属性\n      pagePropData:{}\n    };\n  },\n  mounted() {\n    this.windowResizeEvent(function(){\n      //给所有组件发送pageResize消息\n      IDM.broadcast.send({\n        type:\"pageResize\",\n        rangeModule:\"\",\n        message:IDM.getClientWH()\n      })\n    })\n  },\n  created() {\n    this.pageid = this.$route.params.pageid;\n    //直接判断pageid如果为devpreview则是预览开发环境的\n    if (this.pageid == \"devpreview\") {\n      //取缓存数据\n      this.PageSettingData = JSON.parse(window.localStorage[\"devpreview\"]);\n      console.log(\"当前预览的缓存数据\", this.PageSettingData);\n      this.pageid = this.PageSettingData.id;\n      this.loadPageElement();\n    } else {\n      this.$previewApi\n        .fetchPageSettingDataForVersion({\n          pageid: this.pageid,\n          version: \"\", //当前的版本，没有则必须要返回最新的，有版本要返回对应的版本结果\n        })\n        .then((res) => {\n          //获取页面配置数据返回数据结果\n          this.PageSettingData = res.data.data;\n          console.log(\"获取页面配置数据返回数据结果\", this.PageSettingData);\n          this.loadPageElement();\n        });\n    }\n    this.injectInnerActionToWindow();\n  },\n  methods: {\n    /**\n     * 窗口大小更改事件\n     */\n    windowResizeEvent(callback) {\n        window.onresize = function() {\n            var target = this;\n            if (target.resizeFlag) {\n                clearTimeout(target.resizeFlag);\n            }\n            target.resizeFlag = setTimeout(function() {\n                callback();\n                target.resizeFlag = null;\n            }, 100);\n        }\n    },\n    /**\n     * 控制中心抽屉关闭事件\n     */\n    drawerOnClose() {\n      this.drawerVisible = false;\n      this.commonCustomEventFunHandle(null,\"drawerCloseFunction\");\n    },\n    /**\n     * 控制中心切换抽屉时动画结束后的回调\t\n     */\n    drawerOnAfterVisibleChange() {\n        this.commonCustomEventFunHandle(null,\"drawerAfterVisibleChangeFunction\");\n    },\n    /**\n     * 组件加载之前执行\n     */\n    beforeLoadingFunction(){\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\n      if (propData.beforeLoadingFunction&&propData.beforeLoadingFunction.length>0) {\n        this.commonCustomEventFunHandle(propData,\"beforeLoadingFunction\");\n      }\n    },\n    /**\n     * 组件加载完后执行\n     */\n    afterLoadingFunction(){\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\n      if (propData.afterLoadingFunction&&propData.afterLoadingFunction.length>0) {\n        this.commonCustomEventFunHandle(propData,\"afterLoadingFunction\");\n      }\n    },\n    /**\n     * 遮罩层直接关闭窗口\n     */\n    layerClickHandle(e){\n      let dialogId = e.target.getAttribute(\"dialog-id\");\n      if(!dialogId){\n        return;\n      }\n      this.IdmBuiltin_CloseDialog({\n        targetModule:[{moduleId:dialogId}]\n      })\n    },\n    injectInnerActionToWindow(){\n      window.IdmBuiltin_OpenControlSetPanel = this.IdmBuiltin_OpenControlSetPanel;\n      window.IdmBuiltin_CloseControlSetPanel = this.IdmBuiltin_CloseControlSetPanel;\n      window.IdmBuiltin_OpenUrl = this.IdmBuiltin_OpenUrl;\n      window.IdmBuiltin_OpenDialog = this.IdmBuiltin_OpenDialog;\n      window.IdmBuiltin_CloseDialog = this.IdmBuiltin_CloseDialog;\n      window.IdmBuiltin_ShowModule = this.IdmBuiltin_ShowModule;\n      window.IdmBuiltin_HideModule = this.IdmBuiltin_HideModule;\n    },\n    /**\n     * 打开组件控制面板设置\n     * {\n     *   controlSetPanelOption:{\n     *     param:{\n     *        marketModuleId:\"必填，市场组件的ID，组件内取this.moduleObject.comId即可\",\n     *        pageId:\"必填，页面的ID，直接使用 window.IDM.broadcast.pageModule.id 即可获取\",\n     *        packageid:\"必填，组件实例的ID，主要用于区别页面的同一个组件，直接使用 this.moduleObject.packageid 即可获取到\"\n     *     },\n     *     showTop:默认为true，设置是否显示在最顶级页面中，这样做的目的是为了在跨页面的时候遮罩显示在最外面，能覆盖整个窗口\n     *     success:层弹出后的成功回调方法,\n     *     yes:确定按钮回调方法,\n     *     cancel:关闭触发的回调,\n     *     reset:重置后的回调,\n     *     other:其他按钮触发回调方法,\n     *     controlSetPanelId:\"控制面板窗口ID,每次打开的时候自动生成\"\n     *   }\n     * }\n     */\n    IdmBuiltin_OpenControlSetPanel(ctx){\n      let iframeUrl = this.pagePropData.moduleControlCenterSettingUrl;\n      //生成url\n      if(!iframeUrl){\n        return;\n      }\n      iframeUrl=iframeUrl+(iframeUrl.indexOf(\"?\")==-1?\"?\":\"&\");\n      if(ctx&&ctx.controlSetPanelOption){\n        if(ctx.controlSetPanelOption.param\n        &&ctx.controlSetPanelOption.param.marketModuleId\n        &&ctx.controlSetPanelOption.param.pageId\n        &&ctx.controlSetPanelOption.param.packageid){\n          Object.keys(ctx.controlSetPanelOption.param).forEach((key,index)=>{\n            if(index>0){\n              iframeUrl=iframeUrl+\"&\";\n            }\n            iframeUrl=iframeUrl+key+\"=\"+ctx.controlSetPanelOption.param[key];\n          })\n        }else{\n          return;\n        }\n      }\n      this.drawerIframeUrl = IDM.url.getWebPath(iframeUrl);\n      //设置对应的option\n      this.drawerControlSetPanelOption = ctx.controlSetPanelOption||null;\n      this.drawerVisible = true;\n      //执行打开成功的回调方法\n      this.drawerControlSetPanelOption&&this.drawerControlSetPanelOption.success&&this.drawerControlSetPanelOption.success(ctx.controlSetPanelOption.controlSetPanelId);\n    },\n    /**\n     * 关闭组件控制面板设置，这里要判断controlSetPanelId是否与当前页面的一致，一致才能关闭\n     * {\n     *   controlSetPanelOption:{\n     *     controlSetPanelId:\"控制面板窗口ID\"\n     *   }\n     * }\n     */\n    IdmBuiltin_CloseControlSetPanel(ctx){\n      if((ctx&&ctx.innerClose)||(ctx&&ctx.controlSetPanelOption&&ctx.controlSetPanelOption.controlSetPanelId&&this.drawerControlSetPanelOption&&ctx.controlSetPanelOption.controlSetPanelId==this.drawerControlSetPanelOption.controlSetPanelId)){\n        //是关闭这个窗口，执行关闭事件\n        this.drawerOnClose();\n        //判断关闭的类型\n        switch (ctx.actionType) {\n          case \"close\":\n          case \"other\":\n            this.drawerControlSetPanelOption&&this.drawerControlSetPanelOption.other&&this.drawerControlSetPanelOption.other();\n            break;\n          case \"commit\":\n            this.drawerControlSetPanelOption&&this.drawerControlSetPanelOption.yes&&this.drawerControlSetPanelOption.yes();\n            break;\n          case \"reset\":\n            this.drawerControlSetPanelOption&&this.drawerControlSetPanelOption.reset&&this.drawerControlSetPanelOption.reset();\n            break;\n        }\n      }\n    },\n    /**\n     * 打开地址\n     */\n    IdmBuiltin_OpenUrl(ctx){\n      var customParam = ctx.customParam?ctx.customParam:ctx;\n      window.open(IDM.url.getWebPath(customParam.openUrl),customParam.openName,customParam.openFeatures)\n    },\n    /**\n     * 打开窗口\n     * 要给对应的组件发送打开窗口的消息\n     */\n    IdmBuiltin_OpenDialog(ctx){\n      var customParam = ctx.customParam?ctx.customParam:ctx;\n      var moduleIdArray = [];\n      let existsCount = 0;\n      customParam.targetModule.forEach(item=>{\n        moduleIdArray.push(item.moduleId);\n        //去加载\n        const dialogObject = this.renderDialog(item.moduleId);\n        if(dialogObject===false){\n          return;\n        }\n        dialogObject.dialogIsHideing = false;\n        if(ctx.layerOption){\n          dialogObject.layerOption=ctx.layerOption;\n        }\n        //追加到窗口集合中\n        this.dialogObjectList.push(dialogObject);\n        existsCount++;\n        $(\"#\"+item.moduleId).css(\"display\",\"flex\");\n      });\n      //没有找到其中一个就不往下加载了\n      if(existsCount==0){\n        return;\n      }\n      this.dialogVisibleStatus = true;\n      this.dialogIsHideing = false;\n      let that = this;\n      this.$nextTick(function(){\n        //这里即使发送消息也没关系（会存储在等候消息池中），因为会等待组件加载完成再次调用发送消息\n        setTimeout(() => {\n          that.sendBroadcastMessage({\n              type:\"linkageOpenDialog\",\n              message:ctx,\n              rangeModule:moduleIdArray\n            })\n        }, 5);\n      })\n      if(ctx.callback){\n        ctx.callback();\n      }\n    },\n    /**\n     * 关闭窗口\n     * 要给对应的组件发送关闭窗口的消息\n     */\n    IdmBuiltin_CloseDialog(ctx){\n      var customParam = ctx.customParam?ctx.customParam:ctx;\n      var moduleIdArray = [];\n      customParam.targetModule.forEach(item=>{\n        moduleIdArray.push(item.moduleId);\n        this.dialogObjectList.forEach((ditem,dindex)=>{\n          if(ditem.packageid==item.moduleId){\n            ditem.dialogIsHideing = true;\n            $(\".idm_dialog_shade_layer_\"+item.moduleId).attr(\"hideing\",\"hideing\");\n            if(ditem.layerOption){\n              ditem.layerOption.cancel&&ditem.layerOption.cancel(ditem);\n            }\n            //如果是确认按钮调用的关闭则去调用yes方法\n            if(ctx.isOkEvent){\n              ditem.layerOption&&ditem.layerOption.yes&&ditem.layerOption.yes(ditem);\n            }\n          }\n        })\n      });\n      if(this.dialogObjectList.length<=moduleIdArray.length){\n        this.dialogIsHideing = true;\n      }\n      let that = this;\n      that.sendBroadcastMessage({\n          type:\"linkageCloseDialog\",\n          message:ctx,\n          rangeModule:moduleIdArray\n        })\n      setTimeout(() => {\n        customParam.targetModule.forEach(item=>{\n          $(\"#\"+item.moduleId).css(\"display\",\"none\");\n          that.destroyDialog(item.moduleId);\n          //从dialogObjectList中删除\n          if(that.dialogObjectList.length==1){\n            that.dialogObjectList = [];\n            return;\n          }\n          let existsIndex = -1;\n          that.dialogObjectList.forEach((ditem,dindex)=>{\n            if(ditem.packageid==item.moduleId){\n              existsIndex = dindex;\n              if(ditem.layerOption){\n                ditem.layerOption.end&&ditem.layerOption.end(ditem);\n              }\n            }\n          })\n          if (existsIndex > -1) {\n            //存在就清除\n            that.dialogObjectList.splice(existsIndex, 1);\n          }\n        });\n        if(that.dialogObjectList.length==0){\n          that.dialogVisibleStatus = false;\n          that.dialogIsHideing = false;\n        }\n      }, 500);\n      if(ctx.callback){\n        ctx.callback();\n      }\n    },\n    /**\n     * 显示组件\n     * 直接用packageid隐藏\n     */\n    IdmBuiltin_ShowModule(ctx){\n      var customParam = ctx.customParam?ctx.customParam:ctx;\n      var moduleIdArray = [];\n      customParam.targetModule.forEach(item=>{moduleIdArray.push(item.moduleId);$(\"#\"+item.moduleId).show()});\n      this.sendBroadcastMessage({\n          type:\"linkageShowModule\",\n          message:ctx,\n          rangeModule:moduleIdArray\n        })\n      if(ctx.callback){\n        ctx.callback();\n      }\n    },\n    /**\n     * 隐藏组件\n     * 直接用packageid显示\n     */\n    IdmBuiltin_HideModule(ctx){\n      var customParam = ctx.customParam?ctx.customParam:ctx;\n      var moduleIdArray = [];\n      customParam.targetModule.forEach(item=>{moduleIdArray.push(item.moduleId);$(\"#\"+item.moduleId).hide();});\n      this.sendBroadcastMessage({\n          type:\"linkageHideModule\",\n          message:ctx,\n          rangeModule:moduleIdArray\n        })\n      if(ctx.callback){\n        ctx.callback();\n      }\n    },\n    /**\n     * 组件通信：发送消息的方法\n     * @param {\n     *  type:\"自己定义的，统一规定的type：linkageResult（组件联动传结果值）、linkageDemand（组件联动传需求值）、linkageReload（联动组件重新加载）\n     * 、linkageOpenDialog（打开弹窗）、linkageCloseDialog（关闭弹窗）、linkageShowModule（显示组件）、linkageHideModule（隐藏组件）、linkageResetDefaultValue（重置默认值）\"\n     *  message:{实际的消息对象},\n     *  rangeModule:\"为空发送给全部，根据配置的属性中设定的值（值的内容是组件的packageid数组），不取子表的，比如直接 this.$root.propData.compositeAttr[\"attrKey\"]（注意attrKey是属性中定义的bindKey）,这里的格式为：['1','2']\"\",\n     *  className:\"指定的组件类型，比如只给待办组件发送，然后再去过滤上面的值\"\n     *  globalSend:如果为true则全站发送消息，注意全站rangeModule是无效的，只有className才有效，默认为false\n     * } object \n     */\n    sendBroadcastMessage(object){\n        window.IDM.broadcast&&window.IDM.broadcast.send(object);\n    },\n    /**\n     * 同步方式加载应用信息和用户信息\n     * 并且需要判断一下是否已经设置了登录判断，如果设置了则需要确定用户ID是否为空，为空则跳转到设置好的登录地址\n     */\n    async initAppAndUserInfo(propDataObject) {\n      let that = this;\n      let propData = propDataObject.compositeAttr;\n      if (propData.openFetchApplicationInfo && propData.applicationInfoUrl) {\n        await this.$previewApi\n          .fetchApplicationInfo(propData.applicationInfoUrl, {\n            pageid: this.pageid,\n            ...this.commonParam()\n          })\n          .then((res) => {\n            IDM.app.setAppInfo(res.data);\n          })\n          .catch(function (error) {});\n      }\n      if (propData.openFetchUserInfo && propData.userInfoUrl) {\n        await this.$previewApi\n          .fetchUserInfo(propData.userInfoUrl, {\n            pageid: this.pageid,\n            ...this.commonParam()\n          })\n          .then((res) => {\n            IDM.user.setCurrentUserInfo(res.data);\n          })\n          .catch(function (error) {});\n      }\n      let switchUserInfoFiledValue = \"\";\n      if(propData.switchUserInfo&&propData.switchUserInfoFiledName){\n        let filedExp = propData.switchUserInfoFiledName,echoDataName=\"userObject\";\n        var dataObject = {IDM:window.IDM};\n        dataObject[echoDataName] = IDM.user.getCurrentUserInfo();\n\n        if(filedExp){\n          filedExp = echoDataName+(filedExp.startsWiths(\"[\")?\"\":\".\")+filedExp;\n          switchUserInfoFiledValue = window.IDM.express.replace.call(this, \"@[\"+filedExp+\"]\", dataObject);\n        }\n      }else if(propData.switchUserInfo){\n        switchUserInfoFiledValue = IDM.user.getCurrentUserInfo()&&IDM.user.getCurrentUserInfo().data?IDM.user.getCurrentUserInfo().data.userid:\"\";\n      }\n      //判断是否需要登录(这里暂时写死data.userid)\n      if (propData.switchUserInfo && !switchUserInfoFiledValue) {\n        if (propData.loginPageUrl) {\n          //跳转\n          window.location.href = IDM.url.getWebPath(propData.loginPageUrl);\n        } else {\n          window.location.href = \"\";\n        }\n      }\n\n      //应用主题：接口的方式\n      if(propData.openIdmTheme&&propData.themeFetchType==\"customInterface\"&&propData.themeInterfaceUrl){\n        await this.$previewApi\n          .fetchThemeInfo(propData.themeInterfaceUrl, {\n            pageid: this.pageid,\n            ...this.commonParam()\n          })\n          .then((res) => {\n            that.themeInterfaceHandle(res.data,\"resultData\")\n          })\n          .catch(function (error) {});\n      }else if(propData.openIdmTheme&&propData.themeFetchType==\"customFunction\"&&propData.themeCustomFunction&&propData.themeCustomFunction.length>0){\n        //自定义处理函数\n        let switchThemeValue = \"\";\n        propData.themeCustomFunction.forEach(sitem=>{\n          try {\n            switchThemeValue = window[sitem.name]&&window[sitem.name].call(this,{\n              ...this.commonParam(),\n              customParam:sitem.param,\n              _this:that\n            });\n          } catch (error) {\n          }\n        })\n        IDM.theme.setCurrentThemeInfo(switchThemeValue);\n      }\n    },\n    /**\n     * 自定义接口与页面接口统一回调处理主题的函数\n     */\n    themeInterfaceHandle(resultData,echoDataName){\n      let that = this;\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\n      let themeDataFiled = propData.themeDataFiled,\n      themeDataFunction = propData.themeDataFunction,\n      switchThemeValue=resultData;\n      if(themeDataFiled){\n        let filedExp = themeDataFiled;\n        var dataObject = {IDM:window.IDM};\n        dataObject[echoDataName] = resultData;\n\n        if(filedExp){\n          filedExp = echoDataName+(filedExp.startsWiths(\"[\")?\"\":\".\")+filedExp;\n          switchThemeValue = window.IDM.express.replace.call(this, \"@[\"+filedExp+\"]\", dataObject);\n        }\n      }\n      if(themeDataFunction&&themeDataFunction.length>0){\n        var paramObject = {\n              ...that.commonParam(),\n              _this:that\n            };\n          paramObject[echoDataName] = resultData;\n        themeDataFunction.forEach(sitem=>{\n          try {\n            switchThemeValue = window[sitem.name]&&window[sitem.name].call(this,{customParam:sitem.param,...paramObject});\n          } catch (error) {\n          }\n        })\n      }\n      IDM.theme.setCurrentThemeInfo(switchThemeValue);\n    },\n    /**\n     * 加载页面组件\n     */\n    async loadPageElement() {\n      //追加js脚本\n      if(this.PageSettingData.page.actions&&this.PageSettingData.page.actions.compiled){\n       var pageScriptDom = $(\"<script type=\\\"text/javascript\\\" id=\\\"idm_page_script\\\"/>\");\n       $(\"body\").append(pageScriptDom.html(\"var exports={};\"+this.PageSettingData.page.actions.compiled))\n      }\n      //把map中的数据更新下\n      this.PageSettingData.page.componentsMap.forEach((item) => {\n        item.env = \"production\";\n      });\n      //把页面数据注册到消息桥接器中\n      this.IDM.broadcast.registerModule(this.PageSettingData);\n      //修改页面标题\n      document.title = this.PageSettingData.pageBaseInfo.title || \"IDM预览\";\n      //先加载应用信息\n      await this.initAppAndUserInfo(this.PageSettingData.page.layout.props);\n      //组件开始加载之前执行\n      this.beforeLoadingFunction();\n      //页面的属性渲染\n      this.pageAttrPropHandle(this.PageSettingData.page.layout.props);\n      //执行组件加载\n      this.$nextTick(function () {\n        this.initModuleTreeToPage(null, true, this.PageSettingData.page.layout);\n      });\n    },\n    /**\n     * 请求页面设置的所有接口并回调给每个组件\n     */\n    requestPageCommonInterfaceData(){\n      //调用桥接器页面加载(包括实时渲染)完成事件\n      this.IDM.broadcast.pageLoadCompleteAfter();\n\n      if(this.isloadPageCommonInterface){\n        return;\n      }\n      this.isloadPageCommonInterface = true;\n      console.log(\"页面首屏组件已全部加载完毕！！！\")\n      this.afterLoadingFunction();\n      var interfaceList = (this.PageSettingData.page.layout.props.compositeAttr?this.PageSettingData.page.layout.props.compositeAttr.interfaceList:[])||[];\n      if(interfaceList.length==0){\n        return;\n      }\n      //先获取页面ID，然后再获取所有的组件ID\n      var pageId = this.pageid;\n      var moduleIdArray = [],componentIdArray=[];\n      this.PageSettingData.page.componentsMap.forEach((item) => {\n        if(item.packageid!=pageId){\n          moduleIdArray.push(item.packageid);\n          componentIdArray.push(item.comId);\n        }\n      });\n      //所有地址的url参数转换\n      var params = {\n        idmPageId:pageId,\n        moduleIds:moduleIdArray.join(\",\"),\n        componentIds:componentIdArray.join(\",\")\n      };\n      let urlObject = IDM.url.queryObject();\n      Object.keys(urlObject).forEach((key)=>{\n        params[key]=urlObject[key];\n      })\n      this.orderlyRequestInterface(interfaceList,0,params);\n    },\n    /**\n     * 有序的加载接口并且回调各个组件\n     */\n    orderlyRequestInterface(interfaceList,index,params){\n      if(interfaceList.length<=index){\n        return;\n      }\n      var item = interfaceList[index];\n      index = index+1;\n      let that = this;\n      // preAllowFunction\n      if(item.preAllowFunction&&item.preAllowFunction.length>0){\n        try {\n          var itemParam = {...that.commonParam(),...item.preAllowFunction[0].param};\n          let _isPass = window[item.preAllowFunction[0].name]&&window[item.preAllowFunction[0].name].call(this,itemParam);\n          if(_isPass===false){\n            that.orderlyRequestInterface(interfaceList,index,params);\n            return;\n          }\n        } catch (error) {\n        }\n      }\n      if(item.interfaceMode==\"post\"&&item.interfaceUrl){\n          if(item.formDataFunction&&item.formDataFunction.length>0){\n            try {\n              var itemParam = {...that.commonParam(),...item.formDataFunction[0].param};\n              let formDataParam = window[item.formDataFunction[0].name]&&window[item.formDataFunction[0].name].call(this,itemParam);\n              params = {...params,...formDataParam}\n            } catch (error) {\n            }\n          }\n          this.$previewApi\n          .postPageInterfaceInfo(item.interfaceUrl,params,{\n            headers:item.interfaceContentType?{\n              \"Content-Type\": item.interfaceContentType||\"application/json;charset=UTF-8\"\n            }:{}\n          })\n          .then((res) => {\n            //res.data\n            //循环调用组件接收数据的方法\n            that.callbackModuleSetContext(item,res.data);\n            that.orderlyRequestInterface(interfaceList,index,params);\n          })\n          .catch(function (error) {\n            that.orderlyRequestInterface(interfaceList,index,params);\n          });\n        }else if(item.interfaceMode==\"get\"&&item.interfaceUrl){\n          this.$previewApi\n          .getPageInterfaceInfo(item.interfaceUrl,params)\n          .then((res) => {\n            //res.data\n            //循环调用组件接收数据的方法\n            that.callbackModuleSetContext(item,res.data);\n            that.orderlyRequestInterface(interfaceList,index,params);\n          })\n          .catch(function (error) {\n            that.orderlyRequestInterface(interfaceList,index,params);\n          });\n        }else{\n          that.orderlyRequestInterface(interfaceList,index,params);\n        }\n    },\n    /**\n     * 回调组件的设置值的方法\n     */\n    callbackModuleSetContext(item,resData){\n      this.PageSettingData.page.componentsMap.forEach((sitem) => {\n                  sitem.idmSetContextValue&&sitem.idmSetContextValue({\n                              type:\"pageCommonInterface\",\n                              key:item.resultDataName,\n                              data:resData\n                          })\n            });\n      //自定义处理返回结果函数\n      if(item.interfaceRunLaterFunction&&item.interfaceRunLaterFunction.length>0){\n        var interfaceRunLaterFunction = item.interfaceRunLaterFunction;\n        interfaceRunLaterFunction.forEach(sitem=>{\n          try {\n            window[sitem.name]&&window[sitem.name].call(this,{\n              ...this.commonParam(),\n              customParam:sitem.param,\n              resultData:resData,\n              _this:this\n            });\n          } catch (error) {\n          }\n        })\n      }\n      let propData = this.PageSettingData.page.layout.props.compositeAttr||{};\n      //应用主题：页面结果集\n      if(propData.openIdmTheme&&propData.themeFetchType==\"pageInterfaceResult\"&&propData.themeDataName&&item.resultDataName==propData.themeDataName){\n        this.themeInterfaceHandle(resData,propData.themeDataName)\n      }\n    },\n    /**\n     * 渲染页面的样式\n     */\n    pageAttrPropHandle(propDataObject) {\n      let propData = propDataObject.compositeAttr;\n      this.pagePropData = propData;\n      var styleObject = {};\n      if (propData.bgSize && propData.bgSize == \"custom\") {\n        styleObject[\"background-size\"] =\n          (propData.bgSizeWidth\n            ? propData.bgSizeWidth.inputVal + propData.bgSizeWidth.selectVal\n            : \"auto\") +\n          \" \" +\n          (propData.bgSizeHeight\n            ? propData.bgSizeHeight.inputVal + propData.bgSizeHeight.selectVal\n            : \"auto\");\n      } else if (propData.bgSize) {\n        styleObject[\"background-size\"] = propData.bgSize;\n      }\n      if (propData.positionX && propData.positionX.inputVal) {\n        styleObject[\"background-position-x\"] =\n          propData.positionX.inputVal + propData.positionX.selectVal;\n      }\n      if (propData.positionY && propData.positionY.inputVal) {\n        styleObject[\"background-position-y\"] =\n          propData.positionY.inputVal + propData.positionY.selectVal;\n      }\n      for (const key in propData) {\n        if (propData.hasOwnProperty.call(propData, key)) {\n          const element = propData[key];\n          if (!element && element !== false) {\n            continue;\n          }\n          switch (key) {\n            case \"width\":\n            case \"height\":\n              styleObject[key] = element;\n              break;\n            case \"bgColor\":\n              if (element.hex8) {\n                styleObject[\"background-color\"] = element.hex8;\n              }\n              break;\n            case \"box\":\n              if (element.marginTopVal) {\n                styleObject[\"margin-top\"] = `${element.marginTopVal}`;\n              }\n              if (element.marginRightVal) {\n                styleObject[\"margin-right\"] = `${element.marginRightVal}`;\n              }\n              if (element.marginBottomVal) {\n                styleObject[\"margin-bottom\"] = `${element.marginBottomVal}`;\n              }\n              if (element.marginLeftVal) {\n                styleObject[\"margin-left\"] = `${element.marginLeftVal}`;\n              }\n              if (element.paddingTopVal) {\n                styleObject[\"padding-top\"] = `${element.paddingTopVal}`;\n              }\n              if (element.paddingRightVal) {\n                styleObject[\"padding-right\"] = `${element.paddingRightVal}`;\n              }\n              if (element.paddingBottomVal) {\n                styleObject[\"padding-bottom\"] = `${element.paddingBottomVal}`;\n              }\n              if (element.paddingLeftVal) {\n                styleObject[\"padding-left\"] = `${element.paddingLeftVal}`;\n              }\n              break;\n            case \"bgImgUrl\":\n              styleObject[\"background-image\"] = `url(${IDM.url.getWebPath(\n                element\n              )})`;\n              break;\n            case \"icoImgUrl\":\n              //IDM.url.getWebPath(element)\n              var link = document.createElement('link');\n              link.type = 'image/x-icon';\n              link.rel = 'shortcut icon';\n              link.href = IDM.url.getWebPath(element);\n              document.getElementsByTagName('head')[0].appendChild(link);\n              break;\n            case \"positionX\":\n              //背景横向偏移\n\n              break;\n            case \"positionY\":\n              //背景纵向偏移\n\n              break;\n            case \"bgRepeat\":\n              //平铺模式\n              styleObject[\"background-repeat\"] = element;\n              break;\n            case \"bgAttachment\":\n              //背景模式\n              styleObject[\"background-attachment\"] = element;\n              break;\n            case \"border\":\n              if (element.border.top.width > 0) {\n                styleObject[\"border-top-width\"] =\n                  element.border.top.width + element.border.top.widthUnit;\n                styleObject[\"border-top-style\"] = element.border.top.style;\n                if (element.border.top.colors.hex8) {\n                  styleObject[\"border-top-color\"] =\n                    element.border.top.colors.hex8;\n                }\n              }\n              if (element.border.right.width > 0) {\n                styleObject[\"border-right-width\"] =\n                  element.border.right.width + element.border.right.widthUnit;\n                styleObject[\"border-right-style\"] = element.border.right.style;\n                if (element.border.right.colors.hex8) {\n                  styleObject[\"border-right-color\"] =\n                    element.border.right.colors.hex8;\n                }\n              }\n              if (element.border.bottom.width > 0) {\n                styleObject[\"border-bottom-width\"] =\n                  element.border.bottom.width + element.border.bottom.widthUnit;\n                styleObject[\"border-bottom-style\"] =\n                  element.border.bottom.style;\n                if (element.border.bottom.colors.hex8) {\n                  styleObject[\"border-bottom-color\"] =\n                    element.border.bottom.colors.hex8;\n                }\n              }\n              if (element.border.left.width > 0) {\n                styleObject[\"border-left-width\"] =\n                  element.border.left.width + element.border.left.widthUnit;\n                styleObject[\"border-left-style\"] = element.border.left.style;\n                if (element.border.left.colors.hex8) {\n                  styleObject[\"border-left-color\"] =\n                    element.border.left.colors.hex8;\n                }\n              }\n\n              styleObject[\"border-top-left-radius\"] =\n                element.radius.leftTop.radius +\n                element.radius.leftTop.radiusUnit;\n              styleObject[\"border-top-right-radius\"] =\n                element.radius.rightTop.radius +\n                element.radius.rightTop.radiusUnit;\n              styleObject[\"border-bottom-left-radius\"] =\n                element.radius.leftBottom.radius +\n                element.radius.leftBottom.radiusUnit;\n              styleObject[\"border-bottom-right-radius\"] =\n                element.radius.rightBottom.radius +\n                element.radius.rightBottom.radiusUnit;\n              break;\n            case \"font\":\n              styleObject[\"font-family\"] = element.fontFamily;\n              if (element.fontColors.hex8) {\n                styleObject[\"color\"] = element.fontColors.hex8;\n              }\n              styleObject[\"font-weight\"] =\n                element.fontWeight && element.fontWeight.split(\" \")[0];\n              styleObject[\"font-style\"] = element.fontStyle;\n              styleObject[\"font-size\"] =\n                element.fontSize + element.fontSizeUnit;\n              styleObject[\"line-height\"] =\n                element.fontLineHeight +\n                (element.fontLineHeightUnit == \"-\"\n                  ? \"\"\n                  : element.fontLineHeightUnit);\n              styleObject[\"text-align\"] = element.fontTextAlign;\n              styleObject[\"text-decoration\"] = element.fontDecoration;\n              break;\n            case \"layout\":\n              if (element.display && element.display == \"flex\") {\n                styleObject[\"display\"] = \"flex\";\n                if (element.direction) {\n                  styleObject[\"flex-direction\"] = element.direction;\n                }\n                if (element.direction) {\n                  styleObject[\"align-items\"] = element.align;\n                }\n                if (element.direction) {\n                  styleObject[\"justify-content\"] = element.justify;\n                }\n              } else if (element.display) {\n                styleObject[\"display\"] = element.display;\n              }\n              break;\n            case \"pageMinWidth\":\n              if(element.inputVal&&element.selectVal){\n                styleObject[\"min-width\"] = element.inputVal+element.selectVal;\n              }\n              break;\n          }\n        }\n      }\n      this.$nextTick(function (params) {\n        if (propData.watermarkType && propData.watermarkType != \"none\") {\n          var _watermarkFont = this.$replace(propData.watermarkFont, {\n              IDM: IDM,\n            }),\n            _watermarkFont1 = this.$replace(propData.watermarkFont1, {\n              IDM: IDM,\n            });\n          //文字水印\n          IDM.watermark.set(\n            this.$refs.idm_page_root,\n            propData.watermarkZindex,\n            propData.watermarkType != \"font\"\n              ? propData.watermarkImg\n              : _watermarkFont,\n            propData.watermarkType == \"image\" ? \"\" : _watermarkFont1,\n            {\n              fontColor:\n                propData.watermarkColor && propData.watermarkColor.hex8,\n              fontSize: `${propData.watermarkFontSize}px`,\n              width: propData.watermarkSize,\n              height: propData.watermarkSize,\n              rotate: propData.watermarkRotate,\n              imgSize: propData.watermarkImgSize,\n              imgLeftSize: propData.watermarkImgLeftSize,\n              fontLeftSize: propData.watermarkFontLeftSize,\n              opacity: propData.watermarkOpacity / 100,\n              topSize: propData.watermarkTopSize,\n            }\n          );\n        } else {\n          IDM.watermark.close(this.$refs.idm_page_root);\n        }\n      });\n      IDM.setStyleToPageHead(\"PAGE_\" + this.PageSettingData.id, styleObject);\n      //加载外部js和css\n      if(propData.resourceList&&propData.resourceList.length>0){\n        propData.resourceList.forEach(item=>{\n          if(item.resourceType==\"js\"){\n            IDM.module.loadJs(IDM.url.getWebPath(item.resourceUrl),true,function(){\n\n            },{async:item.async,defer:item.defer})\n          }else{\n            IDM.module.loadCss(IDM.url.getWebPath(item.resourceUrl),true,function(){\n\n            })\n          }\n        })\n      }\n    },\n    /**\n     * 渲染加载指定ID的窗口\n     * 首先取出对应的数据，判断是否\n     */\n    renderDialog(moduleId){\n      const opModule = this.getModuleTree(\n        this.PageSettingData.page.layout.children,\n        moduleId\n      );\n      if(!opModule){\n        return false;\n      }\n      if(opModule.renderType==\"firstrender\"||opModule.renderType==\"activerender\"){\n        opModule.renderLicence = true;\n        if(opModule.renderType==\"firstrender\"&&opModule.loaded){\n          return _.cloneDeep(opModule);\n        }else{\n          //实时渲染加载之前要把页面组件加载状态设置为false，否则实时渲染的组件消息通信无法准确接收到消息，需要等全部加载完再接收消息\n          this.IDM.broadcast.pageModuleLoadCompleteBefore();\n          //修改成全部未加载\n          this.resetLayoutInnerModuleLoadedStatus(opModule);\n          this.initModuleTreeToPage(opModule)\n        }\n      }\n      return _.cloneDeep(opModule);\n    },\n    /**\n     * 销毁指定ID的窗口\n     */\n    destroyDialog(moduleId){\n      const opModule = this.getModuleTree(\n        this.PageSettingData.page.layout.children,\n        moduleId\n      );\n      if(opModule&&opModule.renderType==\"activerender\"){\n        $(\"#\"+moduleId).remove();\n      }\n    },\n    /**\n     * 加载组件树到页面中，递归逐级加载\n     * moduleData：要渲染的组件数据树结构\n     * ischildren：是否为子组件数据\n     * fModule：子组件所在的父级容器组件\n     * addNextForModulePackageid：要追加到哪个组件的下面（非子级）的packageid\n     */\n    initModuleTreeToPage(\n      moduleData,\n      ischildren,\n      fModule,\n      addNextForModulePackageid\n    ) {\n      let that = this;\n      moduleData = moduleData || that.PageSettingData.page.layout.children;\n      if (!(moduleData instanceof Array)) {\n        moduleData = [moduleData];\n      }\n      //循环取出当前一级未加载的组件\n      var loadModule;\n      moduleData.forEach((item) => {\n        if(item.comType==\"dialog\"&&item.renderLicence!==true){\n          let dialogRenderType = item.props.compositeAttr.dialogRenderType;\n          //beforehand：不用判断直接放行可以进行渲染  firstrender：按需首次渲染  activerender：激活时渲染\n          item.renderType = dialogRenderType;\n          //renderLicence：渲染许可，true表示可以进行渲染，false表示暂时不渲染跳过\n          item.renderLicence = !(dialogRenderType==\"firstrender\"||dialogRenderType==\"activerender\");\n          if(!item.renderLicence){\n            return;\n          }\n        }\n        if (!item.loaded && !loadModule) {\n          loadModule = item;\n          item.loaded = true;\n        }\n      });\n      if (!loadModule) {\n        //一级没有待加载的，再去加载子级\n        moduleData.forEach((item) => {\n          if(item.comType==\"dialog\"&&!item.renderLicence){\n            //渲染许可为false跳过不渲染下面的子级\n            return;\n          }\n          if (item.children && item.children.length > 0) {\n            that.initModuleTreeToPage(item.children, true, item);\n          }\n        });\n      } else {\n        //追加容器\n        var comObject = loadModule;\n        comObject.mountComplete = this.moduleMountComplete;\n        comObject.moduleReload = this.moduleReload;\n        //追加div\n        var newComDiv = that.createModuleDom(comObject);\n        var containerId = \"\";\n        if(comObject.comType==\"dialog\"){\n          containerId = that.PageSettingData.id;\n          $(\"#idm_dialog_wrap\").append(newComDiv);\n        }else if (addNextForModulePackageid) {\n          //添加到下方\n          containerId = addNextForModulePackageid;\n          $(\"#\" + containerId).after(newComDiv);\n        } else if (ischildren && fModule) {\n          containerId = fModule.packageid;\n          if (containerId == that.PageSettingData.id) {\n            $(\"#PAGE_\" + containerId).append(newComDiv);\n          } else {\n            var containerDom = $(\"#\" + containerId);\n            containerDom.removeClass(\"drag_container_empty\");\n            var containerInnerDom = containerDom.find(\">*[idm-ctrl]\");\n            containerInnerDom.show();\n            if (comObject.containerIndex || comObject.containerIndex == \"0\") {\n              //添加内部容器，同时要删除drag_container_empty\n              var innercontainer = containerInnerDom.find(\n                \".drag_container[idm-ctrl-id='\" +\n                  fModule.id +\n                  \"'][idm-container-index=\" +\n                  comObject.containerIndex +\n                  \"]\"\n              );\n              innercontainer&&innercontainer.append(newComDiv);\n              innercontainer&&innercontainer.removeClass(\"drag_container_empty\");\n            } else {\n              containerInnerDom.append(newComDiv);\n            }\n          }\n        }\n        //关联ID\n        comObject.env = \"production\";\n        that.IDM.module.addModuleToQueue(comObject);\n      }\n\n      return loadModule;\n    },\n    /**\n     * 判断是否加载完成,未完成返回false，主要用于拷贝的时候递归加载完成的判断\n     */\n    pageModuleDataIsLoaded(moduleData, isnotloadinner) {\n      let that = this;\n      var isLoaded = true;\n      moduleData = moduleData || that.PageSettingData.page.layout.children;\n      if (!(moduleData instanceof Array)) {\n        moduleData = [moduleData];\n      }\n      moduleData.forEach((item) => {\n        if(item.comType==\"dialog\"&&!item.renderLicence){\n          //渲染许可为false跳过不渲染下面的子级\n          return;\n        }\n        if (!item.loaded) {\n          isLoaded = false;\n          // if(isnotloadinner&&(item.containerIndex||item.containerIndex==\"0\")){\n          //   isLoaded = true;\n          // }\n        }\n      });\n      if (isLoaded) {\n        moduleData.forEach((item) => {\n          if(item.comType==\"dialog\"&&!item.renderLicence){\n            //渲染许可为false跳过不渲染下面的子级\n            return;\n          }\n          if (item.children && item.children.length > 0 && isLoaded) {\n            isLoaded = this.pageModuleDataIsLoaded(\n              item.children,\n              isnotloadinner\n            );\n          }\n        });\n      }\n      return isLoaded;\n    },\n    /**\n     * 创建组件dom外部元素\n     */\n    createModuleDom(comObject) {\n      let that = this;\n      //包裹最外层的ID\n      comObject.packageid = comObject.packageid || \"component_\" + IDM.UUID();\n      //组件内部ID，这里可能不受核心框架控制，需要谨慎使用\n      comObject.id = comObject.id || comObject.packageid + \"_inner\";\n      //追加div\n      var newComDiv = $(\"<div />\");\n      //追加设置属性\n      newComDiv.attr(\"id\", comObject.packageid);\n      newComDiv.attr(\"idm-com-anchor-id\", comObject.packageid);\n      newComDiv.attr(\"idm-com-id\", comObject.comId);\n      newComDiv.attr(\"idm-com-classid\", comObject.classId);\n      newComDiv.attr(\"idm-com-classname\", comObject.className);\n      //追加组件标识\n      newComDiv.addClass(\"idm_module\");\n      newComDiv.addClass(comObject.packageid);\n      //追加内部div，提供给组件加载使用，只有ID，后续将不会再使用\n      newComDiv.append($(\"<div />\").attr(\"id\", comObject.id));\n      return newComDiv;\n    },\n    /**\n     * 获取指定层级的组件树结构数据\n     */\n    getModuleTree(module, packageid) {\n      if (!(module instanceof Array)) {\n        module = [module];\n      }\n      var _findModule;\n      module.forEach((item) => {\n        if (item.packageid == packageid) {\n          _findModule = item;\n        } else if (!_findModule && item.children) {\n          _findModule = this.getModuleTree(item.children, packageid);\n        }\n      });\n      return _findModule;\n    },\n    /**\n     * 提供组件或组件内部容器的重新加载\n     */\n    moduleReload(packageid,innerContainerIndex){\n      //先查找模块，然后根据innerContainerIndex来删除对应的加载状态标识\n      const reloadModule = this.getModuleTree(\n        this.PageSettingData.page.layout.children,\n        packageid\n      );\n      let reloadModuleArray = [reloadModule];\n      let parentModule;\n      if(innerContainerIndex||innerContainerIndex==\"0\"){\n        //存在内部索引\n        reloadModuleArray = [];\n        reloadModule&&reloadModule.children&&reloadModule.children.forEach(item=>{\n          if(item.containerIndex==innerContainerIndex){\n            reloadModuleArray.push(item);\n          }\n        })\n        parentModule = reloadModule;\n      }else{\n        //找出当前的父级\n        let globalIdArray = reloadModule.globalId.split(\".\");\n        const globalId = globalIdArray.length<=2?globalIdArray[0]:globalIdArray[globalIdArray.length-2];\n        parentModule = this.getModuleTree(\n          this.PageSettingData.page.layout.children,\n          globalId\n        );\n      }\n      //删除全部加载状态\n      this.resetLayoutInnerModuleLoadedStatus(reloadModuleArray);\n      reloadModuleArray&&reloadModuleArray.forEach((item) => {\n        $(\"#\" + item.packageid).remove();\n      });\n      \n      //调用重新加载\n      this.initModuleTreeToPage(\n        reloadModuleArray,\n        true,\n        parentModule,\n        false\n      );\n    },\n    /**\n     * 组件挂载完成回调事件\n     */\n    moduleMountComplete(module) {\n      let that = this;\n      //把事件合并到map中\n      this.PageSettingData.page.componentsMap.forEach((item) => {\n        if (item.packageid == module.packageid) {\n          item.idmBroadcastMessage = module.idmBroadcastMessage;\n          item.idmSetContextValue = module.idmSetContextValue;\n          item.idmGetContextValue = module.idmGetContextValue;\n        }\n      });\n      console.log(\"挂载完成，回调返回的数据\", module);\n      const opModule = this.getModuleTree(\n        this.PageSettingData.page.layout.children,\n        module.packageid\n      );\n      if (opModule.children && opModule.children.length > 0) {\n        //有子组件，代表是容器类组件，首先获取是否加载完成且有子元素inner\n        const targetNode = $(\"#\" + module.packageid);\n        if (targetNode.find(\":visible\").length == 0) {\n          //代表内容元素还是空的，没有加载完成\n          var invcount = 0;\n          var intval = setInterval(function () {\n            invcount++;\n            if (\n              $(\"#\" + module.packageid).find(\":visible\").length == 0 &&\n              invcount <= 20\n            ) {\n              return;\n            }\n            clearInterval(intval);\n            that.moduleMountCompleteCommon(module);\n          }, 5);\n        } else {\n          //加载时序问题，延迟3毫秒\n          setTimeout(() => {\n            that.moduleMountCompleteCommon(module);\n          }, 3);\n        }\n      } else {\n          //加载时序问题，延迟3毫秒\n          setTimeout(() => {\n            that.moduleMountCompleteCommon(module);\n          }, 3);\n      }\n      // this.initModuleInnerEventHandle(module);\n      // class名称表示：\n      // drag_container_empty：空容器类名\n      // drag_container：容器，可拖拽过来\n      // id作为class类名：样式设置\n      // idm_module：所有组件最外层都有的类名\n      // drag_container_inlineblock: 代表是行内容器\n\n      // 属性 ：\n      // idm-com-anchor-id：代表新生成的唯一组件ID\n      // id:代表新生成的唯一组件ID\n      // idm-com-id：组件的ID\n      // idm-com-classid：组件的包名\n      // idm-com-classname：组件的类名\n      // idm-container-index：容器索引，在一个组件内有两个或以上的容器就会作用到\n    },\n    moduleMountCompleteCommon(module){\n      var moduleDom = $(\"#\" + module.packageid + \"\");\n      var moduleInnerDom = moduleDom.find(\">*[idm-ctrl]\");\n      var idmCtrl = moduleInnerDom.attr(\"idm-ctrl\"),\n        idmCtrlId = moduleInnerDom.attr(\"idm-ctrl-id\"),\n        domId = moduleInnerDom.attr(\"id\");\n      if (!domId) {\n        moduleInnerDom.attr(\"id\", idmCtrlId);\n      }\n      switch (idmCtrl) {\n        case \"drag_container\": //容器\n          moduleDom.addClass(\"drag_container\");\n          break;\n        case \"drag_container_inlineblock\": //行内容器\n          moduleDom.addClass(\"drag_container drag_container_inlineblock\");\n          break;\n        case \"idm_module\": //非容器组件\n          break;\n      }\n\n      //如果没有加载完成则先判断下，没有完成则继续加载\n      if (!this.pageModuleDataIsLoaded(null, true)) {\n        this.$nextTick(function () {\n          this.initModuleTreeToPage(\n            null,\n            true,\n            this.PageSettingData.page.layout\n          );\n        });\n      }else{\n        this.requestPageCommonInterfaceData();\n      }\n    },\n    /**\n     * 加载组件内部容器组件事件\n     * 参数：\n     * module：{packageid:组件包id，组件内部使用的id}\n     */\n    initModuleInnerEventHandle(module) {\n      let that = this;\n      //获取是否存在内部容器组件\n      var moduleDom = $(\"#\" + module.packageid + \"\");\n      var moduleInnerDom = moduleDom.find(\n        \".drag_container[idm-ctrl-id='\" + module.id + \"'][idm-ctrl-inner]\"\n      );\n      if (moduleInnerDom.length > 0) {\n        //内部组件重新追加，因为上面哪种加载方式会导致没加载完\n        const opModule = this.getModuleTree(\n          this.PageSettingData.page.layout.children,\n          module.packageid\n        );\n        this.resetLayoutInnerModuleLoadedStatus(opModule.children);\n        if (opModule.children && opModule.children.length > 0) {\n          opModule.children.forEach((item) => {\n            $(\"#\" + item.packageid).remove();\n          });\n          this.initModuleTreeToPage(opModule.children, true, opModule);\n        }\n      }\n    },\n    /**\n     * 加载前重置所有加载状态\n     */\n    resetLayoutInnerModuleLoadedStatus(module) {\n      if (!(module instanceof Array)) {\n        module = [module];\n      }\n      module.forEach((item) => {\n        delete item.loaded;\n        if (item.children && item.children.length > 0) {\n          this.resetLayoutInnerModuleLoadedStatus(item.children);\n        }\n      });\n    },\n    /**\n     * 通用自定义函数\n     */\n    commonCustomEventFunHandle(propData,name){\n      let that = this;\n      propData = propData||this.pagePropData;\n      var customHandle = propData[name],resultData;\n      customHandle &&\n        customHandle.forEach((item) => {\n          resultData = window[item.name] &&\n            window[item.name].call(this, {\n              ...that.commonParam(),\n              customParam: item.param,\n              _this: that\n            });\n        });\n      return resultData\n    },\n    /**\n     * 通用的url参数对象\n     * 所有地址的url参数转换\n     */\n    commonParam(){\n      let urlObject = IDM.url.queryObject();\n      var params = {\n        pageId:\n          window.IDM.broadcast && window.IDM.broadcast.pageModule\n            ? window.IDM.broadcast.pageModule.id\n            : \"\",\n        urlData: JSON.stringify(urlObject),\n      };\n      return params;\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\nhtml,\nbody,\nbody > div.idm-root-element,\nbody > div .idm_render_engine_container,\nbody > div #idm_render_engine_page_container,\nbody > div .idm_page_root {\n  min-height: 100%;\n}\nbody > div.idm-root-element,\nbody > div .idm_render_engine_container,\nbody > div #idm_render_engine_page_container {\n  height: 100%;\n}\n/**\n控制中心抽屉\n*/\n.idm_module_setting_drawer{\n  .ant-drawer-wrapper-body{\n    display: flex;\n    flex-direction: column;\n    .ant-drawer-body{\n      flex-grow: 2;\n      padding: 0;\n      .idm_drawer_iframe_basestyle{\n        border: none;\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n}\n\n/*\n模态窗口容器\n*/\n.idm_dialog_wrap_preview{\n    position: fixed;\n    top: 0px;\n    right: 0px;\n    left: 0px;\n    bottom: 0px;\n    z-index: 59;\n    // display: flex;\n    // align-items: center;\n    // justify-content: center;\n    // animation:idm_dialog_wrap_shade_animation 0.3s;\n    /*Safari and Chrome*/\n    // -webkit-animation:idm_dialog_wrap_shade_animation 0.3s;\n    .idm_dialog_shade_layer{\n      // background: transparent;\n      background-color: rgba(0,0,0,.4);\n      animation:idm_dialog_wrap_shade_animation 0.3s;\n      /*Safari and Chrome*/\n      -webkit-animation:idm_dialog_wrap_shade_animation 0.3s;\n      // z-index: 0;\n      &[hideing='hideing']{\n        animation:idm_dialog_wrap_shade_animation_hide 0.52s;\n        /*Safari and Chrome*/\n        -webkit-animation:idm_dialog_wrap_shade_animation_hide 0.52s;\n      }\n    }\n    &>div{\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n    }\n    &>div.idm_module{\n      display: none;\n      pointer-events:none;\n      &>div{\n        pointer-events:auto\n      }\n      &.topLeft{\n        display: flex;\n        align-items:flex-start;\n        justify-content:flex-start;\n      }\n      &.topCenter{\n        display: flex;\n        align-items:flex-start;\n        justify-content:center;\n      }\n      &.topRight{\n        display: flex;\n        align-items:flex-start;\n        justify-content:flex-end;\n      }\n      &.centerLeft{\n        display: flex;\n        align-items:center;\n        justify-content:flex-start;\n      }\n      &.center{\n        display: flex;\n        align-items:center;\n        justify-content:center;\n      }\n      &.centerRight{\n        display: flex;\n        align-items:center;\n        justify-content:flex-end;\n      }\n      &.bottomLeft{\n        display: flex;\n        align-items:flex-end;\n        justify-content:flex-start;\n      }\n      &.bottomCenter{\n        display: flex;\n        align-items:flex-end;\n        justify-content:center;\n      }\n      &.bottomRight{\n        display: flex;\n        align-items:flex-end;\n        justify-content:flex-end;\n      }\n    }\n    &[hideing='hideing']{\n      animation:idm_dialog_wrap_shade_animation_hide 0.52s;\n      /*Safari and Chrome*/\n      -webkit-animation:idm_dialog_wrap_shade_animation_hide 0.52s;\n    }\n}\n@keyframes idm_dialog_wrap_shade_animation\n{\nfrom {opacity: 0;}\nto {opacity: 1;}\n}\n\n@-webkit-keyframes idm_dialog_wrap_shade_animation /*Safari and Chrome*/\n{\nfrom {opacity: 0;}\nto {opacity: 1;}\n}\n@keyframes idm_dialog_wrap_shade_animation_hide\n{\nfrom {opacity: 1;}\nto {opacity: 0;}\n}\n\n@-webkit-keyframes idm_dialog_wrap_shade_animation_hide /*Safari and Chrome*/\n{\nfrom {opacity: 1;}\nto {opacity: 0;}\n}\n</style>","import mod from \"-!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--13-0!../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Preview.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--13-0!../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Preview.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Preview.vue?vue&type=template&id=39ae7ec8&\"\nimport script from \"./Preview.vue?vue&type=script&lang=js&\"\nexport * from \"./Preview.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Preview.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Preview.vue?vue&type=style&index=0&lang=scss&\"","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"sourceRoot":""}