{"version":3,"sources":["webpack:///./src/views/Preview.vue?f592","webpack:///./src/views/Preview.vue","webpack:///./src/api/preview.js","webpack:///./src/plugins/preview.js","webpack:///./src/views/mixin.js","webpack:///./src/views/Page.vue","webpack:///src/views/Page.vue","webpack:///./src/views/Page.vue?3659","webpack:///./src/views/Page.vue?384b","webpack:///src/views/Preview.vue","webpack:///./src/views/Preview.vue?cfd7","webpack:///./src/views/Preview.vue?3427","webpack:///./node_modules/_@babel_runtime@7.19.4@@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/_@babel_runtime@7.19.4@@babel/runtime/helpers/esm/regeneratorRuntime.js"],"names":["render","_vm","this","_c","_self","staticClass","attrs","on","transitionAfterEnter","_l","AppPageList","page","index","keep","key","pageid","ref","routerId","refInFor","tag","display","devpreview","mainPage","mainPageSettingHandle","_e","pagePropData","drawerTitleShow","drawerTitle","drawerPlacement","drawerClosable","drawerDestroyOnClose","drawerMaskClosable","drawerMask","drawerKeyboarde","commonCustomEventFunHandle","drawerWidth","drawerHeight","drawerZIndex","drawerWrapClassName","drawerVisible","drawerOnClose","drawerOnAfterVisibleChange","drawerIframeUrl","staticRenderFns","fetchPageSettingDataForVersion","params","savetype","IDM","setting","pageSchema","saveType","version","http","get","jsonDir","replace","projectNo","webRoot","api","pageSettingDataUrl","mockurl","fetchApplicationInfo","url","fetchUserInfo","fetchUserCustomizationInfo","fetchThemeInfo","getPageInterfaceInfo","postPageInterfaceInfo","options","post","Vue","prototype","$previewApi","preview","$replace","express","varible","call","$eval","eval","props","data","watch","methods","themeInterfaceHandle","resultData","echoDataName","that","propData","PageSettingData","layout","compositeAttr","themeDataFiled","themeDataFunction","switchThemeValue","filedExp","dataObject","window","startsWiths","length","paramObject","commonParam","_this","forEach","sitem","name","customParam","param","error","theme","setCurrentThemeInfo","themeSetObject","setCurrentPageTitle","islater","document","title","pageBaseInfo","applications","defaultTitle","pageInterfaceResultObject","pageDynamicHeadMetaConfig","item","meta","createElement","Object","keys","value","setAttribute","head","appendChild","console","customHandle","urlObject","queryObject","pageId","broadcast","pageModule","id","urlData","JSON","stringify","sendBroadcastMessage","object","send","deleteLayoutAttachAttr","module","Array","env","hasLoading","loaded","loading","moduleReload","mountComplete","children","mounted","class","themeNamePrefix","style","zIndex","styleObject","directives","rawName","dialogVisibleStatus","expression","dialogIsHideing","dialogObjectList","packageid","layerClickHandle","pageUserDefinedStatus","staticStyle","_v","switchUserCustomizationCommutant","openUserCustomizationLeftBar","$event","_s","userDefinedSaveLoading","userDefinedSave","userDefinedQuit","userDefinedReset","originalUserCustomizationModuleObject","hidden","basicAttr","asName","addUserDefinedSelect","removeUserDefinedSelect","pageUserDefinedModalVisible","currentContainerShowModuleName","customModuleObject","currentContainerShowPackageid","containerIndex","userDefinedModuleReplace","mixins","components","currentContainerShowModuleObject","type","default","created","then","setCachePageData","propsCompletion","foreachList","i","loadPageElement","react","pageScriptDom","$","silentReLogin","relogin","cacheKeyValue","cacheKeyName","loginStatus","resData","rangeModule","message","catch","sessionKeep","initAppAndUserInfo","switchUserInfoFiledValue","customContainerModuleId","customData","allUserCustomModuleIds","userCustomModuleArray","lsmodule","element","newChildren","reSortModule","pageUserDefinedStatusChangeHandle","userDefinedDomList","userDefinedContainerDomList","moveDomBox","locationStr","e","position","moveDomCenterY","moveDomLeftX","moveDomRightX","moveDomTopY","moveDomBottomY","customModuleRectInfo","isCustomModuleDomOut","coverXDomList","centerCrossXDomList","itemBottomY","crossYDomList","itemRectInfo","filtrXcrossYDomList","minYDom","minYNumber","hoverContainerDom","parentDom","lastElement","placeholderDom","currentMoveDom","eleDiffPos","registerModuleMouseDownEvent","moduleElement","marginRight","userDefinedDom","iitem","changePageSettingModuleSort","tragetModuleIndex","moveModuleIndex","customContainerModule","lastModule","res","status","reset","setTimeout","targetModule","moduleId","initReactOrOtherLib","importFiles","beforeLoadingFunction","afterLoadingFunction","requestPageCommonInterfaceDataBefore","interfaceList","callback","requestPageCommonInterfaceData","InterfaceParam","componentIdArray","moduleIdArray","idmPageId","moduleIds","componentIds","orderlyRequestInterface","moduleObject","headers","callbackModuleSetContext","messageKey","interfaceRunLaterFunction","pageAttrPropHandle","link","_watermarkFont1","_watermarkFont","fontColor","fontSize","width","height","rotate","imgSize","imgLeftSize","fontLeftSize","opacity","topSize","async","defer","convertThemeListAttrToStyleObject","color","cssObject_border_main","cssObject_background_main","cssObject_color_main","cssObject_color_minor","cssObject_border_minor","cssObject_background_minor","renderDialog","opModule","setShowDialog","closeThisOpenDialog","ditem","existsIndex","ctx","destroyDialog","showHideNoLoadModule","initModuleTreeToPage","moduleData","ischildren","fModule","addNextForModulePackageid","loadModule","privilegePass","role","rolePass","dept","deptPass","user","userPass","privilegeComparisonObject","roleComparisonObject","deptComparisonObject","beforeModule","laterModule","comObject","containerId","containerDom","containerInnerDom","innercontainer","pageModuleDataIsLoaded","isLoaded","isnotloadinner","loadType","createModuleDom","newComDiv","createHoverLayoutHandle","resetHoverModuleStyleInfo","moduleCurrentWH","moduleCurrentH","moduleCurrentXY","moduleCurrentY","left","top","right","bottom","moduleDOM","getModuleTree","_findModule","reloadModuleArray","reloadModule","parentModule","globalId","moduleMountComplete","invcount","clearInterval","moduleMountCompleteCommon","idmCtrlId","domId","moduleInnerDom","moduleDom","initModuleInnerEventHandle","resetLayoutInnerModuleLoadedStatus","childrenResetModuleIdList","component","Page","drawerControlSetPanelOption","currentTransitionType","windowResizeEvent","clearTimeout","target","injectInnerActionToWindow","IdmBuiltin_changePageUserDefinedStatus","idmPageRefs","IdmBuiltin_InitNewPage","scrollTop","nokeep","IdmBuiltin_backPage","activeItem","index1","pageSetData","index2","IdmBuiltin_OpenControlSetPanel","iframeUrl","IdmBuiltin_CloseControlSetPanel","IdmBuiltin_OpenUrl","IdmBuiltin_OpenDialog","hasIdmPageRefs","dialogObject","existsCount","IdmBuiltin_CloseDialog","IdmBuiltin_ShowModule","noExistsModuleIdList","currentModule","IdmBuiltin_HideModule","weixinEventHandle","requireJsCss","wx","beta","debug","appId","timestamp","nonceStr","signature","jsApiList","commonFunction","webSocketEventHandle","globalSend","msgData","initCommonRequireJsCss","initPulltorefreshPlugin","mainElement","instructionsPullToRefresh","instructionsReleaseToRefresh","instructionsRefreshing","onRefresh","shouldPullToRefresh","initPulltorefreshHandle","customFunction","initVconsolePlugin","initLoadbarResource","idmPace","Pace","$route","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","result","_typeof","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","iter","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield"],"mappings":"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AEA,OADA5J,sBACA,SACAA,SACAgO,aACAhO,yCACAA,+CAEAsJ,iBAEAnE,8BAEAoF,mBACApF,8BACA,0CAhBA,IAsBA8I,iCACA,2DAEAxL,yBACAA,kCAEA,4DAMAyL,gCACA,2DAEAzL,wBACAA,iCAEA,2DAMA0L,iDACA,uIACA,aAIAC,wBAAA,4CACA,YAIA,0DAHAC,QALAA,QAcAC,2CACA,2CAGA,kCAEA,yDAEA,iCAGA,kCACAnJ,gCACA,4BACA,uIACA,cAGAiJ,wBAAA,8DACA,aAGA,2DAIAG,0BAEA,kBACA,KAAAC,KACA,6DACA,iBACAC,oBACAD,oBAIA,OACAE,YACAC,sBACAC,0BAEA,wBAIA,OAHA/J,oCACA/E,aAEA,GAKA+O,0CACA,eACAR,WADA,CAIA,WACAxQ,KACA,WAEA,mDACA,IACA,qFACA,sFACA,UAEA,YADA2E,mCAGA,UAGA,yFAEA,mDACA,IACA,qFACA,sFACA1C,yCACA,UAGAE,qDACA8O,gBACAlL,UACA,YAEApB,gCACAA,sCACA,YAEAA,2CAEA,4CACA,mDACA,IACA,qFACA,sFACA1C,yCACA,UAGA,iBACAsB,wCACA2N,gCACA,yEACA,KAEAzF,kBAGA9G,wCACAA,sCAEA+H,mBACA/H,0CAEA,uCACA,iBACArB,uCACAmI,kBAGA9G,wCACAA,sCAEA+H,mBACA/H,sCAGAA,qCAMAwM,uCAAA,WAoBA,GAlBA,mDACA,2BACA7F,2BACAmB,UACA2E,4BACA5E,iBAEA,oCAEA,6DACA5G,4CACA0F,2BACApL,qBACAmE,YAKA,mEACA,kCACAgN,uBACA,IACAhM,uEACA,qBACAS,oBACArB,aACAiB,WAEA,cAIA,+DAEA,4HACA,8CAMA4L,+BACA,sBACA,oBACA,SAqBA,aApBA,6BACAnI,sBACA,cACAvE,+CACA,QACA,KACAA,eACAA,iDACA,QACA,WACAuE,+BAEA,oCACAA,2BACAvE,4CAEA,oCACAuE,2BACAvE,4CAEA,EACA,+BACA,WACA,cACA,SAEA,UACA,uBACA,qCACAzC,iCACA,uBAEA,MACA,YACA,aACAgH,OACA,MACA,cACA,SACAA,oDAEA,MACA,UACA,iBACAA,2CAEA,mBACAA,+CAEA,oBACAA,iDAEA,kBACAA,6CAEA,kBACAA,6CAEA,oBACAA,iDAEA,qBACAA,mDAEA,mBACAA,+CAEA,MACA,eACAA,uDACAgE,GACA,KACA,MACA,gBACA,IACA7G,2FACA,UAGA,qCACAiL,sBACAA,sBACAA,6BACAjL,wDACA,MACA,gBAGA,MACA,gBAGA,MACA,eAEA6C,yBACA,MACA,mBAEAA,6BACA,MACA,aACA,uBACAA,sBACAgE,0CACAhE,yCACA,2BACAA,sBACAhH,iDAGA,yBACAgH,wBACAgE,8CACAhE,6CACA,6BACAA,wBACAhH,mDAGA,0BACAgH,yBACAgE,gDACAhE,yBACAgE,sBACA,8BACAhE,yBACAhH,oDAGA,wBACAgH,uBACAgE,4CACAhE,2CACA,4BACAA,uBACAhH,kDAIAgH,4BACAgE,wBACAA,4BACAhE,6BACAgE,yBACAA,6BACAhE,+BACAgE,2BACAA,+BACAhE,gCACAgE,4BACAA,gCACA,MACA,WACAhE,8BACA,oBACAA,oDAEAA,iBACAgE,yCACAhE,4BACAA,eACAgE,0BACAhE,iBACAgE,kBACAA,0BACA,GACAA,sBACAhE,gCACAA,sCACA,MACA,aACA,8BACAA,oBACA,cACAA,iCAEA,cACAA,0BAEA,cACAA,iCAEA,YACAA,uBACAA,mBAEA,MACA,mBACA,0BACAA,uCAEA,OAIA,4BACA,6CACA,qCACAhH,UAEAqP,kCACArP,UAGAA,kBACA,yBACAyC,kBACAA,wBACAA,eACA6M,EACA7M,8BACA,CACA8M,UACA9M,8DACA+M,6CACAC,sBACAC,uBACAC,yBACAC,2BACAC,mCACAC,qCACAC,+BACAC,kCAIAhQ,iDAGAA,4EAEA,yCACAyC,oCACA,qBACAzC,sEAEA,CAAAiQ,cAAAC,gBAEAlQ,2EAMA,2CAMAmQ,8CACA,kBACA,KAOA,IAJA,MACAnQ,gFACAA,yCACA,aACA,oBACA,WAIA,2CAIA,OACAoQ,qDAEA,GACA,gDAEA,GACA,oDAEA,GACAA,yCAEA,GACA,kDAEA,GACA,sDAEApQ,kCACA6G,uDAEAwJ,IAGArQ,kCACA6G,2DAEAyJ,IAGAtQ,kCACA6G,wDACAA,yFACAA,yGACAA,kGAEA0J,IAGAvQ,kCACA6G,qDACAA,qDACAA,4DACAA,wEAEA0J,GACAF,IAGArQ,kCACA6G,sDACAA,4DACAA,wEAEAyJ,GACAD,IAGArQ,kCACA6G,oDACAA,oDACAA,2DACAA,uEAEA2J,GACAC,IAGAzQ,kCACA6G,4DACAA,sEAEAuJ,iBACAM,GACAD,OASAE,yBACA,yBACA,0CACA7C,GAEA,MACA,SAEA,8DAEA,GADA8C,mBACA,sCACA,sBAGA,+DAEA,2CACA,6BAGA,uBAEAC,0BACA,8BACA/G,wEACA,4BACA,yBAKAgH,gCAAA,WACA,gCACA,KACAnN,oCACA8K,mBACA,0CACA,0BACAsC,qBACAjH,+FACA,eACAiH,8CAGA,aACAA,8DAKA,yCACA,yBAEA,WACAvO,wBACA2G,0BACAmB,UACAD,gBAEAuD,uBACAjK,oCAIA,GAHAmG,oEACAtH,4BAEA,8BAIA,SACAA,0CACA,0BACAwO,IACA,eACAD,4CAIA,MAEAvO,oCAdAA,yBAiBA,+BACAA,yBACAA,wBAEA,KACA,YACAyO,cAMAC,0BACA,yBACA,0CACApD,GAEA,iCACAhE,kDAOAqH,iCACA,qFACA,6BASAC,8BACAC,EACAC,EACAC,EACAC,GACA,IAOA,MAPA,OACA,OA6IA,GA5IAH,4CACA,qBACAA,OAIAA,yBACA,8CAQA,6CAKA,GAHA3M,eAEAA,wDACA,gBACA,OAGA,sBACAA,gBACAA,aAUA+M,IAEA,6DACA,kBACA,oJACAtM,sGAGA,kEACA,mCAEAsM,iBAEAA,OAEA/M,iBACA,WACA,sBAAAgN,KACAC,aAAAC,KACAC,aAAAC,KACAC,aAAAC,KAEA,yIACA,sEAAAhS,QAAAkD,eAAA,8BACA,oCACA+O,wBAGAP,KAEAhN,qDACA,qEACA,0BACAgN,SAKA,+HACA,sEAAA1R,QAAAkD,eAAA,8BACA,oCACAgP,wBAGAN,KAEAlN,gDACA,qEACA,0BACAkN,SAKA,+HACA,sEAAA5R,QAAAkD,eAAA,8BACA,oCACAiP,wBAGAL,KAEApN,gDACA,qEACA,0BACAoN,SAKA,+HACA,sEAAA9R,QAAAkD,eAAA,8BAEA8O,KAEA,kDACA,+DACA,YAEA,kBACAA,OAIA,4EACAP,OACA/M,aAGA,KAEA,2BAMA,GALA,4BACA0N,OACA,kCACAC,QAEA,KACA,UAMA,EAeA,CAEA,QACAC,yCACAA,iCAEA,2BACA,KACA,uBACAC,uBACAzI,iDACA,wDACAyI,uBACAzI,0CACA,KAEAyI,IACAzI,mDACA,QAEA,GADAyI,cACA,wBACAzI,2CACA,CACA,2CACA0I,sCACA,6BAEA,GADAC,SACA,yCAEA,aACA,gCACAlB,KACA,0BACAe,iBACA,KAKA,GAHAI,eACAA,0CAEA,kBASA,OANAjB,iBACAjP,8BAEA,mCACAA,yCAKA,kCACAiQ,iCACA,kCACAA,kCAEAA,iBAIA,IAEA,EACA3I,wDACA,GACAA,0DAKAwI,mBAEAA,yBACAA,qBACA9P,sCAvFA6O,wBACA,uCAIA,2CACA7O,2CAIA,wDACA,wCA+EA,UAMAmQ,qCAAA,iFACA,OACA,KAiCA,OAhCAtB,4CACA,qBACAA,OAEAA,wBACA,wCAKA,2BACAuB,UAMA,GACAvB,wBACA,uCAIA,qCACAuB,2BACAlO,WACAmO,EACAC,OAKA,GAKAC,4BACA,WAEAT,iDAEAA,gCAEA,mBAkBA,OAhBAU,yBACAA,wCACAA,6BACAA,oCACAA,wCACA,eACAA,+BAGAA,yBACAA,wBAEAA,4DACA,4BACAxQ,+BAEA,GAKAyQ,sCAGAD,kCACA,qCAQAE,wCACA,WACA,2DAEA,8BACA,4FACAC,eACA,oCACAC,gCACA,sBACAC,eACA,oCACAC,gCAGA,cACA,gCACA,aACA,eACA,eACA,eAGA,KACA,UACA,cACAtM,GACAuM,YACAC,WACAC,aACAC,cACAjE,aACAC,eAEA,MACA,eACA1I,GACAuM,YACAC,WACAC,aACAC,cACAjE,aACAC,eAEA,MACA,kBACA1I,GACAuM,YACAC,WACAC,aACAC,cACAjE,aACAC,eAEA,MACA,iBACA1I,GACAuM,YACAC,WACAC,aACAC,cACAjE,aACAC,eAEA,MAEA1I,eACAA,mBACAA,oHACA2M,aAKAC,4BAAA,IAIA,EAJA,OAYA,OAXA,qBACA1N,OAGAA,uBACA,eACA2N,KACA,gBACAA,oCAGA,GAKArN,2BAAA,IAOA,EAPA,OAEA,qBACA,0CACAe,GAEA,MAEA,aAEAuM,KACAC,+CACA,qBACAD,aAGAE,QACA,CAEA,4BACA,iCACAA,qBACA,0CACAC,GAIA,2CACAH,0BACAhK,2DAIA,0BACAgK,GACA,EACAE,GACA,IAMAE,gCACA,WAEA,6DACA,2BACAxP,4CACAA,0CACAA,8CAGAS,8BACA,yBACA,0CACAe,aAMA,GAHA0K,aAEAA,YACA,iCAEA,yBACA,gCAEA,QACA,0BACAuD,IAEArK,2EACAqK,QAIAC,iBACA5R,kCACA,QAGAoL,uBACApL,iCACA,QAIAoL,uBACApL,iCACA,IAkBA6R,sCACA,IACA,oDACA,yBACA,qBACAC,wBACAC,eAIA,OAHA,GACAC,eAEA,GACA,qBACAC,6BACA,MACA,iCACAA,wDACA,MACA,iBACA,MAIA,qCAQA,+CACA,sCARA,2BACA,0BACA,MACA,EACA,sCAYAC,uCACA,WAEA,iDACA,SACA,2DAEA,eAEA,yBACA,0CACAxO,aAEA,oDACA,kCACA0K,gCACA9G,+BAEA,8CASA6K,iDAAA,WACA,qBACAzO,OAEAA,uBACA,mCACA,IACA,eAEA,gBAEA,iBAEA,aACA,IACAxB,eACAkQ,SAGA,iCACA,0DCp6Emb,I,YCO/aC,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,EAAAA,E,QC+BA,GACf7L,WACAtF,eACAuF,YAAA6L,QACA5S,gBACA,OACAlE,UAEA0E,mBACAyE,uBAEAE,mBAEAC,oBAEA9H,iBAEAG,mBAEAoV,iCAEArW,gBAEAf,eAEAqX,0BAGArO,mBACA,mCAEA3G,oBACAmJ,kBACAkB,eACAC,gCAIAjB,mBACArJ,gDAEA,8BAEA,sCACA,uBACA9B,YACAF,mBACAM,qCACAD,WACAE,YACAT,UAGA,kCAEAsE,SAIA6S,8BACA/R,2BACA,WACA,cACAgS,2BAEAC,oCACA9G,IACA8G,oBACA,OAMA3W,kCAAA,oJACA,oCACA,8DAFA,IAOAiB,yBACA,sBACA,6DAKAC,sCACA,0EAEA0V,qCACAlS,0EACAA,4EACAA,kDACAA,wDACAA,0DACAA,wDACAA,wDACAA,0DACAA,oDACAA,2FAEAmS,mDAEA,IADA,qBACA,mCACA,0BACA,kBAGA,yCACAC,6BACAA,wDAGA7X,kCAMA8X,mCAAA,WAEA,uBACArX,oBACAF,cACAM,gCACAC,YACAT,QACAO,WACAmX,kCAGA,SACA,4BAEA,oDACAC,UACA,mCAEA,qDAEAA,KAEA3L,uBACA,GACA8D,uBAEA,IACA,iDACA,aAGA,KAEA6H,8BAEA,+CACA,MAEA,IADA,WAEA,IACA5X,8BACAA,IACA,CACA,8BACA,yCACA4E,wBACA,OAGAzC,2HAIA0V,kCAEA,IAFA,WACA,OACA,mCACA,0BACA,wBACA,6BAEA,mEAEAhR,YAEA,6CACAiR,IACAjR,aACAoF,kCAGA,2BAEA,+CACA,OACA,MACA,IACA,QACA8L,8BACAA,IACA,CACA,8BACA,yCACAnT,wBACA,OAGAzC,8EAKA,GAHAA,2CAEA6V,6CACA,GACA,IACA,QACAC,8BACAA,IACA,CACA,8BACA,yCACArT,wBACA,OAGAzC,4EACA,wBACAmJ,qBACAmB,WACA,iBAuBAyL,2CACA,sDAEA,MAIA,GADAC,8BACA,4BACA,oCACA/E,8CACAA,sCACAA,yCAQA,OAPApM,kEACA,MACAmR,QAEAA,8CAMA,2CAEA,+DACA,sBAEA,kKAUAC,4CACA,2NAIA,OAFA,qBAEA,cACA,YACA,YACA,mHACA,MACA,aACA,+GACA,MACA,YACA,mHACA,QAOAC,+BACA,oCACAhT,sEAMAiT,kCAAA,WACA,gCACA,iBACA,KACA,IACA,KA2BA,GA1BAxS,oCACA8K,mBAEA,wCACA,uBACA,kBAGA,sCACA6G,6BACA,kCACA,QAGAc,UACAC,qBACA,gBACAA,6BAGA,2BACAC,IACAhB,yBAIA,MAGA,WACA,2BAEA1H,uBACApL,wBACA2G,yBACAmB,UACAD,kBAEA,MAEA,YACA4G,eAOAsF,mCAEA,IADA,qBACA,mCACA,0BACA,kBAGA,yCACAjB,6BACAA,4BAOAkB,kCACA,oCACA,iBACA,KACA,KAUA,GATA7S,oCACA8K,mBACA,qDACA,eACAgI,mBAEAC,YAGA,UACA,gCACA,IACApB,6BACAA,2BAGA,2BACAnM,yBACAmB,UACAD,gBAEA,YACA4G,cAOA0F,kCACA,oCACA,iBACA,KACAhT,oCAAA8K,mBAAA3E,yDACA,2BACAX,yBACAmB,UACAD,gBAEA,YACA4G,cAMA2F,8BAAA,WACA,OACA,kBACA,wBAEA,sCAIA,GAHA,2BACAC,OAEA,oCACA,SACAA,uBAAA,wCACA7W,wBACAsJ,iBAGAnE,sCAEAnF,8CACAe,yCAEAuI,kBAEA,aACA,wBACAc,UAGA0M,WACAC,QACAC,oCACAC,cACAC,sBACAC,oBACAC,sBACAC,yCAEAP,qBAEA,4BACAQ,0BACA,IACApU,uEACAV,qBACAmB,oBACAJ,WAEA,iBAIAuT,sBAEA,4BACAQ,0BACA,IACApU,uEACAV,qBACAmB,oBACAJ,QACAM,WAEA,oBAKA0G,mBACApF,8BAIAoF,mBAEApF,0CAQAoS,iCACA,WACA,kBACA,oBAEA,qEACArU,8BAGAT,+DAAA,WAEA,0BACA6U,0BACA,IACApU,uEACAV,qBACAmB,oBACAJ,WAEA,gBAKAd,sEAAA,WAEAzC,oBACAmJ,iBACAkB,eACAmN,cACAlN,YAGA,iCACAgN,0BACA,IACApU,uEACAV,qBACAmB,oBACA8T,UACAlU,WAEA,kBASAmU,kCAEA,8GACA,SACA1X,iEAAA,wCACA,IACAA,wBACAsJ,iBAEAnE,uFAEAoF,mBACApF,2CAEA,SACAA,iDAQAwS,mCACA,WACA,uDACA,oBAIA3X,qFACAsJ,iBAEAnE,qCACA,IACA,0BACAyS,mBAEAC,iCACAC,oCACAC,6BACAC,qBACAxV,6BAEAyV,+BAIA,oEAGAjY,+BACA,SACAmF,yCAGAoF,mBACApF,4CA9BAnF,8BAoCAkY,mCAAA,WAEA,qDACA,uDACA,4DACA,oCACA,4BACA,WAEAhV,yBACA,MACA,WAEA,IACA,gCACAoS,6BACAA,4BACA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","file":"static/js/preview.7920da6c.js","sourcesContent":["export * from \"-!../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/_vue-loader@15.10.0@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!./Preview.vue?vue&type=style&index=0&id=4b015de0&prod&lang=scss&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"idm_render_engine_container\"},[_c('transition-group',{staticClass:\"idm_render_engine_router_container\",attrs:{\"tag\":\"div\",\"name\":\"slide-fade\"},on:{\"after-enter\":_vm.transitionAfterEnter}},[_vm._l((_vm.AppPageList),function(page,index){return [(page.keep)?_c('Page',{key:page.pageid+index,ref:`idm_page_${page.routerId}`,refInFor:true,tag:\"component\",attrs:{\"styleObject\":page.display===false?{'display':'none'}:{},\"pageid\":page.pageid,\"routerId\":page.routerId,\"devpreview\":page.devpreview,\"mainPage\":page.mainPage,\"index\":index},on:{\"mainPageSettingHandle\":_vm.mainPageSettingHandle}}):_vm._e()]})],2),_c('idm-a-drawer',{attrs:{\"title\":_vm.pagePropData.drawerTitleShow?_vm.pagePropData.drawerTitle:'',\"placement\":_vm.pagePropData.drawerPlacement||'right',\"closable\":_vm.pagePropData.drawerClosable===false?false:true,\"destroyOnClose\":_vm.pagePropData.drawerDestroyOnClose,\"maskClosable\":_vm.pagePropData.drawerMaskClosable===false?false:true,\"mask\":_vm.pagePropData.drawerMask===false?false:true,\"keyboard\":_vm.pagePropData.drawerKeyboarde===false?false:true,\"maskStyle\":_vm.commonCustomEventFunHandle(_vm.pagePropData,'drawerMaskStyleFunction')||{},\"wrapStyle\":_vm.commonCustomEventFunHandle(_vm.pagePropData,'drawerWrapStyleFunction')||{},\"drawerStyle\":_vm.commonCustomEventFunHandle(_vm.pagePropData,'drawerStyleFunction')||{},\"headerStyle\":_vm.commonCustomEventFunHandle(_vm.pagePropData,'drawerHeaderStyleFunction')||{},\"bodyStyle\":_vm.commonCustomEventFunHandle(_vm.pagePropData,'drawerBodyStyleFunction')||{},\"width\":_vm.pagePropData.drawerWidth||256,\"height\":_vm.pagePropData.drawerHeight||256,\"zIndex\":_vm.pagePropData.drawerZIndex||1000,\"wrapClassName\":(_vm.pagePropData.drawerWrapClassName||'')+' idm_module_setting_drawer',\"visible\":_vm.drawerVisible},on:{\"close\":_vm.drawerOnClose,\"afterVisibleChange\":_vm.drawerOnAfterVisibleChange}},[_c('iframe',{staticClass:\"idm_drawer_iframe_basestyle\",attrs:{\"src\":_vm.drawerIframeUrl,\"name\":\"idm_drawer_iframe\"}})])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default {\r\n    /**\r\n     * 页面配置数据（根据版本号和页面ID获取的），版本号为空则获取正在使用的数据【配置为空会返回测试数据】\r\n     * @param {pageid：页面ID,version：版本号,schemaType:0代表布局组件、1代表业务组件} params \r\n     * @returns \r\n     */\r\n    fetchPageSettingDataForVersion(params){\r\n        params.savetype = IDM.setting.pageSchema.saveType;\r\n        //如果是磁盘直接读取json文件\r\n        if(IDM.setting.pageSchema.saveType==\"disk\"&&params.version&&process.env.NODE_ENV ==\"production\"){\r\n            return IDM.http.get(IDM.setting.pageSchema.jsonDir.replace(/{projectNo}/g, params.projectNo||IDM.setting.webRoot.projectNo).replace(/{pageid}/g,params.pageid).replace(/{version}/g,params.version));\r\n        }\r\n        return IDM.http.get(IDM.setting.api.pageSettingDataUrl||IDM.setting.mockurl.pageSettingDataUrl,params);\r\n    },\r\n    /**\r\n     * 获取应用信息\r\n     * @param {*} url 配置的接口地址\r\n     * @param {pageid：页面ID} params \r\n     * @returns \r\n     */\r\n    fetchApplicationInfo(url,params){\r\n        return IDM.http.get(url,params);\r\n    },\r\n    /**\r\n     * 获取当前登录用户信息\r\n     * @param {*} url 配置的接口地址\r\n     * @param {pageid：页面ID} params \r\n     * @returns \r\n     */\r\n    fetchUserInfo(url,params){\r\n        return IDM.http.get(url,params);\r\n    },\r\n    /**\r\n     * 获取当前登录用户个性化定制的信息\r\n     * @param {*} url 配置的接口地址\r\n     * @param {pageid：页面ID} params \r\n     * @returns \r\n     */\r\n    fetchUserCustomizationInfo(url,params){\r\n        return IDM.http.get(url,params);\r\n    },\r\n    /**\r\n     * 获取当前应用主题信息\r\n     * @param {*} url 配置的接口地址\r\n     * @param {pageid：页面ID} params \r\n     * @returns \r\n     */\r\n    fetchThemeInfo(url,params){\r\n        return IDM.http.get(url,params);\r\n    },\r\n    /**\r\n     * 获取页面接口数据（get）\r\n     * @param {*} url \r\n     * @param {*} params \r\n     */\r\n    getPageInterfaceInfo(url,params){\r\n        return IDM.http.get(url,params);\r\n    },\r\n    /**\r\n     * 请求页面接口数据（post）\r\n     * @param {*} url \r\n     * @param {*} params \r\n     * @param {*} options \r\n     * @returns \r\n     */\r\n    postPageInterfaceInfo(url,params,options){\r\n        return IDM.http.post(url,params,options);\r\n    }\r\n}","import Vue from 'vue';\r\nimport preview from '../api/preview';\r\n\r\nVue.prototype.$previewApi = preview;\r\n//为vue对象注入表达式替换\r\nVue.prototype.$replace = function (express, varible) {\r\n    return IDM.express.replace.call(this, express, varible);\r\n};\r\n//为vue对象注入表达式执行\r\nVue.prototype.$eval = function (express, varible) {\r\n    return IDM.express.eval.call(this, express, varible);\r\n};\r\n\r\n\r\n// import {\r\n//     Drawer\r\n// } from 'idm-antv-ui';\r\n\r\n// Vue.use(Drawer);","export default {\r\n    props: {\r\n    },\r\n    data() {\r\n        return {\r\n        }\r\n    },\r\n    watch: {\r\n    },\r\n    methods: {\r\n      /**\r\n       * 自定义接口与页面接口统一回调处理主题的函数\r\n       */\r\n      themeInterfaceHandle(resultData,echoDataName){\r\n        let that = this;\r\n        let propData = this.PageSettingData.page.layout.props.compositeAttr;\r\n        let themeDataFiled = propData.themeDataFiled,\r\n        themeDataFunction = propData.themeDataFunction,\r\n        switchThemeValue=resultData;\r\n        if(themeDataFiled){\r\n          let filedExp = themeDataFiled;\r\n          var dataObject = {IDM:window.IDM};\r\n          dataObject[echoDataName] = resultData;\r\n  \r\n          if(filedExp){\r\n            filedExp = echoDataName+(filedExp.startsWiths(\"[\")?\"\":\".\")+filedExp;\r\n            switchThemeValue = window.IDM.express.replace.call(this, \"@[\"+filedExp+\"]\", dataObject);\r\n          }\r\n        }\r\n        if(themeDataFunction&&themeDataFunction.length>0){\r\n          var paramObject = {\r\n                ...that.commonParam(),\r\n                _this:that\r\n              };\r\n            paramObject[echoDataName] = resultData;\r\n          themeDataFunction.forEach(sitem=>{\r\n            try {\r\n              switchThemeValue = window[sitem.name]&&window[sitem.name].call(this,{customParam:sitem.param,...paramObject});\r\n            } catch (error) {\r\n            }\r\n          })\r\n        }\r\n        that.mainPage&&IDM.theme.setCurrentThemeInfo(switchThemeValue);\r\n        that.themeSetObject = switchThemeValue;\r\n      },\r\n        /**\r\n         * 设置更新当前页面的标题\r\n         */\r\n        setCurrentPageTitle(islater){\r\n            //修改页面标题\r\n            document.title = IDM.express.replace(this.PageSettingData.pageBaseInfo.title || IDM.setting.applications.defaultTitle,{IDM:IDM,window,...this.pageInterfaceResultObject});\r\n            //pageDynamicHeadMetaConfig\r\n            if(this.mainPage&&islater&&IDM.setting.applications.pageDynamicHeadMetaConfig&&IDM.setting.applications.pageDynamicHeadMetaConfig.length){\r\n              try {\r\n                for (let index = 0; index < IDM.setting.applications.pageDynamicHeadMetaConfig.length; index++) {\r\n                  const item = IDM.setting.applications.pageDynamicHeadMetaConfig[index];\r\n                  var meta = document.createElement(\"meta\");\r\n                  Object.keys(item).forEach(key=>{\r\n                    let value = IDM.express.replace(item[key],{IDM:IDM,window,...this.pageInterfaceResultObject});\r\n                    meta.setAttribute(key,value);\r\n                  })\r\n                  document.head.appendChild(meta);\r\n                }\r\n              } catch (error) {\r\n                console.error(error);\r\n              }\r\n            }\r\n        },\r\n        /**\r\n         * 通用自定义函数\r\n         */\r\n        commonCustomEventFunHandle(propData,name){\r\n          let that = this;\r\n          propData = propData||this.pagePropData;\r\n          var customHandle = propData[name],resultData;\r\n          customHandle &&\r\n            customHandle.forEach((item) => {\r\n              resultData = window[item.name] &&\r\n                window[item.name].call(this, {\r\n                  ...that.commonParam(),\r\n                  customParam: item.param,\r\n                  _this: that\r\n                });\r\n            });\r\n          return resultData\r\n        },\r\n        /**\r\n         * 通用的url参数对象\r\n         * 所有地址的url参数转换\r\n         */\r\n        commonParam(){\r\n          let urlObject = IDM.url.queryObject();\r\n          var params = {\r\n            pageId:\r\n              window.IDM.broadcast && window.IDM.broadcast.pageModule\r\n                ? window.IDM.broadcast.pageModule.id\r\n                : \"\",\r\n            urlData: JSON.stringify(urlObject),\r\n          };\r\n          return params;\r\n        },\r\n        /**\r\n         * 组件通信：发送消息的方法\r\n         * @param {\r\n         *  type:\"自己定义的，统一规定的type：linkageResult（组件联动传结果值）、linkageDemand（组件联动传需求值）、linkageReload（联动组件重新加载）\r\n         * 、linkageOpenDialog（打开弹窗）、linkageCloseDialog（关闭弹窗）、linkageShowModule（显示组件）、linkageHideModule（隐藏组件）、linkageResetDefaultValue（重置默认值）\"\r\n         *  message:{实际的消息对象},\r\n         *  rangeModule:\"为空发送给全部，根据配置的属性中设定的值（值的内容是组件的packageid数组），不取子表的，比如直接 this.$root.propData.compositeAttr[\"attrKey\"]（注意attrKey是属性中定义的bindKey）,这里的格式为：['1','2']\"\",\r\n         *  className:\"指定的组件类型，比如只给待办组件发送，然后再去过滤上面的值\"\r\n         *  globalSend:如果为true则全站发送消息，注意全站rangeModule是无效的，只有className才有效，默认为false\r\n         * } object \r\n         */\r\n        sendBroadcastMessage(object,routerId){\r\n            window.IDM.broadcast&&window.IDM.broadcast.send(object,routerId||\"\");\r\n        },\r\n        /**\r\n         * 保存时候删除的不必要的属性\r\n         */\r\n        deleteLayoutAttachAttr(module) {\r\n          if (!(module instanceof Array)) {\r\n            module = [module];\r\n          }\r\n          module.forEach((item) => {\r\n            delete item.env;\r\n            delete item.hasLoading;\r\n            delete item.loaded;\r\n            delete item.loading;\r\n            delete item.moduleReload;\r\n            delete item.mountComplete;\r\n            delete item.props;\r\n            delete item.routerId;\r\n            if (item.children && item.children.length > 0) {\r\n              this.deleteLayoutAttachAttr(item.children);\r\n            }\r\n          });\r\n        }\r\n    },\r\n    mounted() {\r\n    },\r\n}\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"idm_render_engine_page_container idm_page_box\",class:_vm.IDM.setting.applications.themeNamePrefix+(typeof _vm.themeSetObject==='object'?JSON.stringify(_vm.themeSetObject):_vm.themeSetObject),style:({zIndex:_vm.index,..._vm.styleObject}),attrs:{\"id\":`router_page_${_vm.routerId}`,\"data-pageid\":_vm.pageid}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.dialogVisibleStatus),expression:\"dialogVisibleStatus\"}],staticClass:\"idm_dialog_wrap_preview\",attrs:{\"id\":`idm_dialog_wrap_${_vm.routerId}`,\"hideing\":`${_vm.dialogIsHideing ? 'hideing' : ''}`}},_vm._l((_vm.dialogObjectList),function(item,index){return _c('div',{key:index,staticClass:\"idm_dialog_shade_layer\",class:'idm_dialog_shade_layer_' + item.packageid,attrs:{\"dialog-id\":item.packageid},on:{\"click\":_vm.layerClickHandle}})}),0),_c('div',{staticClass:\"idm_hover_layer_wrap_preview\",attrs:{\"id\":\"idm_hover_layer_wrap\"}}),_c('div',{ref:\"idm_page_root\",staticClass:\"idm_page_root\",class:`${_vm.PageSettingData.id}`,attrs:{\"id\":'PAGE_' + _vm.PageSettingData.id+'_'+_vm.routerId,\"idm-com-anchor-id\":_vm.PageSettingData.id}}),_c('transition',{attrs:{\"name\":\"idm_page_user_defined_topbar\"}},[(_vm.pageUserDefinedStatus)?_c('div',{staticClass:\"idm_page_user_defined_topbar\"},[_c('div',{staticClass:\"idm_page_user_defined_logo\"},[_c('svg',{staticClass:\"user-defined-logo-svg\",attrs:{\"t\":\"1659591467192\",\"viewBox\":\"0 0 1024 1024\",\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"p-id\":\"1396\",\"width\":\"32\",\"height\":\"32\"}},[_c('path',{attrs:{\"d\":\"M727.008 487.232l194.016-184.32a99.2 99.2 0 0 0 0-140.288l-48.416-48.416a99.2 99.2 0 0 0-138.464-1.76L544.64 292.384l-184.064-196.64-1.504-1.568a64.832 64.832 0 0 0-91.712-0.384L129.184 231.968a64.8 64.8 0 0 0-1.12 90.144l181.344 193.728-171.456 162.88a99.264 99.264 0 0 0-28.256 49.28l-28.992 123.744a65.632 65.632 0 0 0 82.4 77.92l119.296-35.136a99.744 99.744 0 0 0 40.32-23.232l169.056-160.608 203.616 217.536 1.504 1.568a64.832 64.832 0 0 0 91.712 0.384l138.176-138.176a64.8 64.8 0 0 0 1.12-90.144l-200.896-214.624zM319.424 786.176l-90.112-90.112a31.488 31.488 0 0 0-9.792-6.496L667.104 264.352l94.272 94.272c1.408 1.408 3.168 2.08 4.768 3.168L319.424 786.176zM778.208 158.784a35.2 35.2 0 0 1 49.12 0.64l48.416 48.416c13.76 13.76 13.76 36.032-0.64 50.4l-64.448 61.216c-1.28-2.08-2.24-4.288-4.064-6.112l-93.12-93.12 64.736-61.44zM288.512 399.904c8-0.128 16-3.168 22.112-9.28l48-48a31.968 31.968 0 1 0-45.248-45.248l-48 48a31.68 31.68 0 0 0-8.928 20.256L174.816 278.4c-0.512-0.512-0.512-1.024-0.352-1.152L312.64 139.04c0.128-0.128 0.672-0.128 1.248 0.416l184.384 196.992-142.432 135.328-67.328-71.872zM145.024 868.288a1.6 1.6 0 0 1-2.016-1.92l28.992-123.744c0.992-4.16 2.944-7.968 5.312-11.488a31.808 31.808 0 0 0 6.752 10.144l88.288 88.288a35.072 35.072 0 0 1-8 3.552l-119.328 35.168z m598.336 16.672c-0.128 0.128-0.672 0.128-1.248-0.416l-125.6-134.176a31.232 31.232 0 0 0 14.08-7.712l48-48a31.968 31.968 0 1 0-45.248-45.248l-48 48a31.68 31.68 0 0 0-7.296 11.904l-39.904-42.656 142.432-135.328 200.576 214.304c0.48 0.512 0.48 1.024 0.352 1.152l-138.144 138.176z\",\"p-id\":\"1397\"}})]),_c('span',{staticStyle:{\"margin-left\":\"10px\"}},[_vm._v(\"自定义工作台\")]),(!_vm.pagePropData.switchUserCustomizationCommutant)?_c('svg',{staticClass:\"fold-svg\",style:({'transform':`rotate(${_vm.openUserCustomizationLeftBar?180:0}deg)`}),attrs:{\"t\":\"1659592354438\",\"viewBox\":\"0 0 1024 1024\",\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"p-id\":\"17129\",\"width\":\"24\",\"height\":\"24\"},on:{\"click\":function($event){_vm.openUserCustomizationLeftBar=!_vm.openUserCustomizationLeftBar}}},[_c('path',{attrs:{\"d\":\"M130.901333 529.493333l149.205334 130.517334a8.533333 8.533333 0 0 0 14.122666-6.4V392.533333a8.533333 8.533333 0 0 0-14.122666-6.4L130.901333 516.608a8.533333 8.533333 0 0 0 0 12.8z\",\"p-id\":\"17130\"}}),_c('path',{attrs:{\"d\":\"M128 213.333333m42.666667 0l682.666666 0q42.666667 0 42.666667 42.666667l0 0q0 42.666667-42.666667 42.666667l-682.666666 0q-42.666667 0-42.666667-42.666667l0 0q0-42.666667 42.666667-42.666667Z\",\"p-id\":\"17131\"}}),_c('path',{attrs:{\"d\":\"M128 725.333333m42.666667 0l682.666666 0q42.666667 0 42.666667 42.666667l0 0q0 42.666667-42.666667 42.666667l-682.666666 0q-42.666667 0-42.666667-42.666667l0 0q0-42.666667 42.666667-42.666667Z\",\"p-id\":\"17132\"}}),_c('path',{attrs:{\"d\":\"M384 469.333333m42.666667 0l426.666666 0q42.666667 0 42.666667 42.666667l0 0q0 42.666667-42.666667 42.666667l-426.666666 0q-42.666667 0-42.666667-42.666667l0 0q0-42.666667 42.666667-42.666667Z\",\"p-id\":\"17133\"}})]):_vm._e()]),_c('div',{staticClass:\"idm_page_user_defined_tip\"},[_vm._v(\" \"+_vm._s(_vm.pagePropData.switchUserCustomizationCommutant?\"当前模式只支持组件位置对调，您可以移动组件进行组件换位等操作\":\"您可以对可调整的卡片组件进行移动、添加、删除等操作\")+\" \")]),_c('div',[_c('idm-a-button',{attrs:{\"loading\":_vm.userDefinedSaveLoading,\"type\":\"primary\"},on:{\"click\":_vm.userDefinedSave}},[_vm._v(\"保 存\")]),_c('idm-a-button',{staticStyle:{\"margin\":\"auto 10px\"},on:{\"click\":_vm.userDefinedQuit}},[_vm._v(\"退出编辑\")]),_c('idm-a-button',{staticStyle:{\"margin-right\":\"10px\"},attrs:{\"loading\":_vm.userDefinedSaveLoading},on:{\"click\":_vm.userDefinedReset}},[_vm._v(\"重置\")])],1)]):_vm._e()]),_c('transition',{attrs:{\"name\":\"idm_page_user_defined_leftbar\"}},[(_vm.pageUserDefinedStatus&&_vm.openUserCustomizationLeftBar)?_c('div',{staticClass:\"idm_page_user_defined_leftbar\"},_vm._l((_vm.originalUserCustomizationModuleObject.children),function(item,index){return _c('div',{key:index,staticClass:\"idm_page_user_defined_allmodule_item\",class:item.hidden!==true?'hover-show-remove':''},[_c('span',{attrs:{\"title\":item.props&&item.props.basicAttr&&item.props.basicAttr.title ||item.props&&item.props.compositeAttr&&item.props.compositeAttr.title || item.asName}},[_vm._v(\" \"+_vm._s(item.props&&item.props.basicAttr&&item.props.basicAttr.title ||item.props&&item.props.compositeAttr&&item.props.compositeAttr.title || item.asName)+\" \")]),_c('div',{staticClass:\"idm_page_user_defined_allmodule_item_op\",attrs:{\"title\":item.hidden===true?'添加组件':'移除组件'}},[(item.hidden!==true)?_c('svg',{staticClass:\"user-defined-selected-svg\",attrs:{\"t\":\"1659636928260\",\"viewBox\":\"0 0 1024 1024\",\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"p-id\":\"9243\",\"width\":\"18\",\"height\":\"18\"}},[_c('path',{attrs:{\"d\":\"M944.78369497 156.71660696l38.8044445 32.66674931a25.36238224 25.36238224 0 0 1 3.04348577 35.76095873L486.63761776 818.67478965a76.08714794 76.08714794 0 0 1-107.20679132 9.18118218l-2.40942618-2.10507822-2.28261403-2.20652672L58.64741395 508.44212703a25.36238224 25.36238224 0 0 1-0.07608729-35.86240846l35.81168359-35.93849576a25.36238224 25.36238224 0 0 1 35.88777088-0.05072486l296.56233848 295.6239297 482.21497784-572.42897249a25.36238224 25.36238224 0 0 1 35.73559752-3.0688482z\",\"p-id\":\"9244\"}})]):_vm._e(),(item.hidden===true)?_c('svg',{staticClass:\"user-defined-add-svg\",attrs:{\"t\":\"1659636887235\",\"viewBox\":\"0 0 1024 1024\",\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"p-id\":\"9088\",\"width\":\"18\",\"height\":\"18\"},on:{\"click\":function($event){return _vm.addUserDefinedSelect(item)}}},[_c('path',{attrs:{\"d\":\"M462.80754569 45.96622222m10.35630616 0l77.6722963 0q10.35630617 0 10.35630616 10.35630617l0 911.35494322q0 10.35630617-10.35630616 10.35630617l-77.6722963 0q-10.35630617 0-10.35630616-10.35630617l0-911.35494322q0-10.35630617 10.35630616-10.35630617Z\",\"p-id\":\"9089\"}}),_c('path',{attrs:{\"d\":\"M66.67883457 462.80754569m10.35630618 0l869.9297185 0q10.35630617 0 10.35630618 10.35630616l0 77.6722963q0 10.35630617-10.35630618 10.35630616l-869.9297185 0q-10.35630617 0-10.35630618-10.35630616l0-77.6722963q0-10.35630617 10.35630618-10.35630616Z\",\"p-id\":\"9090\"}})]):_vm._e(),(item.hidden!==true)?_c('svg',{staticClass:\"user-defined-remove-svg\",attrs:{\"t\":\"1659629683475\",\"viewBox\":\"0 0 1024 1024\",\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"p-id\":\"9221\",\"width\":\"18\",\"height\":\"18\"},on:{\"click\":function($event){return _vm.removeUserDefinedSelect(item)}}},[_c('path',{attrs:{\"d\":\"M576 512l277.333333 277.333333-64 64-277.333333-277.333333L234.666667 853.333333 170.666667 789.333333l277.333333-277.333333L170.666667 234.666667 234.666667 170.666667l277.333333 277.333333L789.333333 170.666667 853.333333 234.666667 576 512z\",\"p-id\":\"9222\"}})]):_vm._e()])])}),0):_vm._e()]),_c('idm-a-modal',{attrs:{\"title\":\"组件替换\",\"visible\":_vm.pageUserDefinedModalVisible,\"footer\":null,\"width\":\"666px\"},on:{\"cancel\":function($event){_vm.pageUserDefinedModalVisible=false}}},[_c('div',{staticClass:\"idm_page_user_defined_modal_alert\"},[_vm._v(\" 当前位置已显示 \"),_c('span',[_vm._v(_vm._s(_vm.currentContainerShowModuleName))]),_vm._v(\" 组件，您可以选择其他组件交换当前组件显示的位置 \")]),(_vm.customModuleObject)?_c('div',{staticClass:\"idm_page_user_defined_modal_modulelist\"},_vm._l((_vm.customModuleObject.children||[]),function(item,index){return _c('div',{key:index,staticClass:\"idm_page_user_defined_modal_moduleitem\",class:{'active':item.packageid==_vm.currentContainerShowPackageid}},[_c('div',{attrs:{\"title\":item.props&&item.props.basicAttr&&item.props.basicAttr.title ||item.props&&item.props.compositeAttr&&item.props.compositeAttr.title || item.asName}},[_c('label',[_vm._v(_vm._s(item.props&&item.props.basicAttr&&item.props.basicAttr.title ||item.props&&item.props.compositeAttr&&item.props.compositeAttr.title || item.asName))]),(item.containerIndex<999999999)?_c('span',[_vm._v(\"已显示在序号 \"+_vm._s(item.containerIndex)+\" 容器中 \")]):_vm._e()]),_c('div',[(item.packageid==_vm.currentContainerShowPackageid)?_c('div',{staticClass:\"user-defined-modal-selected\"},[_c('svg',{attrs:{\"t\":\"1659636928260\",\"viewBox\":\"0 0 1024 1024\",\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"p-id\":\"9243\",\"width\":\"18\",\"height\":\"18\"}},[_c('path',{attrs:{\"d\":\"M944.78369497 156.71660696l38.8044445 32.66674931a25.36238224 25.36238224 0 0 1 3.04348577 35.76095873L486.63761776 818.67478965a76.08714794 76.08714794 0 0 1-107.20679132 9.18118218l-2.40942618-2.10507822-2.28261403-2.20652672L58.64741395 508.44212703a25.36238224 25.36238224 0 0 1-0.07608729-35.86240846l35.81168359-35.93849576a25.36238224 25.36238224 0 0 1 35.88777088-0.05072486l296.56233848 295.6239297 482.21497784-572.42897249a25.36238224 25.36238224 0 0 1 35.73559752-3.0688482z\",\"p-id\":\"9244\"}})]),_vm._v(\" 已选 \")]):(item.containerIndex<999999999)?_c('div',{staticClass:\"user-defined-modal-changeseats\",on:{\"click\":function($event){return _vm.userDefinedModuleReplace(item,'changeseats')}}},[_c('svg',{attrs:{\"t\":\"1660186463623\",\"viewBox\":\"0 0 1024 1024\",\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"p-id\":\"7012\",\"width\":\"18\",\"height\":\"18\"}},[_c('path',{attrs:{\"d\":\"M629.419 104.311c113.459 11.333 204.663 79.736 224.05 196.882h-65.672l106.087 157.832L999.97 301.193h-73.182c-19.524-157.833-138.99-260.37-289.86-274.979-20.89-1.638-40.277 16.248-40.277 39.049 1.365 19.524 14.745 37.41 32.768 39.048z m-164.25-79.735H96.256c-20.89 0-37.274 17.886-37.274 40.687V416.7c0 22.8 16.384 40.687 37.274 40.687h368.913c20.89 0 37.274-17.886 37.274-40.687V65.263c0-22.801-16.384-40.687-37.274-40.687zM429.261 379.29H132.164V102.673h297.233l-0.136 276.617z m-35.908 540.125c-126.976-11.332-224.052-95.982-228.557-235.93h70.178L129.16 525.79 23.074 683.486h70.178c2.867 180.633 129.843 297.78 292.728 314.027 20.89 1.638 40.277-16.248 40.277-39.049 0.41-19.388-13.653-36.045-32.904-39.049z m534.8-353.075H559.242c-21.027 0-37.274 18.023-37.274 40.687v353.075c0 22.665 16.384 40.55 37.274 40.55h368.913c20.89 0 37.273-17.885 37.273-40.55V607.027c0-22.664-17.886-40.687-37.273-40.687z m-35.908 354.714H595.012V646.076h297.233v274.978z m0 0\",\"p-id\":\"7013\"}})]),_vm._v(\" 换位 \")]):_c('div',{staticClass:\"user-defined-modal-replace\",on:{\"click\":function($event){return _vm.userDefinedModuleReplace(item,'replace')}}},[_c('svg',{attrs:{\"t\":\"1660186765079\",\"viewBox\":\"0 0 1024 1024\",\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"p-id\":\"7166\",\"width\":\"18\",\"height\":\"18\"}},[_c('path',{attrs:{\"d\":\"M911.14666667 610.98666667H112.85333333c-23.57333333 0-42.66666667 19.09333333-42.66666666 42.66666666 0 8.96 2.77333333 17.28 7.46666666 24.10666667 2.02666667 4.8 5.12 9.28 8.96 13.22666667L274.66666667 878.93333333c8.32 8.32 19.2 12.48 30.18666666 12.48s21.86666667-4.16 30.18666667-12.48c16.64-16.64 16.64-43.62666667 0-60.37333333L212.58666667 696.32h698.45333333c23.57333333 0 42.66666667-19.09333333 42.66666667-42.66666667s-18.98666667-42.66666667-42.56-42.66666666zM112.85333333 413.01333333h798.29333334c23.57333333 0 42.66666667-19.09333333 42.66666666-42.66666666 0-8.96-2.77333333-17.28-7.46666666-24.10666667-1.49333333-3.52-3.62666667-6.93333333-6.18666667-10.13333333L786.34666667 148.16c-14.93333333-18.24-41.81333333-20.90666667-60.05333334-5.97333333-18.24 14.93333333-20.90666667 41.81333333-5.97333333 60.05333333l102.72 125.44H112.85333333c-23.57333333 0-42.66666667 19.09333333-42.66666666 42.66666667s19.09333333 42.66666667 42.66666666 42.66666666z\",\"p-id\":\"7167\"}})]),_vm._v(\" 替换 \")])])])}),0):_vm._e()])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <!--页面渲染的容器-->\r\n  <div :id=\"`router_page_${routerId}`\" :style=\"{zIndex:index,...styleObject}\" :data-pageid=\"pageid\" class=\"idm_render_engine_page_container idm_page_box\" :class=\"IDM.setting.applications.themeNamePrefix+(typeof themeSetObject==='object'?JSON.stringify(themeSetObject):themeSetObject)\">\r\n    <!--弹出框容器-->\r\n    <div\r\n      :id=\"`idm_dialog_wrap_${routerId}`\"\r\n      v-show=\"dialogVisibleStatus\"\r\n      class=\"idm_dialog_wrap_preview\"\r\n      :hideing=\"`${dialogIsHideing ? 'hideing' : ''}`\"\r\n    >\r\n      <div\r\n        class=\"idm_dialog_shade_layer\"\r\n        :class=\"'idm_dialog_shade_layer_' + item.packageid\"\r\n        v-for=\"(item, index) in dialogObjectList\"\r\n        :key=\"index\"\r\n        :dialog-id=\"item.packageid\"\r\n        @click=\"layerClickHandle\"\r\n      ></div>\r\n    </div>\r\n    <!--悬浮层容器-->\r\n    <div id=\"idm_hover_layer_wrap\" class=\"idm_hover_layer_wrap_preview\">\r\n    </div>\r\n    <div\r\n      class=\"idm_page_root\"\r\n      :id=\"'PAGE_' + PageSettingData.id+'_'+routerId\"\r\n      :idm-com-anchor-id=\"PageSettingData.id\"\r\n      ref=\"idm_page_root\"\r\n      :class=\"`${PageSettingData.id}`\"\r\n    ></div>\r\n    <transition name=\"idm_page_user_defined_topbar\">\r\n      <div v-if=\"pageUserDefinedStatus\" class=\"idm_page_user_defined_topbar\">\r\n        <div  class=\"idm_page_user_defined_logo\">\r\n          <svg t=\"1659591467192\" class=\"user-defined-logo-svg\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"1396\" width=\"32\" height=\"32\"><path d=\"M727.008 487.232l194.016-184.32a99.2 99.2 0 0 0 0-140.288l-48.416-48.416a99.2 99.2 0 0 0-138.464-1.76L544.64 292.384l-184.064-196.64-1.504-1.568a64.832 64.832 0 0 0-91.712-0.384L129.184 231.968a64.8 64.8 0 0 0-1.12 90.144l181.344 193.728-171.456 162.88a99.264 99.264 0 0 0-28.256 49.28l-28.992 123.744a65.632 65.632 0 0 0 82.4 77.92l119.296-35.136a99.744 99.744 0 0 0 40.32-23.232l169.056-160.608 203.616 217.536 1.504 1.568a64.832 64.832 0 0 0 91.712 0.384l138.176-138.176a64.8 64.8 0 0 0 1.12-90.144l-200.896-214.624zM319.424 786.176l-90.112-90.112a31.488 31.488 0 0 0-9.792-6.496L667.104 264.352l94.272 94.272c1.408 1.408 3.168 2.08 4.768 3.168L319.424 786.176zM778.208 158.784a35.2 35.2 0 0 1 49.12 0.64l48.416 48.416c13.76 13.76 13.76 36.032-0.64 50.4l-64.448 61.216c-1.28-2.08-2.24-4.288-4.064-6.112l-93.12-93.12 64.736-61.44zM288.512 399.904c8-0.128 16-3.168 22.112-9.28l48-48a31.968 31.968 0 1 0-45.248-45.248l-48 48a31.68 31.68 0 0 0-8.928 20.256L174.816 278.4c-0.512-0.512-0.512-1.024-0.352-1.152L312.64 139.04c0.128-0.128 0.672-0.128 1.248 0.416l184.384 196.992-142.432 135.328-67.328-71.872zM145.024 868.288a1.6 1.6 0 0 1-2.016-1.92l28.992-123.744c0.992-4.16 2.944-7.968 5.312-11.488a31.808 31.808 0 0 0 6.752 10.144l88.288 88.288a35.072 35.072 0 0 1-8 3.552l-119.328 35.168z m598.336 16.672c-0.128 0.128-0.672 0.128-1.248-0.416l-125.6-134.176a31.232 31.232 0 0 0 14.08-7.712l48-48a31.968 31.968 0 1 0-45.248-45.248l-48 48a31.68 31.68 0 0 0-7.296 11.904l-39.904-42.656 142.432-135.328 200.576 214.304c0.48 0.512 0.48 1.024 0.352 1.152l-138.144 138.176z\" p-id=\"1397\"></path></svg>\r\n          <span style=\"margin-left:10px\" >自定义工作台</span>\r\n          <svg v-if=\"!pagePropData.switchUserCustomizationCommutant\" :style=\"{'transform':`rotate(${openUserCustomizationLeftBar?180:0}deg)`}\" @click=\"openUserCustomizationLeftBar=!openUserCustomizationLeftBar\" t=\"1659592354438\" class=\"fold-svg\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"17129\" width=\"24\" height=\"24\"><path d=\"M130.901333 529.493333l149.205334 130.517334a8.533333 8.533333 0 0 0 14.122666-6.4V392.533333a8.533333 8.533333 0 0 0-14.122666-6.4L130.901333 516.608a8.533333 8.533333 0 0 0 0 12.8z\" p-id=\"17130\"></path><path d=\"M128 213.333333m42.666667 0l682.666666 0q42.666667 0 42.666667 42.666667l0 0q0 42.666667-42.666667 42.666667l-682.666666 0q-42.666667 0-42.666667-42.666667l0 0q0-42.666667 42.666667-42.666667Z\" p-id=\"17131\"></path><path d=\"M128 725.333333m42.666667 0l682.666666 0q42.666667 0 42.666667 42.666667l0 0q0 42.666667-42.666667 42.666667l-682.666666 0q-42.666667 0-42.666667-42.666667l0 0q0-42.666667 42.666667-42.666667Z\" p-id=\"17132\"></path><path d=\"M384 469.333333m42.666667 0l426.666666 0q42.666667 0 42.666667 42.666667l0 0q0 42.666667-42.666667 42.666667l-426.666666 0q-42.666667 0-42.666667-42.666667l0 0q0-42.666667 42.666667-42.666667Z\" p-id=\"17133\"></path></svg>\r\n        </div>\r\n        <div class=\"idm_page_user_defined_tip\">\r\n          {{pagePropData.switchUserCustomizationCommutant?\"当前模式只支持组件位置对调，您可以移动组件进行组件换位等操作\":\"您可以对可调整的卡片组件进行移动、添加、删除等操作\"}}\r\n        </div>\r\n        <div>\r\n          <idm-a-button @click=\"userDefinedSave\" :loading=\"userDefinedSaveLoading\" type=\"primary\">保 存</idm-a-button>\r\n          <idm-a-button @click=\"userDefinedQuit\" style=\"margin:auto 10px;\">退出编辑</idm-a-button>\r\n          <idm-a-button @click=\"userDefinedReset\" :loading=\"userDefinedSaveLoading\" style=\"margin-right:10px\">重置</idm-a-button>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n    <transition name=\"idm_page_user_defined_leftbar\">\r\n      <div v-if=\"pageUserDefinedStatus&&openUserCustomizationLeftBar\" class=\"idm_page_user_defined_leftbar\">\r\n\r\n        <div class=\"idm_page_user_defined_allmodule_item\" :class=\"item.hidden!==true?'hover-show-remove':''\" v-for=\"(item,index) in originalUserCustomizationModuleObject.children\" :key=\"index\">\r\n          <span :title=\"item.props&&item.props.basicAttr&&item.props.basicAttr.title ||item.props&&item.props.compositeAttr&&item.props.compositeAttr.title || item.asName\">\r\n          {{item.props&&item.props.basicAttr&&item.props.basicAttr.title ||item.props&&item.props.compositeAttr&&item.props.compositeAttr.title || item.asName}}\r\n          </span>\r\n          <div class=\"idm_page_user_defined_allmodule_item_op\" :title=\"item.hidden===true?'添加组件':'移除组件'\">\r\n            <svg t=\"1659636928260\" class=\"user-defined-selected-svg\" v-if=\"item.hidden!==true\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9243\" width=\"18\" height=\"18\"><path d=\"M944.78369497 156.71660696l38.8044445 32.66674931a25.36238224 25.36238224 0 0 1 3.04348577 35.76095873L486.63761776 818.67478965a76.08714794 76.08714794 0 0 1-107.20679132 9.18118218l-2.40942618-2.10507822-2.28261403-2.20652672L58.64741395 508.44212703a25.36238224 25.36238224 0 0 1-0.07608729-35.86240846l35.81168359-35.93849576a25.36238224 25.36238224 0 0 1 35.88777088-0.05072486l296.56233848 295.6239297 482.21497784-572.42897249a25.36238224 25.36238224 0 0 1 35.73559752-3.0688482z\" p-id=\"9244\"></path></svg>\r\n            <svg t=\"1659636887235\" class=\"user-defined-add-svg\" @click=\"addUserDefinedSelect(item)\" v-if=\"item.hidden===true\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9088\" width=\"18\" height=\"18\"><path d=\"M462.80754569 45.96622222m10.35630616 0l77.6722963 0q10.35630617 0 10.35630616 10.35630617l0 911.35494322q0 10.35630617-10.35630616 10.35630617l-77.6722963 0q-10.35630617 0-10.35630616-10.35630617l0-911.35494322q0-10.35630617 10.35630616-10.35630617Z\" p-id=\"9089\"></path><path d=\"M66.67883457 462.80754569m10.35630618 0l869.9297185 0q10.35630617 0 10.35630618 10.35630616l0 77.6722963q0 10.35630617-10.35630618 10.35630616l-869.9297185 0q-10.35630617 0-10.35630618-10.35630616l0-77.6722963q0-10.35630617 10.35630618-10.35630616Z\" p-id=\"9090\"></path></svg>\r\n            <svg t=\"1659629683475\" class=\"user-defined-remove-svg\" @click=\"removeUserDefinedSelect(item)\" v-if=\"item.hidden!==true\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9221\" width=\"18\" height=\"18\"><path d=\"M576 512l277.333333 277.333333-64 64-277.333333-277.333333L234.666667 853.333333 170.666667 789.333333l277.333333-277.333333L170.666667 234.666667 234.666667 170.666667l277.333333 277.333333L789.333333 170.666667 853.333333 234.666667 576 512z\" p-id=\"9222\"></path></svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n    <idm-a-modal\r\n      title=\"组件替换\"\r\n      :visible=\"pageUserDefinedModalVisible\"\r\n      @cancel=\"pageUserDefinedModalVisible=false\"\r\n      :footer=\"null\"\r\n      width=\"666px\"\r\n    >\r\n      <div class=\"idm_page_user_defined_modal_alert\">\r\n        当前位置已显示 <span>{{currentContainerShowModuleName}}</span> 组件，您可以选择其他组件交换当前组件显示的位置\r\n      </div>\r\n      <div v-if=\"customModuleObject\" class=\"idm_page_user_defined_modal_modulelist\">\r\n        <div class=\"idm_page_user_defined_modal_moduleitem\" :class=\"{'active':item.packageid==currentContainerShowPackageid}\" v-for=\"(item,index) in customModuleObject.children||[]\" :key=\"index\">\r\n          <div :title=\"item.props&&item.props.basicAttr&&item.props.basicAttr.title ||item.props&&item.props.compositeAttr&&item.props.compositeAttr.title || item.asName\">\r\n            <label>{{item.props&&item.props.basicAttr&&item.props.basicAttr.title ||item.props&&item.props.compositeAttr&&item.props.compositeAttr.title || item.asName}}</label>\r\n            <span v-if=\"item.containerIndex<999999999\">已显示在序号 {{item.containerIndex}} 容器中 </span>\r\n          </div>\r\n          <div>\r\n            <div v-if=\"item.packageid==currentContainerShowPackageid\" class=\"user-defined-modal-selected\">\r\n              <svg t=\"1659636928260\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9243\" width=\"18\" height=\"18\"><path d=\"M944.78369497 156.71660696l38.8044445 32.66674931a25.36238224 25.36238224 0 0 1 3.04348577 35.76095873L486.63761776 818.67478965a76.08714794 76.08714794 0 0 1-107.20679132 9.18118218l-2.40942618-2.10507822-2.28261403-2.20652672L58.64741395 508.44212703a25.36238224 25.36238224 0 0 1-0.07608729-35.86240846l35.81168359-35.93849576a25.36238224 25.36238224 0 0 1 35.88777088-0.05072486l296.56233848 295.6239297 482.21497784-572.42897249a25.36238224 25.36238224 0 0 1 35.73559752-3.0688482z\" p-id=\"9244\"></path></svg>\r\n              已选\r\n            </div>\r\n            <div @click=\"userDefinedModuleReplace(item,'changeseats')\" v-else-if=\"item.containerIndex<999999999\" class=\"user-defined-modal-changeseats\">\r\n              <svg t=\"1660186463623\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"7012\" width=\"18\" height=\"18\"><path d=\"M629.419 104.311c113.459 11.333 204.663 79.736 224.05 196.882h-65.672l106.087 157.832L999.97 301.193h-73.182c-19.524-157.833-138.99-260.37-289.86-274.979-20.89-1.638-40.277 16.248-40.277 39.049 1.365 19.524 14.745 37.41 32.768 39.048z m-164.25-79.735H96.256c-20.89 0-37.274 17.886-37.274 40.687V416.7c0 22.8 16.384 40.687 37.274 40.687h368.913c20.89 0 37.274-17.886 37.274-40.687V65.263c0-22.801-16.384-40.687-37.274-40.687zM429.261 379.29H132.164V102.673h297.233l-0.136 276.617z m-35.908 540.125c-126.976-11.332-224.052-95.982-228.557-235.93h70.178L129.16 525.79 23.074 683.486h70.178c2.867 180.633 129.843 297.78 292.728 314.027 20.89 1.638 40.277-16.248 40.277-39.049 0.41-19.388-13.653-36.045-32.904-39.049z m534.8-353.075H559.242c-21.027 0-37.274 18.023-37.274 40.687v353.075c0 22.665 16.384 40.55 37.274 40.55h368.913c20.89 0 37.273-17.885 37.273-40.55V607.027c0-22.664-17.886-40.687-37.273-40.687z m-35.908 354.714H595.012V646.076h297.233v274.978z m0 0\" p-id=\"7013\"></path></svg>\r\n              换位\r\n            </div>\r\n            <div @click=\"userDefinedModuleReplace(item,'replace')\" v-else class=\"user-defined-modal-replace\">\r\n              <svg t=\"1660186765079\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"7166\" width=\"18\" height=\"18\"><path d=\"M911.14666667 610.98666667H112.85333333c-23.57333333 0-42.66666667 19.09333333-42.66666666 42.66666666 0 8.96 2.77333333 17.28 7.46666666 24.10666667 2.02666667 4.8 5.12 9.28 8.96 13.22666667L274.66666667 878.93333333c8.32 8.32 19.2 12.48 30.18666666 12.48s21.86666667-4.16 30.18666667-12.48c16.64-16.64 16.64-43.62666667 0-60.37333333L212.58666667 696.32h698.45333333c23.57333333 0 42.66666667-19.09333333 42.66666667-42.66666667s-18.98666667-42.66666667-42.56-42.66666666zM112.85333333 413.01333333h798.29333334c23.57333333 0 42.66666667-19.09333333 42.66666666-42.66666666 0-8.96-2.77333333-17.28-7.46666666-24.10666667-1.49333333-3.52-3.62666667-6.93333333-6.18666667-10.13333333L786.34666667 148.16c-14.93333333-18.24-41.81333333-20.90666667-60.05333334-5.97333333-18.24 14.93333333-20.90666667 41.81333333-5.97333333 60.05333333l102.72 125.44H112.85333333c-23.57333333 0-42.66666667 19.09333333-42.66666666 42.66666667s19.09333333 42.66666667 42.66666666 42.66666666z\" p-id=\"7167\"></path></svg>\r\n              替换\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </idm-a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mixin from './mixin';\r\nexport default {\r\n  mixins:[mixin],\r\n  name: \"Page\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      //当前主题是否已经设置过了，true代表设置过了，默认值不设置了\r\n      themeSetObject:\"\",\r\n      //当前页面的数据\r\n      PageSettingData: {},\r\n      dialogVisibleStatus: false,\r\n      //是否正在隐藏中\r\n      dialogIsHideing: false,\r\n      //窗口的对象\r\n      dialogObjectList: [],\r\n      //控制中心窗口是否显示\r\n      drawerVisible: false,\r\n      //页面属性\r\n      pagePropData: {},\r\n      //页面是否已经在用户自定义状态\r\n      pageUserDefinedStatus:false,\r\n      //保存动画\r\n      userDefinedSaveLoading:false,\r\n      //是否打开组件列表\r\n      openUserCustomizationLeftBar:false,\r\n      //用户定制化的对象\r\n      originalUserCustomizationModuleObject:{children:[]},\r\n      //用户定制化组件选择对象\r\n      pageUserDefinedModalVisible:false,\r\n      //当前容器显示的packageid\r\n      currentContainerShowPackageid:\"\",\r\n      //当前容器显示的组件名称\r\n      currentContainerShowModuleName:\"\",\r\n      //当前容器显示的组件对象\r\n      currentContainerShowModuleObject:{\r\n      },\r\n      customModuleObject:null,\r\n      //页面接口返回结果对象\r\n      pageInterfaceResultObject:{}\r\n    };\r\n  },\r\n  props: {\r\n    //页面ID\r\n    pageid: {\r\n      type: String,\r\n    },\r\n    //路由ID，为空代表是主页面\r\n    routerId: {\r\n      type: String,\r\n    },\r\n    //是否预览页面\r\n    devpreview: {\r\n      type: Boolean,\r\n    },\r\n    //是否主页面\r\n    mainPage: {\r\n      type: Boolean,\r\n    },\r\n    index:{\r\n      type:Number\r\n    },\r\n    styleObject:{\r\n      type:Object,\r\n      default:() => {\r\n        return {};\r\n      } \r\n    }\r\n  },\r\n  created() {\r\n    let that = this;\r\n    if (this.devpreview) {\r\n      //取缓存数据\r\n      this.PageSettingData = JSON.parse(window.localStorage[\"devpreview\"]);\r\n      console.log(\"当前预览的缓存数据\", this.PageSettingData);\r\n      this.setCachePageData(this.PageSettingData);\r\n      this.loadPageElement();\r\n    } else {\r\n      if(IDM.router.pageDataCachePool.get(this.pageid)){\r\n        this.PageSettingData = _.cloneDeep(IDM.router.pageDataCachePool.get(this.pageid));\r\n        console.log(\"从缓存池中获取到页面配置数据（同pageid情况下）\", this.PageSettingData);\r\n        this.loadPageElement();\r\n      }else{\r\n        this.$previewApi\r\n          .fetchPageSettingDataForVersion({\r\n            pageid: this.pageid,\r\n            version: \"\", //当前的版本，没有则必须要返回最新的，有版本要返回对应的版本结果\r\n            urlData:this.commonParam().urlData\r\n          })\r\n          .then((res) => {\r\n            //获取页面配置数据返回数据结果\r\n            this.PageSettingData = res.data.data;\r\n            this.setCachePageData(this.PageSettingData);\r\n            console.log(\"从数据接口中获取页面配置数据返回数据结果\", this.PageSettingData);\r\n            this.loadPageElement();\r\n          }).catch(function (error) {\r\n              IDM.message.error(\"页面配置信息加载失败！message：\"+error.message);\r\n          });\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    setCachePageData(PageSettingData){\r\n      let that = this;\r\n      try{\r\n        this.propsCompletion(PageSettingData.page.layout,PageSettingData.page.componentsMap);\r\n      }catch(e){\r\n\r\n      }\r\n      IDM.router.pageDataCachePool.put(that.pageid,_.cloneDeep(PageSettingData))\r\n    },\r\n    /**\r\n     * 补全属性数据到树结构中\r\n     * @param {*} foreachList \r\n     * @param {*} componentsMap \r\n     */\r\n    propsCompletion(foreachList,componentsMap){\r\n      if(!(foreachList instanceof Array)){\r\n        foreachList = [foreachList];\r\n      }\r\n      for(let i=0;i<foreachList.length;i++){\r\n        let module = foreachList[i];\r\n        if(module.packageid){\r\n          let componentFilter = componentsMap.filter(item=>item.packageid==module.packageid);\r\n          if(componentFilter&&componentFilter.length>0){\r\n            module.props = componentFilter[0].props;\r\n          }\r\n        }\r\n        if(module.children&&module.children.length>0){\r\n          this.propsCompletion(module.children,componentsMap)\r\n        }\r\n      }\r\n    },\r\n    async loadPageElement() {\r\n      let react = false;\r\n      //查找props覆盖树结构中的\r\n      for (\r\n        let index = 0;\r\n        index < this.PageSettingData.page.componentsMap.length;\r\n        index++\r\n      ) {\r\n        const item = this.PageSettingData.page.componentsMap[index];\r\n        if (item.comLangue && item.comLangue.toLocaleLowerCase() == \"react\") {\r\n          react = true;\r\n        }\r\n      }\r\n      //加载react或者其他技术栈的lib\r\n      await this.initReactOrOtherLib(react);\r\n      //追加js脚本\r\n      if(this.PageSettingData.page.actions&&this.PageSettingData.page.actions.compiled){\r\n       var pageScriptDom = $(\"<script type=\\\"text/javascript\\\" id=\\\"\"+this.pageid+\"\\\"/>\");\r\n       \r\n       $(\"body\").append(pageScriptDom.html(`\r\n       (function(){\r\n        var exports={};\r\n        ${this.PageSettingData.page.actions.compiled}\r\n        var functionList = Object.keys(exports);\r\n        for(var i=0;i<functionList.length;i++){\r\n          window[functionList[i]] = exports[functionList[i]];\r\n        }\r\n       })();\r\n       `))\r\n      }\r\n      //把map中的数据更新下\r\n      this.PageSettingData.page.componentsMap.forEach((item) => {\r\n        item.env = \"production\";\r\n        //追加路由ID，页面ID\r\n        item.routerId=this.routerId;\r\n        item.pageid = this.pageid;\r\n      });\r\n      //把页面数据注册到消息桥接器中（改造成支持子页面）\r\n      this.IDM.broadcast.registerModule(this.PageSettingData,this.pageid,this.routerId);\r\n      this.setCurrentPageTitle();\r\n      //先加载应用信息\r\n      await this.initAppAndUserInfo(this.PageSettingData.page.layout.props);\r\n      this.requestPageCommonInterfaceDataBefore(()=>{\r\n        //加载完成事件\r\n        this.setCurrentPageTitle(true);\r\n        if (this.mainPage) {\r\n          this.$emit(\"mainPageSettingHandle\", this.PageSettingData);\r\n        }\r\n        //组件开始加载之前执行\r\n        this.beforeLoadingFunction();\r\n        //页面的属性渲染\r\n        this.pageAttrPropHandle(this.PageSettingData.page.layout.props);\r\n        //执行组件加载\r\n        this.$nextTick(function () {\r\n          this.initModuleTreeToPage(null, true, this.PageSettingData.page.layout);\r\n        });\r\n      });\r\n    },\r\n    /**\r\n     * 会话保持功能\r\n     * 此处专门为应用程序登录信息为session准备的（在需要登录信息永久保持的情况下才建议开启此功能）\r\n     * 处理流程：\r\n     * 1、用户密码登录或单点登录的时候同时后端通过jwt（用户信息+密钥）生成登录令牌并存储在前端（url参数、cookie、localStorage）\r\n     * 2、IDM在请求获取用户信息接口后发现session掉了则会通过后端提供通过jwt重新进行登录的接口去登录，一旦发现登录成功则会二次去请求获取用户信息接口\r\n     * 3、如果jwt登录也失效了则会执行原来的跳转登录地址\r\n     */\r\n    async silentReLogin(propData,isreload){\r\n      if(propData&&propData.openSessionKeep&&propData.silentReLoginUrl){\r\n        let relogin = false,cacheKeyName=IDM.setting.sessionKeep.cacheKeyName,cacheKeyValue = \"\";\r\n        console.log(\"当前页面cookie信息\",document.cookie);\r\n        console.log(\"获取到的cookie信息：\"+cacheKeyName,IDM.getCookie(cacheKeyName));\r\n        if(window.localStorage[cacheKeyName]){\r\n          cacheKeyValue = window.localStorage[cacheKeyName]\r\n        }else if(IDM.getCookie(cacheKeyName)){\r\n          cacheKeyValue = IDM.getCookie(cacheKeyName)\r\n        }else if(IDM.url.queryObject()[cacheKeyName]){\r\n          cacheKeyValue = IDM.url.queryObject()[cacheKeyName]\r\n        }\r\n        await IDM.http.post(propData.silentReLoginUrl,{\r\n          [cacheKeyName]:cacheKeyValue\r\n        }).then((res) => {\r\n          let resData = res.data;\r\n          if(resData.code==\"200\"){\r\n            relogin = true;\r\n          }\r\n        }).catch(function (error) {\r\n        });\r\n        if(relogin){\r\n          await this.fetchUserInfo(propData,false,true,true);\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 获取用户信息接口\r\n     * propData:页面属性\r\n     * sessionKeep：是否检查使用会话保持\r\n     */\r\n    async fetchUserInfo(propData,sessionKeep,isreload,resetUserInfo){\r\n      let loginStatus = true,that = this;\r\n      await this.$previewApi\r\n        .fetchUserInfo(propData.userInfoUrl, {\r\n          pageid: this.pageid,\r\n          ...this.commonParam()\r\n        })\r\n        .then((res) => {\r\n          let resData = res.data;\r\n          if(resData.code==\"200\"&&resData.data){\r\n            resData = resData.data;\r\n          }else if(resData.code!=\"200\"){\r\n            loginStatus = false;\r\n          }\r\n          //只有是主页面才会设置用户信息\r\n          (that.mainPage||resetUserInfo)&&IDM.user.setCurrentUserInfo(resData);\r\n          //发送刷新数据\r\n          (that.mainPage||resetUserInfo)&&loginStatus&&isreload&&IDM.broadcast.send({\r\n            type:\"linkageReload\",\r\n            rangeModule:\"\",\r\n            message:new Date().getTime()\r\n          },that.routerId)\r\n        })\r\n        .catch(function (error) {\r\n            loginStatus = false;\r\n        });\r\n      if(sessionKeep&&!loginStatus){\r\n        await this.silentReLogin(propData,isreload)\r\n      }\r\n    },\r\n    /**\r\n     * 同步方式加载应用信息和用户信息\r\n     * 并且需要判断一下是否已经设置了登录判断，如果设置了则需要确定用户ID是否为空，为空则跳转到设置好的登录地址\r\n     */\r\n    async initAppAndUserInfo(propDataObject) {\r\n      let that = this;\r\n      let propData = propDataObject.compositeAttr;\r\n      if (propData.openFetchApplicationInfo && propData.applicationInfoUrl&&this.mainPage) {\r\n        await this.$previewApi\r\n          .fetchApplicationInfo(propData.applicationInfoUrl, {\r\n            pageid: this.pageid,\r\n            ...this.commonParam()\r\n          })\r\n          .then((res) => {\r\n            let resData = res.data;\r\n            if(resData.code==\"200\"&&resData.data){\r\n              resData = resData.data;\r\n            }\r\n            IDM.app.setAppInfo(resData);\r\n          })\r\n          .catch(function (error) {});\r\n      }\r\n      //只会保留主页面的用户信息，如果子页面开启了只有会话丢失了且再次使用重登录功能才会去把当前用户信息重新设置\r\n      if (propData.openFetchUserInfo && propData.userInfoUrl) {\r\n        await this.fetchUserInfo(propData,true);\r\n      }\r\n      let switchUserInfoFiledValue = \"\";\r\n      if(propData.switchUserInfo&&propData.switchUserInfoFiledName){\r\n        let filedExp = propData.switchUserInfoFiledName,echoDataName=\"userObject\";\r\n        var dataObject = {IDM:window.IDM};\r\n        dataObject[echoDataName] = IDM.user.getCurrentUserInfo();\r\n\r\n        if(filedExp){\r\n          filedExp = echoDataName+(filedExp.startsWiths(\"[\")?\"\":\".\")+filedExp;\r\n          switchUserInfoFiledValue = window.IDM.express.replace.call(this, \"@[\"+filedExp+\"]\", dataObject);\r\n        }\r\n      }else if(propData.switchUserInfo){\r\n        switchUserInfoFiledValue = IDM.user.getCurrentUserInfo()&&IDM.user.getCurrentUserInfo().data?IDM.user.getCurrentUserInfo().data.userid:\"\";\r\n      }\r\n      //判断是否需要登录(这里暂时写死data.userid)\r\n      if (propData.switchUserInfo && !switchUserInfoFiledValue) {\r\n        if (propData.loginPageUrl) {\r\n          //跳转\r\n          window.location.href = IDM.url.getWebPath(propData.loginPageUrl);\r\n        } else {\r\n          window.location.href = \"\";\r\n        }\r\n      }\r\n      //判断是否开启应用和个性化设置（每个页面都需要的） \r\n      if(propData.openFetchUserInfo&&propData.switchUserCustomization&&propData.userCustomizationFetchUrl){\r\n        let customContainerModuleId = propData.userCustomizationModuleContainer&&propData.userCustomizationModuleContainer.length>0?propData.userCustomizationModuleContainer[0].moduleId:\"\";\r\n        //如果为空则默认为页面ID\r\n        if(!customContainerModuleId){\r\n          customContainerModuleId = that.PageSettingData.id;\r\n        }\r\n        that.originalUserCustomizationModuleObject = _.cloneDeep(that.getModuleTree(\r\n          that.PageSettingData.page.layout,\r\n          customContainerModuleId\r\n        ));\r\n        //获取定制化后的结果\r\n        await this.$previewApi\r\n          .fetchUserCustomizationInfo(propData.userCustomizationFetchUrl, {\r\n            pageid: this.pageid,\r\n            version:this.PageSettingData.pageBaseInfo.version,\r\n            urlData:JSON.stringify(this.commonParam())\r\n          })\r\n          .then((res) => {\r\n            if(res&&res.data&&res.data.data&&res.data.data.customData){\r\n              //定制结果不为空，用用户定制的结果去跟页面结构递归循环去比对然后对他们修改排序\r\n              let customData = res.data.data.customData instanceof Object?res.data.data.customData:JSON.parse(res.data.data.customData);\r\n              //获取排序后的数组\r\n              const userCustomModuleArray = customData.children;\r\n              if(!userCustomModuleArray||(userCustomModuleArray&&userCustomModuleArray.length==0)){\r\n                return;\r\n              }\r\n              //比对找到组件（等于customData.packageid）下的所有数组，然后分别对他们进行数组调整\r\n              let reSortModule = that.getModuleTree(\r\n                that.PageSettingData.page.layout,\r\n                customData.packageid\r\n              );\r\n              if(reSortModule&&reSortModule.children){\r\n                //重新排序\r\n                let newChildren = [],allUserCustomModuleIds=[];\r\n                userCustomModuleArray.forEach((item,index)=>{\r\n                  allUserCustomModuleIds.push(item.packageid);\r\n                  //用户没有开启组件互换才去赋值\r\n                  if(!propData.switchUserCustomizationCommutant){\r\n                    let lsmodule = that.getModuleTree(that.originalUserCustomizationModuleObject,item.packageid);\r\n                    lsmodule?lsmodule.hidden = item.hidden:null;\r\n                  }\r\n                  for (let index = 0; index < reSortModule.children.length; index++) {\r\n                    const element = reSortModule.children[index];\r\n                    if(item.packageid == element.packageid&&item.hidden!==true){\r\n                      element.containerIndex = item.containerIndex;\r\n                      element.relationType = item.relationType;\r\n                      element.relationId = item.relationId;\r\n                      newChildren.push(element);\r\n                      break;\r\n                    }\r\n                  }\r\n                })\r\n                //没有在个性化定制里面的组件\r\n                for (let index = 0; index < reSortModule.children.length; index++) {\r\n                  const element = reSortModule.children[index];\r\n                  if(allUserCustomModuleIds.indexOf(element.packageid)==-1){\r\n                    newChildren.push(element)\r\n                  }\r\n                }\r\n                reSortModule.children = newChildren;\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {});\r\n      }\r\n\r\n      //应用主题：接口的方式    主页面才会请求的\r\n      if(that.mainPage&&propData.openIdmTheme&&propData.themeFetchType==\"customInterface\"&&propData.themeInterfaceUrl){\r\n        await this.$previewApi\r\n          .fetchThemeInfo(propData.themeInterfaceUrl, {\r\n            pageid: this.pageid,\r\n            ...this.commonParam()\r\n          })\r\n          .then((res) => {\r\n            that.themeInterfaceHandle(res.data,\"resultData\");\r\n          })\r\n          .catch(function (error) {});\r\n      }else if(that.mainPage&&propData.openIdmTheme&&propData.themeFetchType==\"customFunction\"&&propData.themeCustomFunction&&propData.themeCustomFunction.length>0){\r\n        //自定义处理函数\r\n        let switchThemeValue = \"\";\r\n        propData.themeCustomFunction.forEach(sitem=>{\r\n          try {\r\n            switchThemeValue = window[sitem.name]&&window[sitem.name].call(this,{\r\n              ...this.commonParam(),\r\n              customParam:sitem.param,\r\n              _this:that\r\n            });\r\n          } catch (error) {\r\n          }\r\n        })\r\n        IDM.theme.setCurrentThemeInfo(switchThemeValue);\r\n        that.themeSetObject = switchThemeValue;\r\n      }\r\n    },\r\n    /**\r\n     * 页面用户自定义状态切换触发事件\r\n     * status：true 进入编辑状态   false  退出编辑状态\r\n     * save: true 且 status的参数为 false 的时候则是需要保存状态,其他情况则是不执行保存状态\r\n     */\r\n    pageUserDefinedStatusChangeHandle(status=true,save = false){\r\n      let that = this;\r\n      this.pageUserDefinedStatus = status;\r\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\r\n      //首先找出要自定义的容器组件\r\n       /**\r\n       * 组件范围选择返回的格式：\r\n       * [\r\n       *  {\r\n       *  moduleId:packageid,\r\n       *  moduleName:asName\r\n       *  }\r\n       * ]\r\n       */\r\n      const customContainerModuleId = propData.userCustomizationModuleContainer&&propData.userCustomizationModuleContainer.length>0?propData.userCustomizationModuleContainer[0].moduleId:\"\";\r\n      if(!customContainerModuleId){\r\n        IDM.message.info(\"没有可以自定义的容器组件！\");\r\n        return;\r\n      }\r\n      //对容器组件查找\r\n      let customModuleObject = this.getModuleTree(\r\n        this.PageSettingData.page.layout.children,\r\n        customContainerModuleId\r\n      );\r\n      if(!customModuleObject){\r\n        return false;\r\n      }\r\n      this.customModuleObject = customModuleObject;\r\n      const customModuleRectInfo =  document.querySelector(`#router_page_${that.routerId}`).querySelector(`#${customModuleObject.packageid}`).getBoundingClientRect();\r\n      let eleDiffPos = {},userDefinedDomList,userDefinedContainerDomList,moveDomBox,\r\n        switchUserCustomizationCommutant = propData.switchUserCustomizationCommutant;\r\n      this.openUserCustomizationLeftBar = !switchUserCustomizationCommutant;\r\n      let currentMoveDom,placeholderDom,hoverContainerDom;\r\n      //minYDom：最接近的dom，locationStr：居于上面还是下面\r\n      let minYDom,locationStr=\"\";\r\n      //拖拽的移动\r\n      !this.moduleMoveEvent?this.moduleMoveEvent = function(e){\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        const packageid = e.target.dataset.packageid;\r\n        //移动的时候要改变 idm_module_user_defined_movebox 的 left、top\r\n        //用鼠标的坐标减去元素相对于鼠标的差值\r\n        var position = {};\r\n        position.x = e.clientX-eleDiffPos.x;\r\n        position.y = e.clientY-eleDiffPos.y;\r\n        moveDomBox.style.left=position.x+\"px\";\r\n        moveDomBox.style.top=position.y+\"px\";\r\n        //计算横向中心点坐标\r\n        const moveDomCenterX = position.x+(moveDomBox.getBoundingClientRect().width/2),\r\n        moveDomCenterY = position.y + (moveDomBox.getBoundingClientRect().height/2),\r\n        moveDomLeftX = position.x,\r\n        moveDomRightX = position.x+moveDomBox.getBoundingClientRect().width,\r\n        moveDomTopY = position.y,\r\n        moveDomBottomY = position.y+moveDomBox.getBoundingClientRect().height;\r\n        let isCustomModuleDomOut = false;\r\n        if(customModuleRectInfo.x>moveDomRightX||customModuleRectInfo.x+customModuleRectInfo.width<moveDomLeftX||\r\n        customModuleRectInfo.y>moveDomBottomY||customModuleRectInfo.y+customModuleRectInfo.height<moveDomTopY\r\n        ){\r\n          isCustomModuleDomOut = true;\r\n        }\r\n        //对可调整的（class=idm_module_user_defined）要进行监听是否触发到元素上了，\r\n        //有两种形式，同一容器下直接排序方式，非同一容器下直接换位或者换位插入（要取页面配置）\r\n        //idm_module_user_defined_placeholderbox 即将要插入的位置 \r\n        //当拖拽的元素坐标最大Y轴大于当前元素的Y轴不超过10px则触发换位或排序\r\n        //crossYDomList:Y轴有交叉的\r\n        //topMinDom:X中心点最近、距离moveTop最小的（Y轴无交叉的）\r\n        //bottomMinDom:X中心点最近、距离moveBottom最小的（Y轴无交叉的）\r\n        //centerMinDomList:包含了X中心点的集合\r\n        let crossYDomList = [],coverXDomList=[],centerCrossXDomList=[];\r\n        userDefinedDomList&&userDefinedDomList.forEach(userDefinedDomItem=>{\r\n          //先得出符合Y轴的item\r\n          const itemRectInfo = userDefinedDomItem.parentElement.getBoundingClientRect();\r\n          // console.log(\"🚀 ~ file: Page.vue ~ line 413 ~ moveEvent ~ itemRectInfo\", itemRectInfo)\r\n          const itemTopY = itemRectInfo.y,\r\n          itemBottomY = itemRectInfo.y+itemRectInfo.height;\r\n          if((itemTopY<=moveDomTopY&&moveDomTopY<=itemBottomY)||(itemBottomY>=moveDomBottomY&&itemTopY<=moveDomBottomY)){\r\n            //代表顶部或底部都在当前组件范围内\r\n            crossYDomList.push(userDefinedDomItem.parentElement);\r\n          }\r\n          //顶部和底部覆盖了小组件的情况(有交叉的情况)\r\n          if(itemTopY>moveDomTopY&&itemBottomY<moveDomTopY&&(\r\n            (itemRectInfo.x<moveDomLeftX&&itemRectInfo.x+itemRectInfo.width>moveDomLeftX)||\r\n            (itemRectInfo.x+itemRectInfo.width<moveDomRightX&&itemRectInfo.x+itemRectInfo.width>moveDomLeftX)||\r\n            (moveDomLeftX<itemRectInfo.x&&itemRectInfo.x+itemRectInfo.width>moveDomLeftX&&itemRectInfo.x<moveDomRightX)\r\n          )){\r\n            coverXDomList.push(userDefinedDomItem.parentElement);\r\n          }\r\n          if(moveDomCenterX>itemRectInfo.x&&moveDomCenterX<(itemRectInfo.x+itemRectInfo.width)){\r\n            centerCrossXDomList.push(userDefinedDomItem.parentElement);\r\n          }\r\n        })\r\n        // console.log(\"🚀 ~ file: Page.vue ~ line 420 ~ moveEvent ~ userDefinedDomList\", userDefinedDomList)\r\n        // console.log(\"🚀 ~ file: Page.vue ~ line 410 ~ moveEvent ~ crossYDomList\", crossYDomList)\r\n        //过滤完中心点X的dom后\r\n        let filtrXcrossYDomList = [];\r\n        if(crossYDomList.length>0){\r\n          //在Y轴有交叉的取出离中心点最近的\r\n          crossYDomList.forEach(userDefinedDomItem=>{\r\n            const itemRectInfo = userDefinedDomItem.getBoundingClientRect();\r\n            if(moveDomCenterX>itemRectInfo.x&&moveDomCenterX<(itemRectInfo.x+itemRectInfo.width)){\r\n              filtrXcrossYDomList.push(userDefinedDomItem);\r\n            }\r\n          })\r\n        }\r\n        //排出取出最小的距离\r\n        let minYNumber=999999999;\r\n        if(filtrXcrossYDomList.length>0){\r\n          //此处只有交叉的情况\r\n          filtrXcrossYDomList.forEach(userDefinedDomItem=>{\r\n            const itemRectInfo = userDefinedDomItem.getBoundingClientRect();\r\n            const itemTopY = itemRectInfo.y,\r\n            itemBottomY = itemRectInfo.y+itemRectInfo.height;\r\n            if(moveDomTopY-itemTopY<minYNumber){\r\n              minYDom = userDefinedDomItem;\r\n              minYNumber = moveDomTopY-itemTopY;\r\n              //当前元素上面\r\n              locationStr=\"top\";\r\n            }\r\n            if(itemBottomY-moveDomBottomY<minYNumber){\r\n              minYDom = userDefinedDomItem;\r\n              minYNumber = itemBottomY-moveDomBottomY;\r\n              //当前元素下面\r\n              locationStr=\"bottom\";\r\n            }\r\n          })\r\n        }else if(coverXDomList.length>0){\r\n          //此处只有Y轴被完全覆盖的\r\n          coverXDomList.forEach(userDefinedDomItem=>{\r\n            const itemRectInfo = userDefinedDomItem.getBoundingClientRect();\r\n            //这里要找出Y轴的中心点离哪个最近\r\n            if(moveDomCenterY>itemRectInfo.y+itemRectInfo.height&&moveDomCenterY-itemRectInfo.y-itemRectInfo.height<minYNumber){\r\n                minYDom = userDefinedDomItem;\r\n                minYNumber = moveDomTopY-itemRectInfo.y-itemRectInfo.height;\r\n                //当前元素下面\r\n                locationStr=\"bottom\";\r\n            }\r\n            if(moveDomCenterY<itemRectInfo.y&&itemRectInfo.y-moveDomCenterY<minYNumber){\r\n                minYDom = userDefinedDomItem;\r\n                minYNumber = itemRectInfo.y-moveDomBottomY;\r\n                //当前元素上面\r\n                locationStr=\"top\";\r\n            }\r\n          });\r\n          if(!minYDom){\r\n            //上述结果如果没有，那就是中心点在里面\r\n            coverXDomList.forEach(userDefinedDomItem=>{\r\n              const itemRectInfo = userDefinedDomItem.getBoundingClientRect();\r\n              if(moveDomCenterY<=itemRectInfo.y+itemRectInfo.height&&moveDomCenterY>=itemRectInfo.y){\r\n                //在中心，取出离X轴中心最近的\r\n                if(Math.abs(moveDomCenterX-(itemRectInfo.x+itemRectInfo.width/2))<minYNumber){\r\n                   minYDom = userDefinedDomItem;\r\n                   minYNumber = Math.abs(moveDomCenterX-(itemRectInfo.x+itemRectInfo.width/2));\r\n                }\r\n                //当前元素下面\r\n                locationStr=\"bottom\";\r\n              }\r\n            });\r\n          }\r\n        }else if(centerCrossXDomList.length>0&&isCustomModuleDomOut){\r\n          //此处只有要移动的组件完全在底部或者顶部的可能性\r\n          centerCrossXDomList.forEach(userDefinedDomItem=>{\r\n            const itemRectInfo = userDefinedDomItem.getBoundingClientRect();\r\n            if(moveDomTopY>itemRectInfo.y+itemRectInfo.height){\r\n              //在底部\r\n              if(moveDomTopY-itemRectInfo.y-itemRectInfo.height<minYNumber){\r\n                minYDom = userDefinedDomItem;\r\n                minYNumber = moveDomTopY-itemRectInfo.y-itemRectInfo.height;\r\n                //当前元素下面\r\n                locationStr=\"bottom\";\r\n              }\r\n            }\r\n            if(moveDomBottomY<itemRectInfo.y){\r\n              //在顶部\r\n              if(itemRectInfo.y-moveDomBottomY<minYNumber){\r\n                minYDom = userDefinedDomItem;\r\n                minYNumber = itemRectInfo.y-moveDomBottomY;\r\n                //当前元素上面\r\n                locationStr=\"top\";\r\n              }\r\n            }\r\n          })\r\n        }\r\n        //容器\r\n        userDefinedContainerDomList.forEach(userDefinedContainerDomItem=>{\r\n            const itemRectInfo = userDefinedContainerDomItem.getBoundingClientRect();\r\n            //中心点在容器内代表是要放到哪个容器中\r\n            if(moveDomCenterX>itemRectInfo.x&&moveDomCenterX<itemRectInfo.x+itemRectInfo.width\r\n            &&\r\n            moveDomCenterY>itemRectInfo.y&&moveDomCenterY<itemRectInfo.y+itemRectInfo.height\r\n            ){\r\n              hoverContainerDom = userDefinedContainerDomItem;\r\n            }\r\n        })\r\n        if(switchUserCustomizationCommutant){\r\n          //代表是换位\r\n          userDefinedContainerDomList.forEach(item=>{\r\n            IDM.removeClasss(item,\"idm_module_user_defined_placeholderstyle\")\r\n          })\r\n          hoverContainerDom&&IDM.addClasss(hoverContainerDom,\"idm_module_user_defined_placeholderstyle\")\r\n        }\r\n        //要判断是否  switchUserCustomizationCommutant  = true  换位，如果换位则需要给捕捉到的容器给一个遮罩层即可，就不用位移占位元素了\r\n        if(minYDom&&!switchUserCustomizationCommutant){\r\n          let parentDom = minYDom.parentElement;\r\n          if(locationStr==\"top\"){\r\n            parentDom.insertBefore(placeholderDom,minYDom);\r\n          }else{\r\n            //bottom\r\n            if (parentDom.lastChild == minYDom){\r\n              parentDom.appendChild(placeholderDom)\r\n            }else{\r\n              parentDom.insertBefore(placeholderDom,minYDom.nextSibling);\r\n            }\r\n          }\r\n        }else if(!switchUserCustomizationCommutant&&hoverContainerDom.childElementCount==0){\r\n          //代表是空的\r\n          hoverContainerDom.appendChild(placeholderDom)\r\n        }\r\n      }:null;\r\n      //松开事件\r\n      !this.moduleMoveUpEvent?this.moduleMoveUpEvent = function(e){\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        //要移除这些事件，否则会影响其他功能\r\n        document.removeEventListener(\"mousemove\",that.moduleMoveEvent);\r\n        document.removeEventListener(\"mouseup\",that.moduleMoveUpEvent);\r\n        if(switchUserCustomizationCommutant&&hoverContainerDom){\r\n          let lastElement = placeholderDom,parentDom = placeholderDom.parentElement;\r\n          console.log(\"🚀 ~ file: Page.vue ~ line 568 ~ moveUpEvent ~ hoverContainerDom\", hoverContainerDom.childNodes)\r\n          if(hoverContainerDom.childNodes){\r\n            const childElementCount = _.cloneDeep(hoverContainerDom.childElementCount);\r\n            for (let index = 0; index < childElementCount; index++) {\r\n              const element = hoverContainerDom.childNodes[0];\r\n              //更新结构\r\n              that.changePageSettingModuleSort(element.id,index==0?currentMoveDom.id: lastElement.id,\"bottom\");\r\n              parentDom.insertBefore(element,lastElement.nextSibling);\r\n              lastElement = element;\r\n            }\r\n          }\r\n          //插入悬浮容器中\r\n          hoverContainerDom.appendChild(currentMoveDom);\r\n          //更新结构\r\n          that.changePageSettingModuleSort(currentMoveDom.id,hoverContainerDom.getAttribute(\"idm-container-index\"),\"inner\")\r\n        }else{\r\n          //插入到占位前面\r\n          placeholderDom.parentElement.insertBefore(currentMoveDom,placeholderDom);\r\n          //更新结构\r\n          minYDom?that.changePageSettingModuleSort(currentMoveDom.id,minYDom.id,locationStr):(\r\n            hoverContainerDom?that.changePageSettingModuleSort(currentMoveDom.id,hoverContainerDom.getAttribute(\"idm-container-index\"),\"inner\"):null\r\n          );\r\n\r\n        }\r\n        //移除占位\r\n        $(placeholderDom).remove();\r\n        //移除移动盒子\r\n        $(moveDomBox).remove();\r\n        //移除悬浮遮罩占位样式\r\n        userDefinedContainerDomList.forEach(item=>{\r\n          IDM.removeClasss(item,\"idm_module_user_defined_placeholderstyle\")\r\n        })\r\n        minYDom=null;\r\n        locationStr=\"\";\r\n        //发送组件消息\r\n        IDM.broadcast.send({\r\n          type:\"resendAutoLayout\",\r\n          rangeModule:\"\",\r\n          message:{}\r\n        })\r\n      }:null;\r\n      //按下事件\r\n      !this.moduleMousedownEvent?this.moduleMousedownEvent = function(e){\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        const packageid = e.target.dataset.packageid;\r\n        if(!packageid){\r\n          return;\r\n        }\r\n        that.isChangeUserDefined = true;\r\n        document.addEventListener(\"mousemove\",that.moduleMoveEvent);\r\n        document.addEventListener(\"mouseup\",that.moduleMoveUpEvent);\r\n        //要拷贝组件至绝对定位、注意组件的容器宽高是要跟现在保持一致的\r\n        console.log(\"🚀 ~ file: Page.vue ~ line 397 ~ mousedownEvent ~ e\", e)\r\n        //获取当前packageid组件的实际宽高值\r\n        currentMoveDom = document.querySelector(`#router_page_${that.routerId}`).querySelector(`#${packageid}`)\r\n        if(!currentMoveDom){\r\n          return;\r\n        }\r\n        const rectInfo = currentMoveDom.getBoundingClientRect();\r\n        console.log(\"🚀 ~ file: Page.vue ~ line 401 ~ mousedownEvent ~ rectInfo\", rectInfo);\r\n        //创建一个绝对定位的容器，用于存放剪切出来的组件\r\n        moveDomBox = document.createElement(\"div\");\r\n        moveDomBox.id=\"idm_module_user_defined_movebox\";\r\n        moveDomBox.className=\"idm_module_user_defined_movebox\";\r\n        moveDomBox.style.width = rectInfo.width+\"px\";\r\n        moveDomBox.style.height = rectInfo.height+\"px\";\r\n\r\n        eleDiffPos.x = e.clientX-rectInfo.x;\r\n        eleDiffPos.y = e.clientY-rectInfo.y;\r\n        //要计算出位置与原来一模一样\r\n        moveDomBox.style.left=e.clientX-eleDiffPos.x+\"px\";\r\n        moveDomBox.style.top=e.clientY-eleDiffPos.y+\"px\";\r\n        moveDomBox.style.position = \"absolute\";\r\n        //创建一个同等宽的占位元素到currentMoveDom位置\r\n        placeholderDom = document.createElement(\"div\");\r\n        placeholderDom.id=\"idm_module_user_defined_placeholderbox\";\r\n        placeholderDom.className=\"idm_module idm_module_user_defined_placeholderbox\";\r\n        // placeholderDom.style.width = \"px\";\r\n        placeholderDom.style.height = rectInfo.height+\"px\";\r\n        placeholderDom.dataset.styleHeight = rectInfo.height+\"px\";\r\n        currentMoveDom.parentElement.insertBefore(placeholderDom,currentMoveDom);\r\n        moveDomBox.appendChild(currentMoveDom);\r\n        document.body.appendChild(moveDomBox);\r\n        \r\n        userDefinedDomList = document.querySelector(`#router_page_${that.routerId}`).querySelectorAll(\".idm_module_user_defined\");\r\n      }:null;\r\n      //所有容器Dom\r\n      userDefinedContainerDomList = document.querySelector(`#router_page_${that.routerId}`).querySelectorAll(\".drag_container[idm-ctrl-id='\"+customModuleObject.id+\"']\");\r\n      that.registerModuleMouseDownEvent();\r\n      if(save&&this.pageUserDefinedStatus===false){\r\n        this.userDefinedSave();\r\n      }\r\n    },\r\n    /**\r\n     * 注册组件事件\r\n     * registerPackageid:要注册的组件ID\r\n     */\r\n    registerModuleMouseDownEvent(registerPackageid){\r\n      let that = this;\r\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\r\n      this.customModuleObject.children&&this.customModuleObject.children.forEach(module=>{\r\n        if(registerPackageid&&registerPackageid!==module.packageid){\r\n          return;\r\n        }\r\n        //对组件进行添加事件、Dom、移除事件、Dom\r\n        let moduleDom = $(`#router_page_${that.routerId} #${module.packageid}`),\r\n        moduleElement=document.querySelector(`#router_page_${that.routerId}`).querySelector(`#${module.packageid}`);\r\n        if(!moduleElement){\r\n          return;\r\n        }\r\n        if(that.pageUserDefinedStatus){\r\n          const marginLeft = moduleDom.find(\">div[idm-ctrl='idm_module']\").css('marginLeft'),\r\n          marginRight = moduleDom.find(\">div[idm-ctrl='idm_module']\").css('marginRight');\r\n\r\n          let userDefinedDom = document.createElement(\"div\");\r\n          userDefinedDom.className=\"idm_module_user_defined\";\r\n          userDefinedDom.style.marginLeft = marginLeft;\r\n          userDefinedDom.style.marginRight = marginRight;\r\n          userDefinedDom.dataset.packageid = module.packageid;\r\n          \r\n          if(!propData.switchUserCustomizationCommutant){\r\n            //不是换位就需要能把组件删除\r\n            userDefinedDom.innerHTML = `\r\n            <div title=\"移除组件\">\r\n            <svg t=\"1659629683475\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9221\" width=\"16\" height=\"16\"><path d=\"M576 512l277.333333 277.333333-64 64-277.333333-277.333333L234.666667 853.333333 170.666667 789.333333l277.333333-277.333333L170.666667 234.666667 234.666667 170.666667l277.333333 277.333333L789.333333 170.666667 853.333333 234.666667 576 512z\" p-id=\"9222\"></path></svg>\r\n            </div>\r\n            `;\r\n            userDefinedDom.querySelector(\"div\").addEventListener(\"click\",function(e){\r\n              e.stopPropagation();\r\n              e.preventDefault();\r\n              //移除组件 hidden=true\r\n              let hiddenPackageid = e.currentTarget.parentElement.dataset.packageid;\r\n              that.customModuleObject.children.forEach(iitem=>{\r\n                if(iitem.packageid==hiddenPackageid){\r\n                  iitem.hidden = true;\r\n                }\r\n              })\r\n              let lsmodule = that.getModuleTree(that.originalUserCustomizationModuleObject,hiddenPackageid);\r\n              lsmodule?lsmodule.hidden = true:null;\r\n              that.$forceUpdate();\r\n              $(document.querySelector(`#router_page_${that.routerId}`).querySelector(`#${hiddenPackageid}`)).remove();\r\n            })\r\n          }else{\r\n            userDefinedDom.innerHTML = `\r\n            <div title=\"设置要显示的组件\">\r\n            <svg t=\"1660125485320\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"23286\" width=\"16\" height=\"16\"><path d=\"M510.37806 337.803609c-98.010221 0-177.748287 78.842673-177.748287 175.75284 0 96.91426 79.738066 175.763073 177.748287 175.763073 9.537214 0 19.620873-0.978281 31.797194-3.088338 18.196431-3.281743 30.290887-20.538779 26.963095-38.471197-2.924609-15.732309-16.693194-27.152407-32.747845-27.152407-2.071172 0-4.15974 0.196475-6.123464 0.563842-7.937786 1.402953-14.233166 2.056845-19.807115 2.056845-61.159942 0-110.915136-49.201585-110.915136-109.671819 0-60.467163 49.679469-109.661585 110.747313-109.661585 61.116963 0 110.832248 49.194422 110.832248 109.661585 0 5.892197-0.656963 12.0832-2.088568 19.531845-3.327792 17.928325 8.769734 35.189454 26.959002 38.464033 2.006703 0.360204 4.045129 0.546446 6.070252 0.546446 16.204054 0 30.019711-11.43033 32.832779-27.116591 2.13871-11.45182 3.13848-21.435195 3.13848-31.41857 0.042979-46.873564-18.435884-90.990341-52.033074-124.223233C602.407056 356.106464 557.790906 337.803609 510.37806 337.803609zM938.476161 432.79917c-2.185782-11.426237-11.037381-20.499893-22.563902-23.12058-41.909505-9.508561-76.781734-34.929534-98.185206-71.550593-21.334911-36.560684-26.191522-79.099523-13.68979-119.709429 3.52836-11.123338 0.007163-23.235191-8.951883-30.840402-41.860387-35.721573-89.536222-62.938448-141.695163-80.885192-3.152806-1.088798-6.437619-1.639337-9.776667-1.639337-8.256034 0-16.182564 3.431146-21.724791 9.376555-29.236881 31.04404-68.840878 48.140417-111.5107 48.140417-42.673915 0-82.305541-17.125029-111.607914-48.230468-7.877411-8.333806-20.510126-11.512195-31.580253-7.726985-52.483328 18.171871-100.131535 45.416376-141.640927 80.988546-8.815783 7.591909-12.322653 19.620873-8.934486 30.67258 12.586666 40.645722 7.759731 83.180468-13.597693 119.78106-21.306258 36.5965-56.149834 62.006216-98.17395 71.561849-11.540847 2.709715-20.396539 11.812023-22.559808 23.166629-5.228071 27.169803-7.877411 54.346769-7.877411 80.770582 0 26.426883 2.64934 53.603849 7.873318 80.763418 2.174526 11.411911 11.023054 20.488637 22.552645 23.12058 41.913599 9.512654 76.785827 34.922371 98.19237 71.547523 21.349237 36.59343 26.177196 79.128175 13.583366 119.795387-3.363607 10.969842 0.121773 23.013133 8.973372 30.758538 41.84913 35.707246 89.494267 62.920028 141.662417 80.902588 11.466146 3.885494 23.738657 0.549515 31.454386-7.680936 29.29828-31.091112 68.925812-48.216141 111.593588-48.216141s82.302471 17.125029 111.560842 48.183396c5.556553 5.955642 13.494339 9.380648 21.782096 9.380648 3.27765 0 6.537903-0.520863 9.829879-1.599428 52.126194-17.968234 99.774401-45.184085 141.652184-80.912821 8.791224-7.577582 12.308327-19.628036 8.94165-30.758538-12.597923-40.678468-7.745405-83.20605 13.672394-119.773897 21.324678-36.625152 56.192813-62.030775 98.19237-71.547523 11.390421-2.592035 20.23588-11.633968 22.549575-23.106254 5.223978-27.184129 7.870248-54.358025 7.870248-80.770582C946.342316 487.171522 943.697069 459.965903 938.476161 432.79917zM728.572524 789.878798c-26.02677 20.157085-54.736649 36.553521-85.487 48.818869-36.682457-32.144094-83.60207-49.779753-132.792399-49.779753-48.926316 0-95.838765 17.635659-132.767839 49.786916-30.744211-12.262278-59.45716-28.655643-85.491093-48.812729 9.894348-47.441499 1.889023-96.449679-22.763446-138.627291-24.448832-41.966811-63.427588-73.339332-110.186542-88.840374-2.381234-16.343223-3.584642-32.758078-3.584642-48.869011 0-16.043395 1.203408-32.451086 3.584642-48.851615 46.612621-15.389502 85.584214-46.758953 110.186542-88.850607 24.523533-42.024116 32.525788-91.033319 22.74912-138.620128 26.0237-20.149922 54.735625-36.543288 85.494163-48.815799 36.821627 32.201399 83.73817 49.861618 132.778072 49.861618 49.194422 0 96.109941-17.635659 132.792399-49.779753 30.751375 12.269441 59.45716 28.662807 85.48086 48.812729-9.809413 47.63388-1.835811 96.634898 22.667256 138.620128 24.445762 41.966811 63.416332 73.343425 110.182448 88.850607 2.381234 16.386202 3.584642 32.801057 3.584642 48.940642 0.143263 15.443737-1.031493 31.797194-3.499707 48.701189-46.763047 15.504112-85.73771 46.873564-110.186542 88.836281C726.84416 693.189665 718.845998 742.190683 728.572524 789.878798z\" p-id=\"23287\"></path></svg>\r\n            </div>\r\n            `;\r\n            userDefinedDom.querySelector(\"div\").addEventListener(\"click\",function(e){\r\n              e.stopPropagation();\r\n              e.preventDefault();\r\n              //显示替换窗口\r\n              let currentPackageid = e.currentTarget.parentElement.dataset.packageid;\r\n              that.pageUserDefinedModalVisible = true;\r\n              that.currentContainerShowPackageid = currentPackageid;\r\n              that.currentContainerShowModuleObject = that.getModuleTree(that.PageSettingData.page.layout.children,currentPackageid);\r\n              that.currentContainerShowModuleName = that.currentContainerShowModuleObject.props&&that.currentContainerShowModuleObject.props.compositeAttr&&that.currentContainerShowModuleObject.props.compositeAttr.title || that.currentContainerShowModuleObject.asName\r\n            })\r\n          }\r\n          moduleElement.appendChild(userDefinedDom)\r\n          //给组件注册拖拽事件等等\r\n          moduleElement.addEventListener(\"mousedown\",that.moduleMousedownEvent)\r\n        }else{\r\n          moduleElement&&$(moduleElement.querySelector(\".idm_module_user_defined\")).remove();\r\n          //取消组件的事件绑定\r\n          moduleElement&&moduleElement.removeEventListener(\"mousedown\",that.moduleMousedownEvent);\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * moveModuleId：要移动的组件packageid\r\n     * tragetModuleId：要移动到相关位置的组件packageid，如果position为inner则此处的id为容器的编号\r\n     * position：位置：top、bottom、inner\r\n     * \r\n     */\r\n    changePageSettingModuleSort(moveModuleId,tragetModuleId,position){\r\n      //\r\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\r\n      //首先找出要自定义的容器组件\r\n       /**\r\n       * 组件范围选择返回的格式：\r\n       * [\r\n       *  {\r\n       *  moduleId:packageid,\r\n       *  moduleName:asName\r\n       *  }\r\n       * ]\r\n       */\r\n      const customContainerModuleId = propData.userCustomizationModuleContainer&&propData.userCustomizationModuleContainer.length>0?propData.userCustomizationModuleContainer[0].moduleId:\"\";\r\n      let customModuleObject = this.getModuleTree(\r\n        this.PageSettingData.page.layout.children,\r\n        customContainerModuleId\r\n      );\r\n      if(!customModuleObject){\r\n        return false;\r\n      }\r\n      let moveModuleIndex = -1,tragetModuleIndex = -1;\r\n      customModuleObject.children&&customModuleObject.children.forEach((item,index)=>{\r\n        if(item.packageid==moveModuleId&&position==\"inner\"){\r\n          item.containerIndex = tragetModuleId;\r\n          if(item.relationType&&item.relationType.startsWiths(\"inner_\")){\r\n            item.relationType = \"inner_\"+tragetModuleId;\r\n          }\r\n        }\r\n        if(item.packageid==moveModuleId){\r\n          moveModuleIndex = index;\r\n        }\r\n        if(item.packageid==tragetModuleId){\r\n          tragetModuleIndex = index;\r\n        }\r\n      })\r\n      if(tragetModuleIndex>-1&&moveModuleIndex>-1&&position!=\"inner\"){\r\n        customModuleObject.children[moveModuleIndex].containerIndex = customModuleObject.children[tragetModuleIndex].containerIndex;\r\n        customModuleObject.children[moveModuleIndex].relationType = position;\r\n        customModuleObject.children[moveModuleIndex].relationId = tragetModuleId;\r\n        \r\n        customModuleObject.children.splice(tragetModuleIndex+(position==\"bottom\"?1:0),0,customModuleObject.children[moveModuleIndex]);\r\n        customModuleObject.children.splice(moveModuleIndex+(tragetModuleIndex<moveModuleIndex?1:0),1);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 移除用户定制选择的\r\n     */\r\n    removeUserDefinedSelect(item){\r\n      let that = this;\r\n      item.hidden = true;\r\n      let lsmodule = that.getModuleTree(this.PageSettingData.page.layout.children,item.packageid);\r\n      lsmodule?lsmodule.hidden = true:null;\r\n      that.$forceUpdate();\r\n      $(document.querySelector(`#router_page_${that.routerId}`).querySelector(`#${item.packageid}`)).remove();\r\n    },\r\n    /**\r\n     * 添加用户选择的组件\r\n     */\r\n    addUserDefinedSelect(item){\r\n      //添加完成后\r\n      let that = this;\r\n      item.hidden = false;\r\n      let lsmodule = that.getModuleTree(this.PageSettingData.page.layout.children,item.packageid);\r\n      //组件不存在的时候需要追加\r\n      if(!lsmodule){\r\n        let propData = this.PageSettingData.page.layout.props.compositeAttr;\r\n        const customContainerModuleId = propData.userCustomizationModuleContainer&&propData.userCustomizationModuleContainer.length>0?propData.userCustomizationModuleContainer[0].moduleId:\"\";\r\n        let customContainerModule = that.getModuleTree(this.PageSettingData.page.layout.children,customContainerModuleId);\r\n        customContainerModule.children.push(_.cloneDeep(item));\r\n      }\r\n\r\n      lsmodule?lsmodule.hidden = false:null;\r\n      that.$forceUpdate();\r\n      //重新加载组件\r\n      that.moduleReload(item.packageid);\r\n      //加载完毕后还需要重新注册事件\r\n      that.registerModuleMouseDownEvent(item.packageid);\r\n      //重新加载组件需要修改组件的排序\r\n      //找出当前索引的最后一个\r\n      let lastModule;\r\n      this.customModuleObject.children&&this.customModuleObject.children.forEach(module=>{\r\n        if(module.containerIndex==lsmodule.containerIndex&&module.hidden!==true){\r\n          lastModule = module;\r\n        }\r\n      })\r\n      //要重新排序的\r\n      if(lastModule){\r\n        that.changePageSettingModuleSort(item.packageid,lastModule.packageid,\"bottom\")\r\n      }else{\r\n        that.changePageSettingModuleSort(item.packageid,lsmodule.containerIndex,\"inner\")\r\n      }\r\n    },\r\n    /**\r\n     * 组件替换功能\r\n     * item:要替换的对象\r\n     * type:替换的类型：replace 和隐藏域的组件替换， changeseats 跟当前组件换位\r\n     */\r\n    userDefinedModuleReplace(item,type){\r\n      let that = this;\r\n      const orgcontainerIndex = that.currentContainerShowModuleObject.containerIndex;\r\n      //把当前容器的组件移出，如果type=replace 则和999999999的容器序号替换，反之和当前容器的进行替换\r\n      that.currentContainerShowModuleObject.containerIndex = item.containerIndex;\r\n      that.currentContainerShowModuleObject.relationType = item.relationType;\r\n      that.currentContainerShowModuleObject.relationId = item.relationId;\r\n      //把当前选中的组件移到当前组件所在的容器位置\r\n      that.changePageSettingModuleSort(item.packageid,orgcontainerIndex,\"inner\");\r\n      item.relationType = \"inner_\"+orgcontainerIndex;\r\n\r\n      if(type==\"changeseats\"){\r\n        //需要先移除被换位的，然后再渲染\r\n        $(document.querySelector(`#router_page_${that.routerId}`).querySelector(`#${item.packageid}`)).remove();\r\n      }\r\n      //把要当前替换的全部移除，然后再渲染\r\n      $(document.querySelector(`#router_page_${that.routerId}`).querySelector(`#${that.currentContainerShowModuleObject.packageid}`)).remove();\r\n       //重新加载组件\r\n      that.moduleReload(item.packageid);\r\n      //加载完毕后还需要重新注册事件\r\n      that.registerModuleMouseDownEvent(item.packageid);\r\n      if(type==\"changeseats\"){\r\n        //重新加载组件\r\n        that.moduleReload(that.currentContainerShowModuleObject.packageid);\r\n        //加载完毕后还需要重新注册事件\r\n        that.registerModuleMouseDownEvent(that.currentContainerShowModuleObject.packageid);\r\n      }\r\n      that.pageUserDefinedModalVisible = false;\r\n      //发送组件消息\r\n      IDM.broadcast.send({\r\n        type:\"resendAutoLayout\",\r\n        rangeModule:\"\",\r\n        message:{}\r\n      })\r\n    },\r\n    /**\r\n     * 用户个性化定制保存\r\n     */\r\n    userDefinedSave(){\r\n      let that = this;\r\n      that.userDefinedSaveLoading = true;\r\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\r\n      const customContainerModuleId = propData.userCustomizationModuleContainer&&propData.userCustomizationModuleContainer.length>0?propData.userCustomizationModuleContainer[0].moduleId:\"\";\r\n      \r\n      let customModuleObject = this.getModuleTree(\r\n        this.PageSettingData.page.layout.children,\r\n        customContainerModuleId\r\n      );\r\n      if(!customModuleObject){\r\n        that.userDefinedSaveLoading = false;\r\n        return false;\r\n      }\r\n\r\n      let saveNewData = _.cloneDeep(customModuleObject);\r\n      this.deleteLayoutAttachAttr(saveNewData)\r\n      //保存到数据库中\r\n      propData.userCustomizationSaveUrl&&IDM.http\r\n        .post(propData.userCustomizationSaveUrl, {\r\n          pageid: this.pageid,\r\n          version:this.PageSettingData.pageBaseInfo.version,\r\n          customData: JSON.stringify(saveNewData),\r\n        })\r\n        .then((res) => {\r\n          res = res?res.data:{};\r\n          that.userDefinedSaveLoading = false;\r\n          if (res.code !== \"200\") {\r\n              IDM.message.error(\"个性化定制保存失败！message：\"+res.message);\r\n              return;\r\n          }\r\n          IDM.message.success(\"保存成功！\");\r\n          //保存成功\r\n          IDM.page.changePageUserDefinedStatus({routerId:that.routerId,status:false});\r\n        })\r\n        .catch((error) => {\r\n            IDM.message.error(\"个性化定制保存失败！message：\"+error.message);\r\n            that.userDefinedSaveLoading = false;\r\n        });\r\n    },\r\n    userDefinedReset(){\r\n      let that = this;\r\n      that.userDefinedSaveLoading = true;\r\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\r\n\r\n      //保存到数据库中\r\n      propData.userCustomizationSaveUrl&&IDM.http\r\n        .post(propData.userCustomizationSaveUrl, {\r\n          pageid: this.pageid,\r\n          version:this.PageSettingData.pageBaseInfo.version,\r\n          reset:1\r\n        })\r\n        .then((res) => {\r\n          res = res?res.data:{};\r\n          if (res.code !== \"200\") {\r\n              that.userDefinedSaveLoading = false;\r\n              IDM.message.error(\"重置操作失败！message：\"+res.message);\r\n              return;\r\n          }\r\n          IDM.message.success(\"重置成功！3秒后即将刷新本页面。\");\r\n          setTimeout(()=>{\r\n            window.location.reload();\r\n          },3000)\r\n        })\r\n        .catch((error) => {\r\n            IDM.message.error(\"重置操作失败！message：\"+error.message);\r\n            that.userDefinedSaveLoading = false;\r\n        });\r\n    },\r\n    /**\r\n     * 用户个性化定制退出\r\n     */\r\n    userDefinedQuit(){\r\n      //不保存当前的数据，重新刷新当前页面\r\n      if(this.isChangeUserDefined===true){\r\n        window.location.reload();\r\n      }else{\r\n        IDM.page.changePageUserDefinedStatus({routerId:this.routerId,status:false});\r\n      }\r\n    },\r\n    /**\r\n     * 遮罩层直接关闭窗口\r\n     */\r\n    layerClickHandle(e) {\r\n      let dialogId = e.target.getAttribute(\"dialog-id\");\r\n      if (!dialogId) {\r\n        return;\r\n      }\r\n      window.IdmBuiltin_CloseDialog({\r\n        routerId:this.routerId,\r\n        targetModule: [{ moduleId: dialogId }],\r\n      });\r\n    },\r\n    /**\r\n     * 动态检查是否加载react文件或其他文件\r\n     */\r\n    async initReactOrOtherLib(react) {\r\n      //判断是否已经加载过\r\n      if (react&&!IDM.router.getReact()) {\r\n        IDM.router.setReact();\r\n        //动态加载react文件\r\n        await IDM.http\r\n          .importFiles([\r\n            IDM.url.getWebPath(\"~/lib/react.min.js\"),\r\n            IDM.url.getWebPath(\"~/lib/react-dom.min.js\"),\r\n          ])\r\n          .then(() => {\r\n            //加载完成\r\n            console.log(\"react文件加载成功\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"react文件加载出错\");\r\n          });\r\n      }\r\n    },\r\n    /**\r\n     * 组件加载之前执行\r\n     */\r\n    beforeLoadingFunction() {\r\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\r\n      if (\r\n        propData.beforeLoadingFunction &&\r\n        propData.beforeLoadingFunction.length > 0\r\n      ) {\r\n        this.commonCustomEventFunHandle(propData, \"beforeLoadingFunction\");\r\n      }\r\n    },\r\n    /**\r\n     * 组件加载完后执行\r\n     */\r\n    afterLoadingFunction() {\r\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\r\n      if (\r\n        propData.afterLoadingFunction &&\r\n        propData.afterLoadingFunction.length > 0\r\n      ) {\r\n        this.commonCustomEventFunHandle(propData, \"afterLoadingFunction\");\r\n      }\r\n    },\r\n    /**\r\n    页面请求组件之前加载接口\r\n     */\r\n    requestPageCommonInterfaceDataBefore(callback){\r\n      var interfaceList = (this.PageSettingData.page.layout.props.compositeAttr?this.PageSettingData.page.layout.props.compositeAttr.interfaceList:[])||[];\r\n      if(interfaceList.length==0){\r\n        callback&&callback();\r\n        return;\r\n      }\r\n      interfaceList = interfaceList.filter(item=>item.loadTimingType=='pageloadbefore');\r\n      if(interfaceList.length==0){\r\n        callback&&callback();\r\n        return;\r\n      }\r\n      this.orderlyRequestInterface(interfaceList,0,this.InterfaceParam(),callback);\r\n    },\r\n    /**\r\n     * 请求页面设置的所有接口并回调给每个组件\r\n     * @param {*} checkFirstLoad 判断是否需要进行首次加载后续不加载的判断\r\n     */\r\n    requestPageCommonInterfaceData(checkFirstLoad){\r\n      if(checkFirstLoad&&this.pageCommonInterfaceLoaded){\r\n        return;\r\n      }\r\n      this.pageCommonInterfaceLoaded = true;\r\n      //调用桥接器页面加载(包括实时渲染)完成事件\r\n      this.IDM.broadcast.pageLoadCompleteAfter(this.routerId);\r\n\r\n      if(this.isloadPageCommonInterface){\r\n        return;\r\n      }\r\n      this.isloadPageCommonInterface = true;\r\n      console.log(\"页面首屏组件已全部加载完毕！！！\")\r\n      this.afterLoadingFunction();\r\n      var interfaceList = (this.PageSettingData.page.layout.props.compositeAttr?this.PageSettingData.page.layout.props.compositeAttr.interfaceList:[])||[];\r\n      if(interfaceList.length==0){\r\n        return;\r\n      }\r\n      interfaceList = interfaceList.filter(item=>!item.loadTimingType||item.loadTimingType=='pageloadlater');\r\n      if(interfaceList.length==0){\r\n        return;\r\n      }\r\n      this.orderlyRequestInterface(interfaceList,0,this.InterfaceParam());\r\n    },\r\n    /**\r\n    接口请求的所有参数 */\r\n    InterfaceParam(){\r\n      //先获取页面ID，然后再获取所有的组件ID\r\n      var pageId = this.pageid;\r\n      var moduleIdArray = [],componentIdArray=[];\r\n      this.PageSettingData.page.componentsMap.forEach((item) => {\r\n        if(item.packageid!=pageId){\r\n          moduleIdArray.push(item.packageid);\r\n          componentIdArray.push(item.comId);\r\n        }\r\n      });\r\n      //所有地址的url参数转换\r\n      var params = {\r\n        idmPageId:pageId,\r\n        moduleIds:moduleIdArray.join(\",\"),\r\n        componentIds:componentIdArray.join(\",\")\r\n      };\r\n      let urlObject = IDM.url.queryObject();\r\n      Object.keys(urlObject).forEach((key)=>{\r\n        params[key]=urlObject[key];\r\n      })\r\n      return params;\r\n    },\r\n    /**\r\n     * 有序的加载接口并且回调各个组件\r\n     */\r\n    orderlyRequestInterface(interfaceList,index,params,callback){\r\n      if(interfaceList.length<=index){\r\n        callback&&callback()\r\n        return;\r\n      }\r\n      var item = interfaceList[index];\r\n      index = index+1;\r\n      let that = this;\r\n      // preAllowFunction\r\n      if(item.preAllowFunction&&item.preAllowFunction.length>0){\r\n        try {\r\n          let itemParam = {...that.commonParam(),...item.preAllowFunction[0].param};\r\n          let _isPass = window[item.preAllowFunction[0].name]&&window[item.preAllowFunction[0].name].call(this,itemParam);\r\n          if(_isPass===false){\r\n            that.orderlyRequestInterface(interfaceList,index,params,callback);\r\n            return;\r\n          }\r\n        } catch (error) {\r\n        }\r\n      }\r\n      if(item.interfaceType==\"datasource\"&&item.dataSourceSelectData&&item.dataSourceSelectData.length){\r\n        //请求数据源的方式\r\n        if(item.formDataFunction&&item.formDataFunction.length>0){\r\n            try {\r\n              let itemParam = {...that.commonParam(),...item.formDataFunction[0].param};\r\n              let formDataParam = window[item.formDataFunction[0].name]&&window[item.formDataFunction[0].name].call(this,itemParam);\r\n              params = {...params,...formDataParam}\r\n            } catch (error) {\r\n            }\r\n          }\r\n          IDM.datasource.request(item.dataSourceSelectData[0].id,{\r\n            moduleObject:{},\r\n            param:params\r\n          },function(resData){\r\n            //这里是请求成功的返回结果\r\n            that.callbackModuleSetContext(item,resData);\r\n            that.orderlyRequestInterface(interfaceList,index,params,callback);\r\n          },function(error){\r\n            //这里是请求失败的返回结果\r\n            that.orderlyRequestInterface(interfaceList,index,params,callback);\r\n          })\r\n      }else if(item.interfaceMode==\"post\"&&item.interfaceUrl){\r\n          if(item.formDataFunction&&item.formDataFunction.length>0){\r\n            try {\r\n              let itemParam = {...that.commonParam(),...item.formDataFunction[0].param};\r\n              let formDataParam = window[item.formDataFunction[0].name]&&window[item.formDataFunction[0].name].call(this,itemParam);\r\n              params = {...params,...formDataParam}\r\n            } catch (error) {\r\n            }\r\n          }\r\n          this.$previewApi\r\n          .postPageInterfaceInfo(item.interfaceUrl,params,{\r\n            headers:item.interfaceContentType?{\r\n              \"Content-Type\": item.interfaceContentType||\"application/json;charset=UTF-8\"\r\n            }:{}\r\n          })\r\n          .then((res) => {\r\n            //res.data\r\n            //循环调用组件接收数据的方法\r\n            that.callbackModuleSetContext(item,res.data||res);\r\n            that.orderlyRequestInterface(interfaceList,index,params,callback);\r\n          })\r\n          .catch(function (error) {\r\n            that.orderlyRequestInterface(interfaceList,index,params,callback);\r\n          });\r\n        }else if(item.interfaceMode==\"get\"&&item.interfaceUrl){\r\n          this.$previewApi\r\n          .getPageInterfaceInfo(item.interfaceUrl,params)\r\n          .then((res) => {\r\n            //res.data\r\n            //循环调用组件接收数据的方法\r\n            that.callbackModuleSetContext(item,res.data||res);\r\n            that.orderlyRequestInterface(interfaceList,index,params,callback);\r\n          })\r\n          .catch(function (error) {\r\n            that.orderlyRequestInterface(interfaceList,index,params,callback);\r\n          });\r\n        }else{\r\n          that.orderlyRequestInterface(interfaceList,index,params,callback);\r\n        }\r\n    },\r\n    /**\r\n     * 回调组件的设置值的方法\r\n     */\r\n    callbackModuleSetContext(item,resData){\r\n      //设置页面统一接口结果到data中,等接口全部请求完后再发送消息给每个组件\r\n      this.pageInterfaceResultObject[item.resultDataName]=resData;\r\n      this.sendBroadcastMessage({\r\n          type:\"pageCommonInterface\",\r\n          message:resData,\r\n          messageKey:item.resultDataName,\r\n          rangeModule:\"\"\r\n        })\r\n      if(item.loadTimingType!='pageloadbefore'){\r\n        //加载之后执行\r\n        this.PageSettingData.page.componentsMap.forEach((sitem) => {\r\n                    sitem.idmSetContextValue&&sitem.idmSetContextValue({\r\n                                type:\"pageCommonInterface\",\r\n                                key:item.resultDataName,\r\n                                data:resData\r\n                            })\r\n              });\r\n      }\r\n      //自定义处理返回结果函数\r\n      if(item.interfaceRunLaterFunction&&item.interfaceRunLaterFunction.length>0){\r\n        var interfaceRunLaterFunction = item.interfaceRunLaterFunction;\r\n        interfaceRunLaterFunction.forEach(sitem=>{\r\n          try {\r\n            window[sitem.name]&&window[sitem.name].call(this,{\r\n              ...this.commonParam(),\r\n              customParam:sitem.param,\r\n              resultData:resData,\r\n              _this:this\r\n            });\r\n          } catch (error) {\r\n          }\r\n        })\r\n      }\r\n      let propData = this.PageSettingData.page.layout.props.compositeAttr||{};\r\n      //应用主题：页面结果集\r\n      if(this.mainPage&&propData.openIdmTheme&&propData.themeFetchType==\"pageInterfaceResult\"&&propData.themeDataName&&item.resultDataName==propData.themeDataName){\r\n        this.themeInterfaceHandle(resData,propData.themeDataName)\r\n      }\r\n    },\r\n    /**\r\n     * 渲染页面的样式\r\n     */\r\n    pageAttrPropHandle(propDataObject) {\r\n      let propData = propDataObject.compositeAttr;\r\n      this.pagePropData = propData;\r\n      var styleObject = {};\r\n      if (propData.bgSize && propData.bgSize == \"custom\") {\r\n        styleObject[\"background-size\"] =\r\n          (propData.bgSizeWidth\r\n            ? propData.bgSizeWidth.inputVal + propData.bgSizeWidth.selectVal\r\n            : \"auto\") +\r\n          \" \" +\r\n          (propData.bgSizeHeight\r\n            ? propData.bgSizeHeight.inputVal + propData.bgSizeHeight.selectVal\r\n            : \"auto\");\r\n      } else if (propData.bgSize) {\r\n        styleObject[\"background-size\"] = propData.bgSize;\r\n      }\r\n      if (propData.positionX && propData.positionX.inputVal) {\r\n        styleObject[\"background-position-x\"] =\r\n          propData.positionX.inputVal + propData.positionX.selectVal;\r\n      }\r\n      if (propData.positionY && propData.positionY.inputVal) {\r\n        styleObject[\"background-position-y\"] =\r\n          propData.positionY.inputVal + propData.positionY.selectVal;\r\n      }\r\n      for (const key in propData) {\r\n        if (propData.hasOwnProperty.call(propData, key)) {\r\n          const element = propData[key];\r\n          if (!element && element !== false) {\r\n            continue;\r\n          }\r\n          switch (key) {\r\n            case \"defaultIdmTheme\":\r\n              if(!this.themeSetObject&&this.mainPage){\r\n                IDM.theme.setCurrentThemeInfo(element);\r\n                this.themeSetObject = element;\r\n              }\r\n              break;\r\n            case \"width\":\r\n            case \"height\":\r\n              styleObject[key] = element;\r\n              break;\r\n            case \"bgColor\":\r\n              if (element.hex8) {\r\n                styleObject[\"background-color\"] = IDM.hex8ToRgbaString(element.hex8);\r\n              }\r\n              break;\r\n            case \"box\":\r\n              if (element.marginTopVal) {\r\n                styleObject[\"margin-top\"] = `${element.marginTopVal}`;\r\n              }\r\n              if (element.marginRightVal) {\r\n                styleObject[\"margin-right\"] = `${element.marginRightVal}`;\r\n              }\r\n              if (element.marginBottomVal) {\r\n                styleObject[\"margin-bottom\"] = `${element.marginBottomVal}`;\r\n              }\r\n              if (element.marginLeftVal) {\r\n                styleObject[\"margin-left\"] = `${element.marginLeftVal}`;\r\n              }\r\n              if (element.paddingTopVal) {\r\n                styleObject[\"padding-top\"] = `${element.paddingTopVal}`;\r\n              }\r\n              if (element.paddingRightVal) {\r\n                styleObject[\"padding-right\"] = `${element.paddingRightVal}`;\r\n              }\r\n              if (element.paddingBottomVal) {\r\n                styleObject[\"padding-bottom\"] = `${element.paddingBottomVal}`;\r\n              }\r\n              if (element.paddingLeftVal) {\r\n                styleObject[\"padding-left\"] = `${element.paddingLeftVal}`;\r\n              }\r\n              break;\r\n            case \"bgImgUrl\":\r\n              styleObject[\"background-image\"] = `url(${IDM.url.getWebPath(\r\n                element\r\n              )})`;\r\n              break;\r\n            case \"icoImgUrl\":\r\n              try {\r\n                document.head.querySelector(\"link[rel='icon']\").setAttribute(\"href\",IDM.url.getWebPath(element))\r\n              } catch (error) {\r\n              }\r\n              //IDM.url.getWebPath(element)\r\n              var link = document.createElement('link');\r\n              link.type = 'image/x-icon';\r\n              link.rel = 'shortcut icon';\r\n              link.href = IDM.url.getWebPath(element);\r\n              document.getElementsByTagName('head')[0].appendChild(link);\r\n              break;\r\n            case \"positionX\":\r\n              //背景横向偏移\r\n\r\n              break;\r\n            case \"positionY\":\r\n              //背景纵向偏移\r\n\r\n              break;\r\n            case \"bgRepeat\":\r\n              //平铺模式\r\n              styleObject[\"background-repeat\"] = element;\r\n              break;\r\n            case \"bgAttachment\":\r\n              //背景模式\r\n              styleObject[\"background-attachment\"] = element;\r\n              break;\r\n            case \"border\":\r\n              if (element.border.top.width > 0) {\r\n                styleObject[\"border-top-width\"] =\r\n                  element.border.top.width + element.border.top.widthUnit;\r\n                styleObject[\"border-top-style\"] = element.border.top.style;\r\n                if (element.border.top.colors.hex8) {\r\n                  styleObject[\"border-top-color\"] =\r\n                    IDM.hex8ToRgbaString(element.border.top.colors.hex8);\r\n                }\r\n              }\r\n              if (element.border.right.width > 0) {\r\n                styleObject[\"border-right-width\"] =\r\n                  element.border.right.width + element.border.right.widthUnit;\r\n                styleObject[\"border-right-style\"] = element.border.right.style;\r\n                if (element.border.right.colors.hex8) {\r\n                  styleObject[\"border-right-color\"] =\r\n                    IDM.hex8ToRgbaString(element.border.right.colors.hex8);\r\n                }\r\n              }\r\n              if (element.border.bottom.width > 0) {\r\n                styleObject[\"border-bottom-width\"] =\r\n                  element.border.bottom.width + element.border.bottom.widthUnit;\r\n                styleObject[\"border-bottom-style\"] =\r\n                  element.border.bottom.style;\r\n                if (element.border.bottom.colors.hex8) {\r\n                  styleObject[\"border-bottom-color\"] =\r\n                    IDM.hex8ToRgbaString(element.border.bottom.colors.hex8);\r\n                }\r\n              }\r\n              if (element.border.left.width > 0) {\r\n                styleObject[\"border-left-width\"] =\r\n                  element.border.left.width + element.border.left.widthUnit;\r\n                styleObject[\"border-left-style\"] = element.border.left.style;\r\n                if (element.border.left.colors.hex8) {\r\n                  styleObject[\"border-left-color\"] =\r\n                    IDM.hex8ToRgbaString(element.border.left.colors.hex8);\r\n                }\r\n              }\r\n\r\n              styleObject[\"border-top-left-radius\"] =\r\n                element.radius.leftTop.radius +\r\n                element.radius.leftTop.radiusUnit;\r\n              styleObject[\"border-top-right-radius\"] =\r\n                element.radius.rightTop.radius +\r\n                element.radius.rightTop.radiusUnit;\r\n              styleObject[\"border-bottom-left-radius\"] =\r\n                element.radius.leftBottom.radius +\r\n                element.radius.leftBottom.radiusUnit;\r\n              styleObject[\"border-bottom-right-radius\"] =\r\n                element.radius.rightBottom.radius +\r\n                element.radius.rightBottom.radiusUnit;\r\n              break;\r\n            case \"font\":\r\n              styleObject[\"font-family\"] = element.fontFamily;\r\n              if (element.fontColors.hex8) {\r\n                styleObject[\"color\"] = IDM.hex8ToRgbaString(element.fontColors.hex8);\r\n              }\r\n              styleObject[\"font-weight\"] =\r\n                element.fontWeight && element.fontWeight.split(\" \")[0];\r\n              styleObject[\"font-style\"] = element.fontStyle;\r\n              styleObject[\"font-size\"] =\r\n                element.fontSize + element.fontSizeUnit;\r\n              styleObject[\"line-height\"] =\r\n                element.fontLineHeight +\r\n                (element.fontLineHeightUnit == \"-\"\r\n                  ? \"\"\r\n                  : element.fontLineHeightUnit);\r\n              styleObject[\"text-align\"] = element.fontTextAlign;\r\n              styleObject[\"text-decoration\"] = element.fontDecoration;\r\n              break;\r\n            case \"layout\":\r\n              if (element.display && element.display == \"flex\") {\r\n                styleObject[\"display\"] = \"flex\";\r\n                if (element.direction) {\r\n                  styleObject[\"flex-direction\"] = element.direction;\r\n                }\r\n                if (element.direction) {\r\n                  styleObject[\"align-items\"] = element.align;\r\n                }\r\n                if (element.direction) {\r\n                  styleObject[\"justify-content\"] = element.justify;\r\n                }\r\n              } else if (element.display) {\r\n                styleObject[\"display\"] = element.display;\r\n                styleObject[\"width\"] = \"100%\";\r\n              }\r\n              break;\r\n            case \"pageMinWidth\":\r\n              if(element.inputVal&&element.selectVal){\r\n                styleObject[\"min-width\"] = element.inputVal+element.selectVal;\r\n              }\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      this.$nextTick(function (params) {\r\n        if (propData.watermarkType && propData.watermarkType != \"none\") {\r\n          var _watermarkFont = this.$replace(propData.watermarkFont, {\r\n              IDM: IDM,\r\n            }),\r\n            _watermarkFont1 = this.$replace(propData.watermarkFont1, {\r\n              IDM: IDM,\r\n            });\r\n          //文字水印\r\n          IDM.watermark.set(\r\n            this.$refs.idm_page_root,\r\n            propData.watermarkZindex,\r\n            propData.watermarkType != \"font\"\r\n              ? propData.watermarkImg\r\n              : _watermarkFont,\r\n            propData.watermarkType == \"image\" ? \"\" : _watermarkFont1,\r\n            {\r\n              fontColor:\r\n                propData.watermarkColor && IDM.hex8ToRgbaString(propData.watermarkColor.hex8),\r\n              fontSize: `${propData.watermarkFontSize}px`,\r\n              width: propData.watermarkSize,\r\n              height: propData.watermarkSize,\r\n              rotate: propData.watermarkRotate,\r\n              imgSize: propData.watermarkImgSize,\r\n              imgLeftSize: propData.watermarkImgLeftSize,\r\n              fontLeftSize: propData.watermarkFontLeftSize,\r\n              opacity: propData.watermarkOpacity / 100,\r\n              topSize: propData.watermarkTopSize,\r\n            }\r\n          );\r\n        } else {\r\n          IDM.watermark.close(this.$refs.idm_page_root);\r\n        }\r\n      });\r\n      IDM.setStyleToPageHead(\"PAGE_\" + this.PageSettingData.id+\"_\"+this.routerId, styleObject);\r\n      //加载外部js和css\r\n      if(propData.resourceList&&propData.resourceList.length>0){\r\n        propData.resourceList.forEach(item=>{\r\n          if(item.resourceType==\"js\"){\r\n            IDM.module.loadJs(IDM.url.getWebPath(item.resourceUrl),true,function(){\r\n\r\n            },{async:item.async,defer:item.defer})\r\n          }else{\r\n            IDM.module.loadCss(IDM.url.getWebPath(item.resourceUrl),true,function(){\r\n\r\n            })\r\n          }\r\n        })\r\n      }\r\n      this.convertThemeListAttrToStyleObject(propData);\r\n    },\r\n    \r\n    /**\r\n     * 主题颜色\r\n     */\r\n    convertThemeListAttrToStyleObject(propData) {\r\n      var themeList = propData.themeList;\r\n      if (!themeList) {\r\n        return;\r\n      }\r\n      const themeNamePrefix =\r\n        IDM.setting && IDM.setting.applications && IDM.setting.applications.themeNamePrefix\r\n          ? IDM.setting.applications.themeNamePrefix\r\n          : 'idm-theme-';\r\n      for (var i = 0; i < themeList.length; i++) {\r\n        var item = themeList[i];\r\n        //item.key：为主题样式的key\r\n        //item.mainColor：主要颜色值\r\n        //item.minorColor：次要颜色值\r\n        if(item.key!=IDM.theme.getCurrentThemeInfo()){\r\n            //此处比对是不渲染输出不用的样式，如果页面会刷新就可以把此处放开\r\n            continue;\r\n        }\r\n        let cssObject_color_main = {\r\n          color: item.mainColor ? item.mainColor.hex8+' !important' : ''\r\n        };\r\n        let cssObject_border_main = {\r\n          'border-color': item.mainColor ? item.mainColor.hex8 : ''\r\n        };\r\n        let cssObject_background_main = {\r\n          'background-color': item.mainColor ? item.mainColor.hex8 : ''\r\n        };\r\n        let cssObject_color_minor = {\r\n          color: item.minorColor ? item.minorColor.hex8 : ''\r\n        };\r\n        let cssObject_border_minor = {\r\n          'border-color': item.minorColor ? item.minorColor.hex8 : ''\r\n        };\r\n        let cssObject_background_minor = {\r\n          'background-color': item.minorColor ? item.minorColor.hex8 : ''\r\n        };\r\n        IDM.setStyleToPageHead(\r\n          `.${themeNamePrefix + item.key} .idm_module_user_defined`,\r\n          {\r\n            ...cssObject_border_main\r\n          }\r\n        );\r\n        IDM.setStyleToPageHead(\r\n          `.${themeNamePrefix + item.key} .idm_module_user_defined>div`,\r\n          {\r\n            ...cssObject_background_main\r\n          }\r\n        );\r\n        IDM.setStyleToPageHead(\r\n          `.${themeNamePrefix + item.key} .user-defined-logo-svg,\r\n          .${themeNamePrefix + item.key} .idm_page_user_defined_leftbar svg.user-defined-add-svg,\r\n          .${themeNamePrefix + item.key} .idm_page_user_defined_modal_moduleitem .user-defined-modal-changeseats,\r\n          .${themeNamePrefix + item.key} .idm_page_user_defined_modal_moduleitem .user-defined-modal-replace`,\r\n          {\r\n            ...cssObject_color_main\r\n          }\r\n        );\r\n        IDM.setStyleToPageHead(\r\n          `.${themeNamePrefix + item.key} .idm-ant-btn:active,\r\n          .${themeNamePrefix + item.key} .idm-ant-btn.active,\r\n          .${themeNamePrefix + item.key} .idm-ant-btn-dashed:active,\r\n          .${themeNamePrefix + item.key} .idm-ant-btn-dashed.active`,\r\n          {\r\n            ...cssObject_color_main,\r\n            ...cssObject_border_main\r\n          }\r\n        );\r\n        IDM.setStyleToPageHead(\r\n          `.${themeNamePrefix + item.key} .idm-ant-btn-primary,\r\n          .${themeNamePrefix + item.key} .idm-ant-btn-primary:hover,\r\n          .${themeNamePrefix + item.key} .idm-ant-btn-primary:focus`,\r\n          {\r\n            ...cssObject_background_main,\r\n            ...cssObject_border_main\r\n          }\r\n        );\r\n        IDM.setStyleToPageHead(\r\n          `.${themeNamePrefix + item.key} .idm-ant-btn:hover,\r\n          .${themeNamePrefix + item.key} .idm-ant-btn:focus,\r\n          .${themeNamePrefix + item.key} .idm-ant-btn-dashed:hover,\r\n          .${themeNamePrefix + item.key} .idm-ant-btn-dashed:focus`,\r\n          {\r\n            ...cssObject_color_minor,\r\n            ...cssObject_border_minor\r\n          }\r\n        );\r\n        IDM.setStyleToPageHead(\r\n          `.${themeNamePrefix + item.key} .idm-ant-btn-primary:hover,\r\n          .${themeNamePrefix + item.key} .idm-ant-btn-primary:focus`,\r\n          {\r\n            color:\"#FFFFFF\",\r\n            ...cssObject_background_minor,\r\n            ...cssObject_border_minor\r\n          }\r\n        );\r\n      }\r\n    },\r\n    /**\r\n     * 渲染加载指定ID的窗口\r\n     * 首先取出对应的数据，判断是否\r\n     */\r\n    renderDialog(moduleId){\r\n      const opModule = this.getModuleTree(\r\n        this.PageSettingData.page.layout.children,\r\n        moduleId\r\n      );\r\n      if(!opModule){\r\n        return false;\r\n      }\r\n      if(opModule.renderType==\"firstrender\"||opModule.renderType==\"activerender\"){\r\n        opModule.renderLicence = true;\r\n        if(opModule.renderType==\"firstrender\"&&opModule.loaded){\r\n          return _.cloneDeep(opModule);\r\n        }else{\r\n          //实时渲染加载之前要把页面组件加载状态设置为false，否则实时渲染的组件消息通信无法准确接收到消息，需要等全部加载完再接收消息\r\n          this.IDM.broadcast.pageModuleLoadCompleteBefore(this.routerId);\r\n          //修改成全部未加载\r\n          this.resetLayoutInnerModuleLoadedStatus(opModule);\r\n          this.initModuleTreeToPage(opModule)\r\n        }\r\n      }\r\n      return _.cloneDeep(opModule);\r\n    },\r\n    setShowDialog(dialogObject){\r\n      this.dialogObjectList.push(dialogObject);\r\n      $(\"#router_page_\"+this.routerId+\" #\"+dialogObject.packageid).css(\"display\",\"flex\");\r\n      this.dialogVisibleStatus = true;\r\n      this.dialogIsHideing = false;\r\n    },\r\n    /**\r\n     * 关闭当前打开的窗口\r\n     */\r\n    closeThisOpenDialog(ctx){\r\n      var customParam = ctx.customParam?ctx.customParam:ctx;\r\n      var moduleIdArray = [];\r\n      customParam.targetModule.forEach(item=>{\r\n        moduleIdArray.push(item.moduleId);\r\n        this.dialogObjectList.forEach((ditem,dindex)=>{\r\n          if(ditem.packageid==item.moduleId){\r\n            ditem.dialogIsHideing = true;\r\n            $(\"#router_page_\"+this.routerId+\" .idm_dialog_shade_layer_\"+item.moduleId).attr(\"hideing\",\"hideing\");\r\n            if(ditem.layerOption){\r\n              ditem.layerOption.cancel&&ditem.layerOption.cancel(ditem);\r\n            }\r\n            //如果是确认按钮调用的关闭则去调用yes方法\r\n            if(ctx.isOkEvent){\r\n              ditem.layerOption&&ditem.layerOption.yes&&ditem.layerOption.yes(ditem);\r\n            }\r\n          }\r\n        })\r\n      });\r\n      if(this.dialogObjectList.length<=moduleIdArray.length){\r\n        this.dialogIsHideing = true;\r\n      }\r\n      let that = this;\r\n      that.sendBroadcastMessage({\r\n          type:\"linkageCloseDialog\",\r\n          message:ctx,\r\n          rangeModule:moduleIdArray\r\n        })\r\n      setTimeout(() => {\r\n        customParam.targetModule.forEach(item=>{\r\n          $(\"#router_page_\"+this.routerId+\" #\"+item.moduleId).css(\"display\",\"none\");\r\n          that.destroyDialog(item.moduleId);\r\n          //从dialogObjectList中删除\r\n          if(that.dialogObjectList.length==1){\r\n            that.dialogObjectList = [];\r\n            return;\r\n          }\r\n          let existsIndex = -1;\r\n          that.dialogObjectList.forEach((ditem,dindex)=>{\r\n            if(ditem.packageid==item.moduleId){\r\n              existsIndex = dindex;\r\n              if(ditem.layerOption){\r\n                ditem.layerOption.end&&ditem.layerOption.end(ditem);\r\n              }\r\n            }\r\n          })\r\n          if (existsIndex > -1) {\r\n            //存在就清除\r\n            that.dialogObjectList.splice(existsIndex, 1);\r\n          }\r\n        });\r\n        if(that.dialogObjectList.length==0){\r\n          that.dialogVisibleStatus = false;\r\n          that.dialogIsHideing = false;\r\n        }\r\n      }, 500);\r\n      if(ctx.callback){\r\n        ctx.callback();\r\n      }\r\n    },\r\n    /**\r\n     * 销毁指定ID的窗口\r\n     */\r\n    destroyDialog(moduleId){\r\n      const opModule = this.getModuleTree(\r\n        this.PageSettingData.page.layout.children,\r\n        moduleId\r\n      );\r\n      if(opModule&&opModule.renderType==\"activerender\"){\r\n        $(\"#router_page_\"+this.routerId+\" #\"+moduleId).remove();\r\n      }\r\n    },\r\n    /**\r\n     * 显示未加载的隐藏的组件\r\n     * @param {*} moduleIdList \r\n     */\r\n    showHideNoLoadModule(moduleIdList){\r\n      this.resetLayoutInnerModuleLoadedStatus(this.PageSettingData.page.layout.children,moduleIdList);\r\n      this.initModuleTreeToPage();\r\n    },\r\n    /**\r\n     * 加载组件树到页面中，递归逐级加载\r\n     * moduleData：要渲染的组件数据树结构\r\n     * ischildren：是否为子组件数据\r\n     * fModule：子组件所在的父级容器组件\r\n     * addNextForModulePackageid：要追加到哪个组件的下面（非子级）的packageid\r\n     */\r\n    initModuleTreeToPage(\r\n      moduleData,\r\n      ischildren,\r\n      fModule,\r\n      addNextForModulePackageid\r\n    ) {\r\n      let that = this;\r\n      moduleData = moduleData || that.PageSettingData.page.layout.children;\r\n      if (!(moduleData instanceof Array)) {\r\n        moduleData = [moduleData];\r\n      }\r\n      //循环取出当前一级未加载的组件\r\n      var loadModule,beforeModule,laterModule;\r\n      moduleData.forEach((item,index) => {\r\n        if(item.comType==\"dialog\"&&item.renderLicence!==true){\r\n          //查找props\r\n          /*for (let index = 0; index < that.PageSettingData.page.componentsMap.length; index++) {\r\n            const pitem = that.PageSettingData.page.componentsMap[index];\r\n            if (pitem.packageid == item.packageid) {\r\n              item.props = pitem.props;\r\n            }\r\n          }*/\r\n          let dialogRenderType = item.props.compositeAttr.dialogRenderType;\r\n          //beforehand：不用判断直接放行可以进行渲染  firstrender：按需首次渲染  activerender：激活时渲染\r\n          item.renderType = dialogRenderType;\r\n          //renderLicence：渲染许可，true表示可以进行渲染，false表示暂时不渲染跳过\r\n          item.renderLicence = !(dialogRenderType==\"firstrender\"||dialogRenderType==\"activerender\");\r\n          if(!item.renderLicence){\r\n            return;\r\n          }\r\n        }\r\n        if (!item.hasLoading && !loadModule) {\r\n          item.hasLoading = true;\r\n          item.loading = true;\r\n          \r\n          //查找props覆盖树结构中的\r\n          /*\r\n          for (let index = 0; index < that.PageSettingData.page.componentsMap.length; index++) {\r\n            const sitem = that.PageSettingData.page.componentsMap[index];\r\n            if (sitem.packageid == item.packageid) {\r\n              item.props = sitem.props;\r\n            }\r\n          }*/\r\n          loadModule = item;\r\n          //此处要判断一下openAuthorize&&privilege&&role&&dept&&user\r\n          let attrConfig = IDM.setting.applications.basicAttributeAuthorizeConfig;\r\n          let openAuthorize = attrConfig.openAuthorize;\r\n          if(item.props&&item.props.basicAttr&&item.props.basicAttr.showType==\"show\"||(item.againLoad===true&&item.props&&item.props.basicAttr&&item.props.basicAttr.showType!=\"role\")){\r\n            console.log(\"🚀 ~ file: Page.vue ~ line 1888 ~ moduleData.forEach ~ item.againLoad\", item.againLoad)\r\n            //这里就是直接显示，不做处理\r\n            \r\n          }else if(item.props&&item.props.basicAttr&&item.props.basicAttr.showType==\"hide\"){\r\n            if(item.props.basicAttr.hideType==\"load\"){\r\n            //加载不显示\r\n              loadModule.loadAndHide = true;\r\n            }else{\r\n              loadModule = null;\r\n            }\r\n            item.loaded = true;\r\n          }else if(openAuthorize===true){\r\n            let privilege = attrConfig.privilege||{},privilegePass=-1,\r\n            role = attrConfig.role||{},rolePass = -1,\r\n            dept = attrConfig.dept||{},deptPass = -1,\r\n            user = attrConfig.user||{},userPass = -1;\r\n            //比对权限\r\n            if(privilege.open===true&&privilege.comparisonObject&&item.props&&item.props.basicAttr&&item.props.basicAttr.privilegeList&&item.props.basicAttr.privilegeList.length){\r\n              let privilegeComparisonObject = IDM.express.replace(\"@[\"+privilege.comparisonObject+\"]\",{IDM:IDM,window,...this.pageInterfaceResultObject});\r\n              if(privilege.separator&&IDM.type(privilegeComparisonObject)!='array'){\r\n                privilegeComparisonObject = privilegeComparisonObject.split(privilege.separator);\r\n              }\r\n              //选择了还没比对要设置为false不通过，下面有交集了再设置为true通过\r\n              privilegePass = false;\r\n              //直接用选择的权限去判断\r\n              item.props.basicAttr.privilegeList.forEach(iitem=>{\r\n                let comparisonKey = IDM.express.replace(\"@[\"+(privilege.comparisonKey||'key')+\"]\",iitem);\r\n                if(privilegeComparisonObject===undefined||privilegeComparisonObject.indexOf(comparisonKey)>-1){\r\n                  privilegePass = true;\r\n                }\r\n              })\r\n            }\r\n            //比对角色\r\n            if(role.open===true&&role.comparisonObject&&item.props&&item.props.basicAttr&&item.props.basicAttr.roleList&&item.props.basicAttr.roleList.length){\r\n              let roleComparisonObject = IDM.express.replace(\"@[\"+role.comparisonObject+\"]\",{IDM:IDM,window,...this.pageInterfaceResultObject});\r\n              if(role.separator&&IDM.type(roleComparisonObject)!='array'){\r\n                roleComparisonObject = roleComparisonObject.split(role.separator);\r\n              }\r\n              //选择了还没比对要设置为false不通过，下面有交集了再设置为true通过\r\n              rolePass = false;\r\n              //直接用选择的权限去判断\r\n              item.props.basicAttr.roleList.forEach(iitem=>{\r\n                let comparisonKey = IDM.express.replace(\"@[\"+(role.comparisonKey||'key')+\"]\",iitem);\r\n                if(roleComparisonObject===undefined||roleComparisonObject.indexOf(comparisonKey)>-1){\r\n                  rolePass = true;\r\n                }\r\n              })\r\n            }\r\n            //比对部门\r\n            if(dept.open===true&&dept.comparisonObject&&item.props&&item.props.basicAttr&&item.props.basicAttr.deptList&&item.props.basicAttr.deptList.length){\r\n              let deptComparisonObject = IDM.express.replace(\"@[\"+dept.comparisonObject+\"]\",{IDM:IDM,window,...this.pageInterfaceResultObject});\r\n              if(dept.separator&&IDM.type(deptComparisonObject)!='array'){\r\n                deptComparisonObject = deptComparisonObject.split(dept.separator);\r\n              }\r\n              //选择了还没比对要设置为false不通过，下面有交集了再设置为true通过\r\n              deptPass = false;\r\n              //直接用选择的权限去判断\r\n              item.props.basicAttr.deptList.forEach(iitem=>{\r\n                let comparisonKey = IDM.express.replace(\"@[\"+(dept.comparisonKey||'key')+\"]\",iitem);\r\n                if(deptComparisonObject===undefined||deptComparisonObject.indexOf(comparisonKey)>-1){\r\n                  deptPass = true;\r\n                }\r\n              })\r\n            }\r\n            //比对用户\r\n            if(user.open===true&&user.comparisonObject&&item.props&&item.props.basicAttr&&item.props.basicAttr.userList&&item.props.basicAttr.userList.length){\r\n              let userComparisonObject = IDM.express.replace(\"@[\"+user.comparisonObject+\"]\",{IDM:IDM,window,...this.pageInterfaceResultObject});\r\n              //选择了还没比对要设置为false不通过，下面有交集了再设置为true通过\r\n              userPass = false;\r\n              //直接用选择的权限去判断\r\n              let userArray = item.props.basicAttr.userList.map(item=>{\r\n                let comparisonKey = IDM.express.replace(\"@[\"+(user.comparisonKey||'key')+\"]\",item);\r\n                return comparisonKey\r\n              });\r\n              if(userArray.indexOf(userComparisonObject)>-1){\r\n                userPass = true;\r\n              }\r\n            }\r\n            //如果不为空则需要判断是否通过\r\n            if(!((privilegePass===-1&&rolePass===-1&&deptPass===-1&&userPass===-1)||(privilegePass!==-1&&privilegePass)||(rolePass!==-1&&rolePass)||(deptPass!==-1&&deptPass)||(userPass!==-1&&userPass))){\r\n              loadModule = null;\r\n              item.loaded = true;\r\n            }\r\n          }\r\n          if(loadModule){\r\n            //如果不为空，则取出下一个非弹窗组件\r\n            for(let i=0;i<moduleData.length;i++){\r\n              if(moduleData[i].comType!=\"dialog\"&&index>i){\r\n                beforeModule = moduleData[i];\r\n              }else if(index<i&&moduleData[i].comType!=\"dialog\"&&!laterModule){\r\n                laterModule = moduleData[i];\r\n              }\r\n              if(beforeModule&&laterModule){\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n      if (!loadModule) {\r\n        //一级没有待加载的，再去加载子级\r\n        moduleData.forEach((item) => {\r\n          if(item.comType==\"dialog\"&&!item.renderLicence){\r\n            //渲染许可为false跳过不渲染下面的子级\r\n            return;\r\n          }\r\n          if (item.loaded&&item.children && item.children.length > 0) {\r\n            that.initModuleTreeToPage(item.children, true, item);\r\n          }\r\n        });\r\n        //判断是否加载完成，如果加载完成需要去调用统一接口并设置页面加载已完成，否则组件通信用不了\r\n        if(loadModule==null&&this.pageModuleDataIsLoaded(null, true,\"loaded\")){\r\n          this.requestPageCommonInterfaceData(true);\r\n        }\r\n      } else {\r\n        //追加容器\r\n        let comObject = loadModule;\r\n        comObject.mountComplete = this.moduleMountComplete;\r\n        comObject.moduleReload = this.moduleReload;\r\n        //追加div\r\n        let newComDiv = that.createModuleDom(comObject);\r\n        let containerId = \"\";\r\n        if(comObject.comType==\"dialog\"){\r\n          containerId = that.PageSettingData.id;\r\n          $(\"#idm_dialog_wrap_\"+that.routerId).append(newComDiv);\r\n        }else if(comObject.positionMode==\"absolute\"&&(!ischildren||(ischildren&&fModule&&fModule.comId==\"0\"))){\r\n          containerId = that.PageSettingData.id;\r\n          $(\"#idm_hover_layer_wrap\").append(newComDiv);\r\n        }else if (addNextForModulePackageid) {\r\n          //添加到下方\r\n          containerId = addNextForModulePackageid;\r\n          $(\"#router_page_\"+that.routerId+\" #\" + containerId).after(newComDiv);\r\n        } else if (ischildren && fModule) {\r\n          containerId = fModule.packageid;\r\n          if (containerId == that.PageSettingData.id) {\r\n            $(\"#PAGE_\" + containerId+\"_\"+that.routerId).append(newComDiv);\r\n          } else {\r\n            var containerDom = $(\"#router_page_\"+that.routerId+\" #\" + containerId);\r\n            containerDom.removeClass(\"drag_container_empty\");\r\n            var containerInnerDom = containerDom.find(\">*[idm-ctrl]\");\r\n            containerInnerDom.show();\r\n            if (comObject.containerIndex || comObject.containerIndex == \"0\") {\r\n              //添加内部容器，同时要删除drag_container_empty\r\n              var innercontainer = containerInnerDom.find(\r\n                \".drag_container[idm-ctrl-id='\" +\r\n                  fModule.id +\r\n                  \"'][idm-container-index=\" +\r\n                  comObject.containerIndex +\r\n                  \"]\"\r\n              );\r\n              innercontainer&&innercontainer.append(newComDiv);\r\n              innercontainer&&innercontainer.removeClass(\"drag_container_empty\");\r\n              //找不到容器，继续加载后续的\r\n              if(!innercontainer||(innercontainer&&innercontainer.length==0)){\r\n                //loadModule.loaded = true;\r\n                //设置为无载体容器\r\n                loadModule.nocontainer = true;\r\n                that.initModuleTreeToPage();\r\n                //判断如果加载完成则需要调用后续的接口\r\n                if (that.pageModuleDataIsLoaded(null, true)){\r\n                  that.requestPageCommonInterfaceData();\r\n                }\r\n                return;\r\n              }\r\n            } else {\r\n              if(beforeModule&&containerInnerDom.find(\"#\" + beforeModule.packageid).length){\r\n                containerInnerDom.find(\"#\" + beforeModule.packageid).after(newComDiv);\r\n              }else if(laterModule&&containerInnerDom.find(\"#\" + laterModule.packageid).length){\r\n                containerInnerDom.find(\"#\" + laterModule.packageid).before(newComDiv);\r\n              }else{\r\n                containerInnerDom.append(newComDiv);\r\n              }\r\n            }\r\n          }\r\n        } else if(!fModule){\r\n          //此处只适合一级显示隐藏的加载 判断上一个，上一个没有在取下一个\r\n          if(beforeModule){\r\n            $(\"#router_page_\"+that.routerId+\" #\" + beforeModule.packageid).after(newComDiv);\r\n          }else if(laterModule){\r\n            $(\"#router_page_\"+that.routerId+\" #\" + laterModule.packageid).before(newComDiv);\r\n          }\r\n        }\r\n        //这里要做渲染，根据relationId: \"component_o0mOWZACB0IVR5hz\"   relationType: \"top\"\r\n        //关联ID\r\n        comObject.env = \"production\";\r\n        //追加路由ID，页面ID\r\n        comObject.routerId=this.routerId;\r\n        comObject.pageid = this.pageid;\r\n        that.IDM.module.addModuleToQueue(comObject);\r\n      }\r\n\r\n      return loadModule;\r\n    },\r\n    /**\r\n     * 判断是否加载完成,未完成返回false，主要用于拷贝的时候递归加载完成的判断\r\n     * loadType:加载类型：loaded 是否全部加载完成、loading：加载中的、hasLoading：已经开始加载的\r\n     */\r\n    pageModuleDataIsLoaded(moduleData, isnotloadinner,loadType = \"hasLoading\") {\r\n      let that = this;\r\n      var isLoaded = true;\r\n      moduleData = moduleData || that.PageSettingData.page.layout.children;\r\n      if (!(moduleData instanceof Array)) {\r\n        moduleData = [moduleData];\r\n      }\r\n      moduleData.forEach((item) => {\r\n        if(item.comType==\"dialog\"&&!item.renderLicence){\r\n          //渲染许可为false跳过不渲染下面的子级\r\n          return;\r\n        }\r\n        //无载体的组件也要设置为已加载完成\r\n        if (!item[loadType]&&item.nocontainer!==true) {\r\n          isLoaded = false;\r\n          // if(isnotloadinner&&(item.containerIndex||item.containerIndex==\"0\")){\r\n          //   isLoaded = true;\r\n          // }\r\n        }\r\n      });\r\n      if (isLoaded) {\r\n        moduleData.forEach((item) => {\r\n          if(item.comType==\"dialog\"&&!item.renderLicence){\r\n            //渲染许可为false跳过不渲染下面的子级\r\n            return;\r\n          }\r\n          if (item.children && item.children.length > 0 && isLoaded) {\r\n            isLoaded = this.pageModuleDataIsLoaded(\r\n              item.children,\r\n              isnotloadinner,\r\n              loadType\r\n            );\r\n          }\r\n        });\r\n      }\r\n      return isLoaded;\r\n    },\r\n    /**\r\n     * 创建组件dom外部元素\r\n     */\r\n    createModuleDom(comObject) {\r\n      let that = this;\r\n      //包裹最外层的ID\r\n      comObject.packageid = comObject.packageid || \"component_\" + IDM.UUID();\r\n      //组件内部ID，这里可能不受核心框架控制，需要谨慎使用\r\n      comObject.id = comObject.id || comObject.packageid + \"_inner\";\r\n      //追加div\r\n      var newComDiv = $(\"<div />\");\r\n      //追加设置属性\r\n      newComDiv.attr(\"id\", comObject.packageid);\r\n      newComDiv.attr(\"idm-com-anchor-id\", comObject.packageid);\r\n      newComDiv.attr(\"idm-com-id\", comObject.comId);\r\n      newComDiv.attr(\"idm-com-classid\", comObject.classId);\r\n      newComDiv.attr(\"idm-com-classname\", comObject.className);\r\n      if(comObject.loadAndHide){\r\n        newComDiv.attr(\"style\",\"display:none\");\r\n      }\r\n      //追加组件标识\r\n      newComDiv.addClass(\"idm_module\");\r\n      newComDiv.addClass(comObject.packageid);\r\n      //追加内部div，提供给组件加载使用，只有ID，后续将不会再使用\r\n      newComDiv.append($(\"<div />\").attr(\"id\", \"idm_\"+comObject.id+this.routerId));\r\n      if(comObject.positionMode==\"absolute\"){\r\n        that.createHoverLayoutHandle(newComDiv,comObject)\r\n      }\r\n      return newComDiv;\r\n    },\r\n    /**\r\n      * 创建悬浮模式下的组件dom外部元素\r\n      */\r\n    createHoverLayoutHandle(newComDiv, comObject) {\r\n        let that = this;\r\n        //绝对定位追加宽高和坐标 追加可拖拽的手势\r\n        newComDiv.addClass(\"idm_module_absolute\");\r\n        this.resetHoverModuleStyleInfo(newComDiv,comObject);\r\n        //这里可以继续处理内置的组件事件，比如svg绘制的\r\n    },\r\n    /**\r\n      * 重绘样式\r\n      * @param {*} moduleDOM \r\n      * @param {*} currentModule \r\n      */\r\n    resetHoverModuleStyleInfo(moduleDOM,currentModule){\r\n        let that = this;\r\n        let _basicAttr = currentModule.props && currentModule.props.basicAttr?currentModule.props && currentModule.props.basicAttr:{};\r\n        //获取方位、坐标、宽高\r\n        const modulePositionOrigin = _basicAttr.positionOrigin || \"leftTop\";\r\n        let moduleCurrentWH = _basicAttr.positionWH || `${that.defaultModuleSize.width}.${that.defaultModuleSize.height}`;\r\n        moduleCurrentWH = moduleCurrentWH.split(\",\");\r\n        let moduleCurrentW = moduleCurrentWH.length > 0 ? parseFloat(moduleCurrentWH[0]) : 0,\r\n            moduleCurrentH = moduleCurrentWH.length > 1 ? parseFloat(moduleCurrentWH[1]) : 0;\r\n        let moduleCurrentXY = _basicAttr.positionXY || \"0,0\";\r\n        moduleCurrentXY = moduleCurrentXY.split(\",\");\r\n        let moduleCurrentX = moduleCurrentXY.length > 0 ? parseFloat(moduleCurrentXY[0]) : 0,\r\n            moduleCurrentY = moduleCurrentXY.length > 1 ? parseFloat(moduleCurrentXY[1]) : 0;\r\n        \r\n        //获取索引\r\n        let moduleZindex = _basicAttr.zIndex || 0;\r\n        let moduleOpacity = _basicAttr.opacity==0?0:(_basicAttr.opacity||100);\r\n        let moduleScale = _basicAttr.scale||1;\r\n        let moduleRotateX = _basicAttr.rotateX||0;\r\n        let moduleRotateY = _basicAttr.rotateY||0;\r\n        let moduleRotateZ = _basicAttr.rotateZ||0;\r\n\r\n\r\n        let styleObject = {};\r\n        switch (modulePositionOrigin) {\r\n            case \"leftTop\":\r\n                styleObject = {\r\n                    left: moduleCurrentX + \"px\",\r\n                    top: moduleCurrentY + \"px\",\r\n                    right: \"auto\",\r\n                    bottom: \"auto\",\r\n                    width: moduleCurrentW + \"px\",\r\n                    height: moduleCurrentH + \"px\"\r\n                }\r\n                break;\r\n            case \"rightTop\":\r\n                styleObject = {\r\n                    left: \"auto\",\r\n                    top: moduleCurrentY + \"px\",\r\n                    right: moduleCurrentX + \"px\",\r\n                    bottom: \"auto\",\r\n                    width: moduleCurrentW + \"px\",\r\n                    height: moduleCurrentH + \"px\"\r\n                }\r\n                break;\r\n            case \"rightBottom\":\r\n                styleObject = {\r\n                    left: \"auto\",\r\n                    top: \"auto\",\r\n                    right: moduleCurrentX + \"px\",\r\n                    bottom: moduleCurrentY + \"px\",\r\n                    width: moduleCurrentW + \"px\",\r\n                    height: moduleCurrentH + \"px\"\r\n                }\r\n                break;\r\n            case \"leftBottom\":\r\n                styleObject = {\r\n                    left: moduleCurrentX + \"px\",\r\n                    top: \"auto\",\r\n                    right: \"auto\",\r\n                    bottom: moduleCurrentY + \"px\",\r\n                    width: moduleCurrentW + \"px\",\r\n                    height: moduleCurrentH + \"px\"\r\n                }\r\n                break;\r\n        }\r\n        styleObject[\"z-index\"] = moduleZindex;\r\n        styleObject[\"opacity\"] = moduleOpacity/100;\r\n        styleObject[\"transform\"] = `scale(${moduleScale}) rotateX(${moduleRotateX}deg) rotateY(${moduleRotateY}deg) rotateZ(${moduleRotateZ}deg)`;\r\n        moduleDOM && moduleDOM.css(styleObject);\r\n    },\r\n    /**\r\n     * 获取指定层级的组件树结构数据\r\n     */\r\n    getModuleTree(module, packageid) {\r\n      if (!(module instanceof Array)) {\r\n        module = [module];\r\n      }\r\n      var _findModule;\r\n      module.forEach((item) => {\r\n        if (item.packageid == packageid) {\r\n          _findModule = item;\r\n        } else if (!_findModule && item.children) {\r\n          _findModule = this.getModuleTree(item.children, packageid);\r\n        }\r\n      });\r\n      return _findModule;\r\n    },\r\n    /**\r\n     * 提供组件或组件内部容器的重新加载\r\n     */\r\n    moduleReload(packageid,innerContainerIndex){\r\n      //先查找模块，然后根据innerContainerIndex来删除对应的加载状态标识\r\n      const reloadModule = this.getModuleTree(\r\n        this.PageSettingData.page.layout.children,\r\n        packageid\r\n      );\r\n      let reloadModuleArray = [reloadModule];\r\n      let parentModule;\r\n      if(innerContainerIndex||innerContainerIndex==\"0\"){\r\n        //存在内部索引\r\n        reloadModuleArray = [];\r\n        reloadModule&&reloadModule.children&&reloadModule.children.forEach(item=>{\r\n          if(item.containerIndex==innerContainerIndex){\r\n            reloadModuleArray.push(item);\r\n          }\r\n        })\r\n        parentModule = reloadModule;\r\n      }else{\r\n        //找出当前的父级\r\n        let globalIdArray = reloadModule.globalId.split(\".\");\r\n        const globalId = globalIdArray.length<=2?globalIdArray[0]:globalIdArray[globalIdArray.length-2];\r\n        parentModule = this.getModuleTree(\r\n          this.PageSettingData.page.layout.children,\r\n          globalId\r\n        );\r\n      }\r\n      //删除全部加载状态\r\n      this.resetLayoutInnerModuleLoadedStatus(reloadModuleArray);\r\n      reloadModuleArray&&reloadModuleArray.forEach((item) => {\r\n        $(\"#router_page_\"+this.routerId+\" #\" + item.packageid).remove();\r\n      });\r\n      \r\n      //调用重新加载\r\n      this.initModuleTreeToPage(\r\n        reloadModuleArray,\r\n        true,\r\n        parentModule,\r\n        false\r\n      );\r\n    },\r\n    /**\r\n     * 组件挂载完成回调事件\r\n     */\r\n    moduleMountComplete(module) {\r\n      let that = this;\r\n      //把事件合并到map中\r\n      this.PageSettingData.page.componentsMap.forEach((item) => {\r\n        if (item.packageid == module.packageid) {\r\n          item.idmBroadcastMessage = module.idmBroadcastMessage;\r\n          item.idmSetContextValue = module.idmSetContextValue;\r\n          item.idmGetContextValue = module.idmGetContextValue;\r\n        }\r\n      });\r\n      console.log(\"挂载完成，回调返回的数据\", module);\r\n      let opModule = this.getModuleTree(\r\n        this.PageSettingData.page.layout.children,\r\n        module.packageid\r\n      );\r\n      //加载完成，不在加载中了\r\n      opModule.loading = false;\r\n      //设置加载完成的状态\r\n      opModule.loaded = true;\r\n      if (opModule.children && opModule.children.length > 0) {\r\n        //有子组件，代表是容器类组件，首先获取是否加载完成且有子元素inner\r\n        const targetNode = $(\"#\" + module.packageid);\r\n        if (targetNode.find(\":visible\").length == 0) {\r\n          //代表内容元素还是空的，没有加载完成\r\n          var invcount = 0;\r\n          var intval = setInterval(function () {\r\n            invcount++;\r\n            if (\r\n              $(\"#router_page_\"+that.routerId+\" #\" + module.packageid).find(\":visible\").length == 0 &&\r\n              invcount <= 20\r\n            ) {\r\n              return;\r\n            }\r\n            clearInterval(intval);\r\n            that.moduleMountCompleteCommon(module);\r\n          }, 5);\r\n        } else {\r\n          //加载时序问题，延迟3毫秒\r\n          setTimeout(() => {\r\n            that.moduleMountCompleteCommon(module);\r\n          }, 3);\r\n        }\r\n      } else {\r\n          //加载时序问题，延迟3毫秒\r\n          setTimeout(() => {\r\n            that.moduleMountCompleteCommon(module);\r\n          }, 3);\r\n      }\r\n      // this.initModuleInnerEventHandle(module);\r\n      // class名称表示：\r\n      // drag_container_empty：空容器类名\r\n      // drag_container：容器，可拖拽过来\r\n      // id作为class类名：样式设置\r\n      // idm_module：所有组件最外层都有的类名\r\n      // drag_container_inlineblock: 代表是行内容器\r\n\r\n      // 属性 ：\r\n      // idm-com-anchor-id：代表新生成的唯一组件ID\r\n      // id:代表新生成的唯一组件ID\r\n      // idm-com-id：组件的ID\r\n      // idm-com-classid：组件的包名\r\n      // idm-com-classname：组件的类名\r\n      // idm-container-index：容器索引，在一个组件内有两个或以上的容器就会作用到\r\n    },\r\n    moduleMountCompleteCommon(module){\r\n      let that = this;\r\n      var moduleDom = $(\"#router_page_\"+this.routerId+\" #\" + module.packageid + \"\");\r\n      var moduleInnerDom = moduleDom.find(\">*[idm-ctrl]\");\r\n      var idmCtrl = moduleInnerDom.attr(\"idm-ctrl\"),\r\n        idmCtrlId = moduleInnerDom.attr(\"idm-ctrl-id\"),\r\n        domId = moduleInnerDom.attr(\"id\");\r\n      if (!domId) {\r\n        moduleInnerDom.attr(\"id\", idmCtrlId);\r\n      }\r\n      switch (idmCtrl) {\r\n        case \"drag_container\": //容器\r\n          moduleDom.addClass(\"drag_container\");\r\n          break;\r\n        case \"drag_container_inlineblock\": //行内容器\r\n          moduleDom.addClass(\"drag_container drag_container_inlineblock\");\r\n          break;\r\n        case \"idm_module\": //非容器组件\r\n          break;\r\n      }\r\n\r\n      //如果没有加载完成则先判断下，没有完成则继续加载\r\n      if (!this.pageModuleDataIsLoaded(null, true)) {\r\n        this.$nextTick(function () {\r\n          this.initModuleTreeToPage(\r\n            null,\r\n            true,\r\n            this.PageSettingData.page.layout\r\n          );\r\n        });\r\n      }else if (this.pageModuleDataIsLoaded(null, true,\"loaded\")){\r\n        this.requestPageCommonInterfaceData();\r\n      }\r\n    },\r\n    /**\r\n     * 加载组件内部容器组件事件\r\n     * 参数：\r\n     * module：{packageid:组件包id，组件内部使用的id}\r\n     */\r\n    initModuleInnerEventHandle(module) {\r\n      let that = this;\r\n      //获取是否存在内部容器组件\r\n      var moduleDom = $(\"#router_page_\"+that.routerId+\" #\" + module.packageid + \"\");\r\n      var moduleInnerDom = moduleDom.find(\r\n        \".drag_container[idm-ctrl-id='\" + module.id + \"'][idm-ctrl-inner]\"\r\n      );\r\n      if (moduleInnerDom.length > 0) {\r\n        //内部组件重新追加，因为上面哪种加载方式会导致没加载完\r\n        const opModule = this.getModuleTree(\r\n          this.PageSettingData.page.layout.children,\r\n          module.packageid\r\n        );\r\n        this.resetLayoutInnerModuleLoadedStatus(opModule.children);\r\n        if (opModule.children && opModule.children.length > 0) {\r\n          opModule.children.forEach((item) => {\r\n            $(\"#\" + item.packageid).remove();\r\n          });\r\n          this.initModuleTreeToPage(opModule.children, true, opModule);\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 加载前重置所有加载状态\r\n     * @param {*} module \r\n     * @param {*} resetModuleIdList\r\n     */\r\n    resetLayoutInnerModuleLoadedStatus(module,resetModuleIdList) {\r\n      if (!(module instanceof Array)) {\r\n        module = [module];\r\n      }\r\n      module.forEach((item) => {\r\n        let hasFindLoadId = (resetModuleIdList&&resetModuleIdList.indexOf(item.packageid)>-1);\r\n        let childrenResetModuleIdList = resetModuleIdList;\r\n        if(!resetModuleIdList||hasFindLoadId){\r\n          //组件是否已经加载完成\r\n          delete item.loaded;\r\n          //组件是否在加载中...\r\n          delete item.loading;\r\n          //组件是否已经加载\r\n          delete item.hasLoading;\r\n          if(hasFindLoadId){\r\n            item.againLoad = true;\r\n            childrenResetModuleIdList = null\r\n          }\r\n        }\r\n        if (item.children && item.children.length > 0) {\r\n          this.resetLayoutInnerModuleLoadedStatus(item.children,childrenResetModuleIdList);\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>","import mod from \"-!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--13-0!../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!./Page.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--13-0!../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!./Page.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Page.vue?vue&type=template&id=f738d1f2&\"\nimport script from \"./Page.vue?vue&type=script&lang=js&\"\nexport * from \"./Page.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.10.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <!--页面根元素-->\r\n  <div class=\"idm_render_engine_container\">\r\n    <!--页面渲染的容器-->\r\n    <transition-group v-on:after-enter=\"transitionAfterEnter\" tag=\"div\" class=\"idm_render_engine_router_container\" name=\"slide-fade\">\r\n      <template v-for=\"(page,index) in AppPageList\">\r\n        <component v-if=\"page.keep\" :is=\"'Page'\" :key=\"page.pageid+index\"\r\n        :ref=\"`idm_page_${page.routerId}`\"\r\n        :styleObject=\"page.display===false?{'display':'none'}:{}\"\r\n        :pageid=\"page.pageid\"\r\n        :routerId=\"page.routerId\"\r\n        :devpreview=\"page.devpreview\"\r\n        :mainPage=\"page.mainPage\"\r\n        :index=\"index\"\r\n        @mainPageSettingHandle=\"mainPageSettingHandle\"\r\n        />\r\n      </template>\r\n    </transition-group>\r\n    <idm-a-drawer\r\n      :title=\"pagePropData.drawerTitleShow?pagePropData.drawerTitle:''\"\r\n      :placement=\"pagePropData.drawerPlacement||'right'\"\r\n      :closable=\"pagePropData.drawerClosable===false?false:true\"\r\n      :destroyOnClose=\"pagePropData.drawerDestroyOnClose\"\r\n      :maskClosable=\"pagePropData.drawerMaskClosable===false?false:true\"\r\n      :mask=\"pagePropData.drawerMask===false?false:true\"\r\n      :keyboard=\"pagePropData.drawerKeyboarde===false?false:true\"\r\n      :maskStyle=\"commonCustomEventFunHandle(pagePropData,'drawerMaskStyleFunction')||{}\"\r\n      :wrapStyle=\"commonCustomEventFunHandle(pagePropData,'drawerWrapStyleFunction')||{}\"\r\n      :drawerStyle=\"commonCustomEventFunHandle(pagePropData,'drawerStyleFunction')||{}\"\r\n      :headerStyle=\"commonCustomEventFunHandle(pagePropData,'drawerHeaderStyleFunction')||{}\"\r\n      :bodyStyle=\"commonCustomEventFunHandle(pagePropData,'drawerBodyStyleFunction')||{}\"\r\n      :width=\"pagePropData.drawerWidth||256\"\r\n      :height=\"pagePropData.drawerHeight||256\"\r\n      :zIndex=\"pagePropData.drawerZIndex||1000\"\r\n      :wrapClassName=\"(pagePropData.drawerWrapClassName||'')+' idm_module_setting_drawer'\"\r\n      :visible=\"drawerVisible\"\r\n      @close=\"drawerOnClose\"\r\n      @afterVisibleChange=\"drawerOnAfterVisibleChange\"\r\n    >\r\n      <iframe class=\"idm_drawer_iframe_basestyle\" :src=\"drawerIframeUrl\" name=\"idm_drawer_iframe\"/>\r\n    </idm-a-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//页面渲染引擎所需要的组件注册\r\nimport \"@/plugins/preview\";\r\nimport mixin from './mixin';\r\nimport Page from './Page.vue';\r\nexport default {\r\n  mixins:[mixin],\r\n  name: \"Preview\",\r\n  components: {Page},\r\n  data() {\r\n    return {\r\n      pageid: \"\",\r\n      //当前页面的数据\r\n      PageSettingData: {},\r\n      dialogVisibleStatus:false,\r\n      //是否正在隐藏中\r\n      dialogIsHideing:false,\r\n      //窗口的对象\r\n      dialogObjectList:[],\r\n      //控制中心窗口是否显示\r\n      drawerVisible:false,\r\n      //控制中心窗口iframe的URL\r\n      drawerIframeUrl:\"\",\r\n      //控制中心窗口的option\r\n      drawerControlSetPanelOption:null,\r\n      //页面属性\r\n      pagePropData:{},\r\n      //当前页面所有加载过的页面数据\r\n      AppPageList:[],\r\n      //当前路由页面的动画类型，1：前进，0：后退\r\n      currentTransitionType:1\r\n    };\r\n  },\r\n  mounted() {\r\n    this.windowResizeEvent(function(){\r\n      //给所有组件发送pageResize消息\r\n      IDM.broadcast.send({\r\n        type:\"pageResize\",\r\n        rangeModule:\"\",\r\n        message:IDM.getClientWH()\r\n      })\r\n    })\r\n  },\r\n  created() {\r\n    IDM.router.pageDataCachePool = IDM.cachePool(100);\r\n    //加载引用外部脚本\r\n    this.initCommonRequireJsCss();\r\n\r\n    this.pageid = this.$route.params.pageid;\r\n    this.AppPageList.push({\r\n      routerId:\"\",\r\n      pageid:this.pageid,\r\n      devpreview:this.pageid == \"devpreview\",\r\n      display:true,\r\n      mainPage:true,\r\n      keep:true\r\n    })\r\n\r\n    this.injectInnerActionToWindow();\r\n  },\r\n  methods: {\r\n    /**\r\n     * 窗口大小更改事件\r\n     */\r\n    windowResizeEvent(callback) {\r\n        window.onresize = function() {\r\n            var target = this;\r\n            if (target.resizeFlag) {\r\n                clearTimeout(target.resizeFlag);\r\n            }\r\n            target.resizeFlag = setTimeout(function() {\r\n                callback();\r\n                target.resizeFlag = null;\r\n            }, 100);\r\n        }\r\n    },\r\n    /**\r\n     * 主页面配置数据\r\n     */\r\n    async mainPageSettingHandle(mainPageSetting){\r\n      this.PageSettingData = mainPageSetting;\r\n      await this.loadPageElement();\r\n    },\r\n    /**\r\n     * 控制中心抽屉关闭事件\r\n     */\r\n    drawerOnClose() {\r\n      this.drawerVisible = false;\r\n      this.commonCustomEventFunHandle(null,\"drawerCloseFunction\");\r\n    },\r\n    /**\r\n     * 控制中心切换抽屉时动画结束后的回调\t\r\n     */\r\n    drawerOnAfterVisibleChange() {\r\n        this.commonCustomEventFunHandle(null,\"drawerAfterVisibleChangeFunction\");\r\n    },\r\n    injectInnerActionToWindow(){\r\n      window.IdmBuiltin_OpenControlSetPanel = this.IdmBuiltin_OpenControlSetPanel;\r\n      window.IdmBuiltin_CloseControlSetPanel = this.IdmBuiltin_CloseControlSetPanel;\r\n      window.IdmBuiltin_OpenUrl = this.IdmBuiltin_OpenUrl;\r\n      window.IdmBuiltin_OpenDialog = this.IdmBuiltin_OpenDialog;\r\n      window.IdmBuiltin_CloseDialog = this.IdmBuiltin_CloseDialog;\r\n      window.IdmBuiltin_ShowModule = this.IdmBuiltin_ShowModule;\r\n      window.IdmBuiltin_HideModule = this.IdmBuiltin_HideModule;\r\n      window.IdmBuiltin_InitNewPage = this.IdmBuiltin_InitNewPage;\r\n      window.IdmBuiltin_backPage = this.IdmBuiltin_backPage;\r\n      window.IdmBuiltin_changePageUserDefinedStatus = this.IdmBuiltin_changePageUserDefinedStatus;\r\n    },\r\n    IdmBuiltin_changePageUserDefinedStatus(ctx){\r\n      var customRouterId = ctx.routerId||\"\";\r\n      for (let index = 0; index < this.AppPageList.length; index++) {\r\n        const element = this.AppPageList[index];\r\n        if(customRouterId!=element.routerId){\r\n          continue;\r\n        }\r\n        let idmPageRefs = this.$refs[\"idm_page_\"+element.routerId];\r\n        idmPageRefs instanceof Array?idmPageRefs=idmPageRefs[0]:null;\r\n        idmPageRefs.pageUserDefinedStatusChangeHandle(ctx.status,ctx.save);\r\n      }\r\n    },\r\n    transitionAfterEnter(){\r\n      // $(window).scrollTop(0);\r\n    },\r\n    /**\r\n     * 内部的加载新页面事件\r\n     */\r\n    IdmBuiltin_InitNewPage(routerObject){\r\n      \r\n      this.AppPageList.push({\r\n        routerId:routerObject.routerId,\r\n        pageid:routerObject.next,\r\n        devpreview:routerObject.next=='devpreview',\r\n        mainPage:false,\r\n        keep:true,\r\n        display:true,\r\n        scrollTop:$(window).scrollTop()\r\n      })\r\n      //todo 这里需要实现判断当前路由页面缓存方式，并且做出是缓存dom方式还是移除dom\r\n      let nokeep =false;\r\n      if(routerObject.meta&&routerObject.meta.keep===false){\r\n        //不缓存\r\n        this.AppPageList[this.AppPageList.length-2].keep=false;\r\n        nokeep = true;\r\n      }else if(routerObject.meta&&routerObject.meta.keep===\"memory\"){\r\n        //缓存dom到内存中(暂不支持)\r\n        const _routerId = this.AppPageList[this.AppPageList.length-2].routerId;\r\n        // IDM.router.setDomToCache(_routerId);\r\n        nokeep = true;\r\n      }\r\n      $(window).scrollTop(0);\r\n      if(!nokeep){\r\n        setTimeout(() => {\r\n          //如果是缓存，需要执行隐藏\r\n          try{\r\n            this.AppPageList[this.AppPageList.length-2].display=false;\r\n          }catch(e){\r\n            //页面切换速度过快引起的，比如打开里面关闭了而这里延时隐藏还没执行导致的索引报错。\r\n          }\r\n        }, 600);\r\n      }\r\n      nokeep&&this.$nextTick(()=>{\r\n        //卸载后触发的事件\r\n        var pageSetData = IDM.router.pageDataCachePool.get(routerObject.from);\r\n        if(pageSetData){\r\n          var propData=null;\r\n          for (\r\n              var index = 0;\r\n              index < pageSetData.page.componentsMap.length;\r\n              index++\r\n            ) {\r\n              const item = pageSetData.page.componentsMap[index];\r\n              if (item.packageid == pageSetData.page.layout.packageid) {\r\n                  propData = item.props.compositeAttr;\r\n                  break;\r\n              }\r\n            }\r\n            IDM.router.commonCustomEventFunHandle(propData,\"pageNoKeepDestroyedFunction\",routerObject,this.AppPageList[this.AppPageList.length-2].pageid);\r\n        }\r\n      })\r\n    },\r\n    IdmBuiltin_backPage(router,prevRoter){\r\n      let activeItem = null;\r\n      for (let index = 0; index < this.AppPageList.length; index++) {\r\n        let item = this.AppPageList[index];\r\n        if(item.routerId==router.routerId){\r\n          this.AppPageList.splice(index,1);\r\n        }\r\n        if(router&&router.meta.keep===false&&((prevRoter&&prevRoter.routerId==item.routerId)||(!prevRoter&&item.mainPage))){\r\n          //重新渲染\r\n          item.keep=true;\r\n        }\r\n        if((prevRoter&&prevRoter.routerId==item.routerId)||(!prevRoter&&item.mainPage)){\r\n          activeItem = item;\r\n          item.display = true;\r\n          $(window).scrollTop(item.scrollTop);\r\n        }\r\n      }\r\n      this.$nextTick(()=>{\r\n        //卸载后触发的事件\r\n        let pageSetData = IDM.router.pageDataCachePool.get(router.next);\r\n        var propData=null;\r\n        if(pageSetData){\r\n          for (\r\n              var index1 = 0;\r\n              index1 < pageSetData.page.componentsMap.length;\r\n              index1++\r\n            ) {\r\n              const item = pageSetData.page.componentsMap[index1];\r\n              if (item.packageid == pageSetData.page.layout.packageid) {\r\n                  propData = item.props.compositeAttr;\r\n                  break;\r\n              }\r\n            }\r\n            IDM.router.commonCustomEventFunHandle(propData,\"pageBackDestroyedFunction\",router,router.next);\r\n        }\r\n        IDM.broadcast.unRegisterModule(router.routerId);\r\n        //触发页面激活事件\r\n        pageSetData = IDM.router.pageDataCachePool.get(activeItem.pageid);\r\n        if(pageSetData){\r\n          for (\r\n              var index2 = 0;\r\n              index2 < pageSetData.page.componentsMap.length;\r\n              index2++\r\n            ) {\r\n              const item = pageSetData.page.componentsMap[index2];\r\n              if (item.packageid == pageSetData.page.layout.packageid) {\r\n                  propData = item.props.compositeAttr;\r\n                  break;\r\n              }\r\n            }\r\n            IDM.router.commonCustomEventFunHandle(propData,\"pageActivatedFunction\",prevRoter,activeItem.pageid);\r\n            this.sendBroadcastMessage({\r\n              type:\"pageActivated\",\r\n              message:activeItem\r\n            },activeItem.routerId)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 打开组件控制面板设置\r\n     * {\r\n     *   controlSetPanelOption:{\r\n     *     param:{\r\n     *        marketModuleId:\"必填，市场组件的ID，组件内取this.moduleObject.comId即可\",\r\n     *        pageId:\"必填，页面的ID，直接使用 window.IDM.broadcast.pageModule.id 即可获取\",\r\n     *        packageid:\"必填，组件实例的ID，主要用于区别页面的同一个组件，直接使用 this.moduleObject.packageid 即可获取到\"\r\n     *     },\r\n     *     showTop:默认为true，设置是否显示在最顶级页面中，这样做的目的是为了在跨页面的时候遮罩显示在最外面，能覆盖整个窗口\r\n     *     success:层弹出后的成功回调方法,\r\n     *     yes:确定按钮回调方法,\r\n     *     cancel:关闭触发的回调,\r\n     *     reset:重置后的回调,\r\n     *     other:其他按钮触发回调方法,\r\n     *     controlSetPanelId:\"控制面板窗口ID,每次打开的时候自动生成\"\r\n     *   }\r\n     * }\r\n     */\r\n    IdmBuiltin_OpenControlSetPanel(ctx){\r\n      let iframeUrl = this.pagePropData.moduleControlCenterSettingUrl;\r\n      //生成url\r\n      if(!iframeUrl){\r\n        return;\r\n      }\r\n      iframeUrl=iframeUrl+(iframeUrl.indexOf(\"?\")==-1?\"?\":\"&\");\r\n      if(ctx&&ctx.controlSetPanelOption){\r\n        if(ctx.controlSetPanelOption.param\r\n        &&ctx.controlSetPanelOption.param.marketModuleId\r\n        &&ctx.controlSetPanelOption.param.pageId\r\n        &&ctx.controlSetPanelOption.param.packageid){\r\n          Object.keys(ctx.controlSetPanelOption.param).forEach((key,index)=>{\r\n            if(index>0){\r\n              iframeUrl=iframeUrl+\"&\";\r\n            }\r\n            iframeUrl=iframeUrl+key+\"=\"+ctx.controlSetPanelOption.param[key];\r\n          })\r\n        }else{\r\n          return;\r\n        }\r\n      }\r\n      this.drawerIframeUrl = IDM.url.getWebPath(iframeUrl);\r\n      //设置对应的option\r\n      this.drawerControlSetPanelOption = ctx.controlSetPanelOption||null;\r\n      this.drawerVisible = true;\r\n      //执行打开成功的回调方法\r\n      this.drawerControlSetPanelOption&&this.drawerControlSetPanelOption.success&&this.drawerControlSetPanelOption.success(ctx.controlSetPanelOption.controlSetPanelId);\r\n    },\r\n    /**\r\n     * 关闭组件控制面板设置，这里要判断controlSetPanelId是否与当前页面的一致，一致才能关闭\r\n     * {\r\n     *   controlSetPanelOption:{\r\n     *     controlSetPanelId:\"控制面板窗口ID\"\r\n     *   }\r\n     * }\r\n     */\r\n    IdmBuiltin_CloseControlSetPanel(ctx){\r\n      if((ctx&&ctx.innerClose)||(ctx&&ctx.controlSetPanelOption&&ctx.controlSetPanelOption.controlSetPanelId&&this.drawerControlSetPanelOption&&ctx.controlSetPanelOption.controlSetPanelId==this.drawerControlSetPanelOption.controlSetPanelId)){\r\n        //是关闭这个窗口，执行关闭事件\r\n        this.drawerOnClose();\r\n        //判断关闭的类型\r\n        switch (ctx.actionType) {\r\n          case \"close\":\r\n          case \"other\":\r\n            this.drawerControlSetPanelOption&&this.drawerControlSetPanelOption.other&&this.drawerControlSetPanelOption.other();\r\n            break;\r\n          case \"commit\":\r\n            this.drawerControlSetPanelOption&&this.drawerControlSetPanelOption.yes&&this.drawerControlSetPanelOption.yes();\r\n            break;\r\n          case \"reset\":\r\n            this.drawerControlSetPanelOption&&this.drawerControlSetPanelOption.reset&&this.drawerControlSetPanelOption.reset();\r\n            break;\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 打开地址\r\n     */\r\n    IdmBuiltin_OpenUrl(ctx){\r\n      var customParam = ctx.customParam?ctx.customParam:ctx;\r\n      window.open(IDM.url.getWebPath(customParam.openUrl),customParam.openName,customParam.openFeatures)\r\n    },\r\n    /**\r\n     * 打开窗口\r\n     * 要给对应的组件发送打开窗口的消息\r\n     */\r\n    IdmBuiltin_OpenDialog(ctx){\r\n      var customParam = ctx.customParam?ctx.customParam:ctx;\r\n      var customRouterId = ctx.routerId||\"\";\r\n      var moduleIdArray = [];\r\n      let existsCount = 0;\r\n      let hasIdmPageRefs=[];\r\n      customParam.targetModule.forEach(item=>{\r\n        moduleIdArray.push(item.moduleId);\r\n        //这里this.renderDialog需要调用页面组件挨个去加载\r\n        for (let index = 0; index < this.AppPageList.length; index++) {\r\n          const element = this.AppPageList[index];\r\n          if(customRouterId!=element.routerId){\r\n            continue;\r\n          }\r\n          let idmPageRefs = this.$refs[\"idm_page_\"+element.routerId];\r\n          idmPageRefs instanceof Array?idmPageRefs=idmPageRefs[0]:null;\r\n          const dialogObject = idmPageRefs.renderDialog(item.moduleId);\r\n          if(dialogObject===false){\r\n            continue;\r\n          }\r\n          hasIdmPageRefs.push(idmPageRefs);\r\n          dialogObject.dialogIsHideing = false;\r\n          if(ctx.layerOption){\r\n            dialogObject.layerOption=ctx.layerOption;\r\n          }\r\n          //追加到窗口集合中\r\n          this.dialogObjectList.push(dialogObject);\r\n          existsCount++;\r\n          idmPageRefs.setShowDialog(dialogObject);\r\n        }\r\n      });\r\n      //没有找到其中一个就不往下加载了\r\n      if(existsCount==0){\r\n        return;\r\n      }\r\n      let that = this;\r\n      this.$nextTick(function(){\r\n        //这里即使发送消息也没关系（会存储在等候消息池中），因为会等待组件加载完成再次调用发送消息\r\n        setTimeout(() => {\r\n          that.sendBroadcastMessage({\r\n              type:\"linkageOpenDialog\",\r\n              message:ctx,\r\n              rangeModule:moduleIdArray\r\n            })\r\n        }, 5);\r\n      })\r\n      if(ctx.callback){\r\n        ctx.callback();\r\n      }\r\n    },\r\n    /**\r\n     * 关闭窗口\r\n     * 要给对应的组件发送关闭窗口的消息\r\n     */\r\n    IdmBuiltin_CloseDialog(ctx){\r\n      var customRouterId = ctx.routerId||\"\";\r\n      for (let index = 0; index < this.AppPageList.length; index++) {\r\n        const element = this.AppPageList[index];\r\n        if(customRouterId!=element.routerId){\r\n          continue;\r\n        }\r\n        let idmPageRefs = this.$refs[\"idm_page_\"+element.routerId];\r\n        idmPageRefs instanceof Array?idmPageRefs=idmPageRefs[0]:null;\r\n        idmPageRefs.closeThisOpenDialog(ctx);\r\n      }\r\n    },\r\n    /**\r\n     * 显示组件\r\n     * 直接用packageid隐藏\r\n     */\r\n    IdmBuiltin_ShowModule(ctx){\r\n      var customParam = ctx.customParam?ctx.customParam:ctx;\r\n      var customRouterId = ctx.routerId||\"\";\r\n      var moduleIdArray = [];\r\n      let noExistsModuleIdList = [];\r\n      customParam.targetModule.forEach(item=>{\r\n        moduleIdArray.push(item.moduleId);\r\n        let currentModule = $((customRouterId?\"#router_page_\"+customRouterId+\" \":\"\")+\"#\"+item.moduleId);\r\n        if(currentModule&&currentModule.length==0){\r\n          noExistsModuleIdList.push(item.moduleId);\r\n        }else{\r\n          currentModule.show()\r\n        }\r\n      });\r\n      if(noExistsModuleIdList.length){\r\n        let idmPageRefs = this.$refs[\"idm_page_\"+customRouterId];\r\n        if(idmPageRefs){\r\n          idmPageRefs instanceof Array?idmPageRefs=idmPageRefs[0]:null;\r\n          idmPageRefs.showHideNoLoadModule(noExistsModuleIdList);\r\n        }\r\n      }\r\n      this.sendBroadcastMessage({\r\n          type:\"linkageShowModule\",\r\n          message:ctx,\r\n          rangeModule:moduleIdArray\r\n        })\r\n      if(ctx.callback){\r\n        ctx.callback();\r\n      }\r\n    },\r\n    /**\r\n     * 隐藏组件\r\n     * 直接用packageid显示\r\n     */\r\n    IdmBuiltin_HideModule(ctx){\r\n      var customParam = ctx.customParam?ctx.customParam:ctx;\r\n      var customRouterId = ctx.routerId||\"\";\r\n      var moduleIdArray = [];\r\n      customParam.targetModule.forEach(item=>{moduleIdArray.push(item.moduleId);$((customRouterId?\"#router_page_\"+customRouterId+\" \":\"\")+\"#\"+item.moduleId).hide();});\r\n      this.sendBroadcastMessage({\r\n          type:\"linkageHideModule\",\r\n          message:ctx,\r\n          rangeModule:moduleIdArray\r\n        })\r\n      if(ctx.callback){\r\n        ctx.callback();\r\n      }\r\n    },\r\n    /**\r\n     * 微信的jssdk加载处理函数\r\n     */\r\n    weixinEventHandle(propDataObject){\r\n      let that = this;\r\n      let propData = propDataObject.compositeAttr;\r\n      if(propData.switchWeixinJSSDK){\r\n        //加载微信的jssdk\r\n        let requireJsCss = IDM.setting.weixin.requireJsCss;\r\n        if(requireJsCss&&IDM.type(requireJsCss)==\"string\"){\r\n          requireJsCss=[requireJsCss];\r\n        }\r\n        if(requireJsCss&&IDM.setting.weixin.signatureUrl){\r\n          var newArray = [];\r\n          requireJsCss.forEach(item=>newArray.push(IDM.url.getWebPath(item)));\r\n          IDM.http.importFiles(newArray)\r\n          .then(() => {\r\n            // alert(\"加载微信requireJsCss文件完成\")\r\n            //加载完成\r\n            console.log(\"加载微信requireJsCss文件完成\",newArray);\r\n            //请求接口\r\n            IDM.http.get(IDM.setting.weixin.signatureUrl, {\r\n              url:window.location.href.split('#')[0]\r\n            })\r\n            .then((res) => {\r\n              // alert(JSON.stringify(res.data))\r\n              let resData = res.data;\r\n              if(resData.code==\"200\"&&resData.data){\r\n                resData = resData.data;\r\n              }\r\n              //政务微信的文档 http://im.sdt.sdbdc.cn:9080/api/doc#18026\r\n              wx.config({\r\n                  beta: true,// 调用wx.invoke形式的接口值时，该值必须为true。\r\n                  debug: IDM.setting.weixin.debug===true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。\r\n                  appId: resData.appId, // 必填，山东通的cropID\r\n                  timestamp: resData.timestamp, // 必填，生成签名的时间戳\r\n                  nonceStr: resData.nonceStr, // 必填，生成签名的随机串\r\n                  signature: resData.signature,// 必填，签名，见附录1\r\n                  jsApiList: IDM.setting.weixin.jsApiList // 必填，需要使用的JS接口列表，所有JS接口列表见附录2\r\n              });\r\n              wx.ready(() => {\r\n                //处理属性自定义函数\r\n                var commonFunction = propData.weixinReadyFunction;\r\n                commonFunction&&commonFunction.forEach(item=>{\r\n                  try {\r\n                    window[item.name]&&window[item.name].call(this,{\r\n                      ...that.commonParam(),\r\n                      customParam:item.param,\r\n                      _this:this\r\n                    });\r\n                  } catch (error) {\r\n                  }\r\n                })\r\n              });\r\n              wx.error((resError) => {\r\n                //处理属性自定义函数\r\n                var commonFunction = propData.weixinErrorFunction;\r\n                commonFunction&&commonFunction.forEach(item=>{\r\n                  try {\r\n                    window[item.name]&&window[item.name].call(this,{\r\n                      ...that.commonParam(),\r\n                      customParam:item.param,\r\n                      _this:this,\r\n                      error:resError\r\n                    });\r\n                  } catch (error) {\r\n                  }\r\n                })\r\n              });\r\n            })\r\n            .catch(function (error) {\r\n              console.log(\"微信授权出错\",error);\r\n              // alert(JSON.stringify(error))\r\n            });\r\n          })\r\n          .catch(err => {\r\n            // alert(\"加载微信requireJsCss文件出错\")\r\n            console.log(\"加载微信requireJsCss文件出错\");\r\n          })   \r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * websocket事件处理函数\r\n     */\r\n    webSocketEventHandle(propDataObject){\r\n      let that = this;\r\n      let propData = propDataObject.compositeAttr;\r\n      if(propData.switchWebSocket){\r\n        //初始化\r\n        if(propData.websocketInitName&&typeof window[propData.websocketInitName] == \"function\"){\r\n          window[propData.websocketInitName]();\r\n        }\r\n        //打开监听\r\n        propData.websocketOpenEvent?window[propData.websocketOpenEvent] = function(){\r\n          //处理属性自定义函数\r\n          var commonFunction = propData.websocketOpenFunction;\r\n          commonFunction&&commonFunction.forEach(item=>{\r\n            try {\r\n              window[item.name]&&window[item.name].call(this,{\r\n                ...that.commonParam(),\r\n                customParam:item.param,\r\n                _this:this\r\n              });\r\n            } catch (error) {\r\n            }\r\n          })\r\n        }:null\r\n        //消息监听\r\n        propData.websocketMessageEvent?window[propData.websocketMessageEvent] = function(msgData){\r\n          //发送websocket消息\r\n          IDM.broadcast.send({\r\n            type:\"websocket\",\r\n            rangeModule:\"\",\r\n            globalSend:true,\r\n            message:msgData\r\n          })\r\n          //处理属性自定义函数\r\n          var commonFunction = propData.websocketMessageFunction;\r\n          commonFunction&&commonFunction.forEach(item=>{\r\n            try {\r\n              window[item.name]&&window[item.name].call(this,{\r\n                ...that.commonParam(),\r\n                customParam:item.param,\r\n                msgData,\r\n                _this:this\r\n              });\r\n            } catch (error) {\r\n            }\r\n          })\r\n        }:null\r\n      }\r\n    },\r\n    /**\r\n     * 加载引用外部脚本\r\n     */\r\n    initCommonRequireJsCss(){\r\n      //加载默认通用脚本\r\n      if(IDM.setting.applications.commonRequireJsCss&&IDM.setting.applications.commonRequireJsCss instanceof Array){\r\n        var newArray = [];\r\n        IDM.setting.applications.commonRequireJsCss.forEach(item=>newArray.push(IDM.url.getWebPath(item)));\r\n        try{\r\n          IDM.http.importFiles(newArray)\r\n          .then(() => {\r\n            //加载完成\r\n            console.log(\"加载commonRequireJsCss文件完成\",IDM.setting.applications.commonRequireJsCss);\r\n          })\r\n          .catch(err => {\r\n            console.log(\"加载commonRequireJsCss文件出错\");\r\n          })\r\n        }catch(err){\r\n          console.error(\"加载commonRequireJsCss文件脚本内部出错\")\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 只有开启了才加载\r\n     * 加载下拉刷新插件\r\n     */\r\n    initPulltorefreshPlugin(){\r\n      let that = this;\r\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\r\n      if(!propData.openPulltorefresh){\r\n        IDM.page.stopPullToRefresh();\r\n        return;\r\n      }\r\n      IDM.http.importFiles([IDM.url.getWebPath(\"~/lib/pulltorefreshjs/index.umd.min.js\")])\r\n        .then(() => {\r\n          //加载完成\r\n          console.log(\"加载pulltorefreshjs文件完成\");\r\n          try {\r\n            const ptr = PullToRefresh.init({\r\n              mainElement: 'body',\r\n              // triggerElement:\".idm_page_root\",\r\n              instructionsPullToRefresh:\"下拉刷新\",\r\n              instructionsReleaseToRefresh:\"松手刷新\",\r\n              instructionsRefreshing:\"刷新中\",\r\n              onRefresh() {\r\n                that.initPulltorefreshHandle();\r\n              },\r\n              shouldPullToRefresh:function(){\r\n                // console.log(this)\r\n                // console.log(\"this.mainElement.scrollTop\",this.mainElement.scrollTop)\r\n                // debugger\r\n                return IDM.page.getPullToRefreshStatus()&&!$(window).scrollTop();\r\n              }\r\n            });\r\n            IDM.page.startPullToRefresh(ptr);\r\n          } catch (error) {\r\n            console.log(\"加载pulltorefreshjs出错\",error);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(\"加载pulltorefreshjs文件出错\",err);\r\n        })   \r\n    },\r\n    /**\r\n     * 下拉刷新触发函数\r\n     */\r\n     initPulltorefreshHandle(){\r\n      //检测当前显示的最后一个页面\r\n      let currentShowPageId = this.AppPageList[this.AppPageList.length-1].pageid;\r\n      let currentRouterId = this.AppPageList[this.AppPageList.length-1].routerId;\r\n      let _PageSettingData = IDM.router.pageDataCachePool.get(currentShowPageId)||this.PageSettingData;\r\n      let propData = _PageSettingData.page.layout.props.compositeAttr;\r\n      switch (propData.pulltorefreshType) {\r\n        case \"page\":\r\n          //刷新页面\r\n          window.location.reload();\r\n          break;\r\n        case \"data\":\r\n          // this.fetchUserInfo(propData,true,true);\r\n          try{\r\n            let idmPageRefs = this.$refs[\"idm_page_\"+currentRouterId];\r\n            idmPageRefs instanceof Array?idmPageRefs=idmPageRefs[0]:null;\r\n            idmPageRefs.fetchUserInfo(propData,true,true,true);\r\n          }catch(err){\r\n\r\n          }\r\n          break;\r\n        case \"custom\":\r\n          //自定义\r\n          var customFunction = propData.pulltorefreshFunction;\r\n          customFunction&&customFunction.forEach(item=>{\r\n            window[item.name]&&window[item.name].call(this,{\r\n              customParam:item.param\r\n            });\r\n          })\r\n          break;\r\n      }\r\n    },\r\n    /**\r\n     * 加载console插件\r\n     */\r\n    initVconsolePlugin(){\r\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\r\n      let showVconsole = propData.showVconsole;\r\n      if(showVconsole){\r\n        IDM.http.importFiles([IDM.url.getWebPath(\"~/lib/vconsole/vconsole.min.js\")])\r\n        .then(() => {\r\n          //加载完成\r\n          var vConsole = new window.VConsole();\r\n        })\r\n        .catch(err => {\r\n          console.log(\"加载vconsole插件出错\");\r\n        })\r\n      }\r\n    },\r\n    /**\r\n     * 加载进度条动画资源\r\n     */\r\n    initLoadbarResource() {\r\n      //判断是否已经加载过\r\n\r\n      let propData = this.PageSettingData.page.layout.props.compositeAttr;\r\n      if (!propData.openPreviewLoadStyle) {\r\n        //加载完成\r\n        idmPace.stop();\r\n        return;\r\n      }\r\n      //设置颜色\r\n      let previewLoadColor = propData.previewLoadColor;\r\n      if (previewLoadColor && previewLoadColor.hex8) {\r\n        document.documentElement.style.setProperty(\r\n          `--idmPreviewLoadColor`,\r\n          IDM.hex8ToRgbaString(previewLoadColor.hex8)\r\n        );\r\n      }\r\n\r\n      IDM.http\r\n        .importFiles([\r\n          IDM.url.getWebPath(\"~/lib/pace/pace.min.js\"),\r\n          IDM.url.getWebPath(\"~/lib/pace/minimal.css\"),\r\n        ])\r\n        .then(() => {\r\n          //加载完成\r\n          idmPace.stop();\r\n          Pace.start();\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"加载进度条文件出错\");\r\n        });\r\n    },\r\n    /**\r\n     * 加载页面组件\r\n     */\r\n    async loadPageElement() {\r\n      this.pagePropData = this.PageSettingData.page.layout.props.compositeAttr;\r\n      //进度条颜色以主页面为准\r\n      this.initLoadbarResource();\r\n      //日志以主页面为准\r\n      this.initVconsolePlugin();\r\n      \r\n      //websocket事件处理函数\r\n      this.webSocketEventHandle(this.PageSettingData.page.layout.props);\r\n      //微信jssdk处理函数\r\n      this.weixinEventHandle(this.PageSettingData.page.layout.props);\r\n      //加载下拉刷新，先判断属性是否需要加载下拉刷新功能\r\n      this.initPulltorefreshPlugin();\r\n    },\r\n  },\r\n  watch:{\r\n    $route(to, from) {\r\n      if(IDM.router.idmInnerRouterEvent){\r\n        IDM.router.idmInnerRouterEvent = false;\r\n      }else{\r\n        //是浏览器前进或者后退触发的，需要取操作内部事件\r\n        console.log(\"🚀 ~ file: Preview.vue ~ line 861 ~ $route ~ from\", from)\r\n        console.log(\"🚀 ~ file: Preview.vue ~ line 861 ~ $route ~ to\", to)\r\n        IDM.router.innerRouterChangeEvent(to,from);\r\n        // debugger;\r\n      }\r\n      \r\n      //路由发生了变化，需要去加载子级页面，同时要取出是否缓存本页面\r\n      //要监听返回对比，然后去渲染子页面\r\n      // debugger\r\n      // 对路由变化作出响应...\r\n       //如果to索引大于from索引,判断为前进状态,反之则为后退状态\r\n      // if(to.meta.index > from.meta.index) {\r\n      //   //设置动画名称\r\n      //   this.currentTransitionType = 1;\r\n      // }else{\r\n      //   this.currentTransitionType = -1;\r\n      // }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\nhtml,\r\nbody,\r\nbody > div.idm-root-element,\r\nbody > div .idm_render_engine_container,\r\nbody > div .idm_render_engine_router_container,\r\nbody > div .idm_render_engine_page_container,\r\nbody > div .idm_page_root {\r\n  min-height: 100%;\r\n  position: relative;\r\n}\r\nbody > div.idm-root-element,\r\nbody > div .idm_render_engine_container,\r\nbody > div .idm_render_engine_router_container,\r\nbody > div .idm_render_engine_page_container {\r\n  height: 100%;\r\n}\r\n.idm_page_root{\r\n  overflow:auto\r\n}\r\n/**\r\n控制中心抽屉\r\n*/\r\n.idm_module_setting_drawer{\r\n  .idm-ant-drawer-wrapper-body{\r\n    display: flex;\r\n    flex-direction: column;\r\n    .idm-ant-drawer-body{\r\n      flex-grow: 2;\r\n      padding: 0;\r\n      .idm_drawer_iframe_basestyle{\r\n        border: none;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n悬浮布局层\r\n*/\r\n.idm_hover_layer_wrap_preview{\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n    left: 0px;\r\n    bottom: 0px;\r\n    z-index: 58;\r\n    pointer-events: none;\r\n    *{\r\n      pointer-events: auto;\r\n    }\r\n}\r\n/*\r\n模态窗口容器\r\n*/\r\n.idm_dialog_wrap_preview{\r\n    position: fixed;\r\n    top: 0px;\r\n    right: 0px;\r\n    left: 0px;\r\n    bottom: 0px;\r\n    z-index: 59;\r\n    // display: flex;\r\n    // align-items: center;\r\n    // justify-content: center;\r\n    // animation:idm_dialog_wrap_shade_animation 0.3s;\r\n    /*Safari and Chrome*/\r\n    // -webkit-animation:idm_dialog_wrap_shade_animation 0.3s;\r\n    .idm_dialog_shade_layer{\r\n      // background: transparent;\r\n      background-color: rgba(0,0,0,.4);\r\n      animation:idm_dialog_wrap_shade_animation 0.3s;\r\n      /*Safari and Chrome*/\r\n      -webkit-animation:idm_dialog_wrap_shade_animation 0.3s;\r\n      // z-index: 0;\r\n      &[hideing='hideing']{\r\n        animation:idm_dialog_wrap_shade_animation_hide 0.52s;\r\n        /*Safari and Chrome*/\r\n        -webkit-animation:idm_dialog_wrap_shade_animation_hide 0.52s;\r\n      }\r\n    }\r\n    &>div{\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      top: 0;\r\n    }\r\n    &>div.idm_module{\r\n      display: none;\r\n      pointer-events:none;\r\n      &>div{\r\n        pointer-events:auto\r\n      }\r\n      &.topLeft{\r\n        display: flex;\r\n        align-items:flex-start;\r\n        justify-content:flex-start;\r\n      }\r\n      &.topCenter{\r\n        display: flex;\r\n        align-items:flex-start;\r\n        justify-content:center;\r\n      }\r\n      &.topRight{\r\n        display: flex;\r\n        align-items:flex-start;\r\n        justify-content:flex-end;\r\n      }\r\n      &.centerLeft{\r\n        display: flex;\r\n        align-items:center;\r\n        justify-content:flex-start;\r\n      }\r\n      &.center{\r\n        display: flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n      }\r\n      &.centerRight{\r\n        display: flex;\r\n        align-items:center;\r\n        justify-content:flex-end;\r\n      }\r\n      &.bottomLeft{\r\n        display: flex;\r\n        align-items:flex-end;\r\n        justify-content:flex-start;\r\n      }\r\n      &.bottomCenter{\r\n        display: flex;\r\n        align-items:flex-end;\r\n        justify-content:center;\r\n      }\r\n      &.bottomRight{\r\n        display: flex;\r\n        align-items:flex-end;\r\n        justify-content:flex-end;\r\n      }\r\n    }\r\n    &[hideing='hideing']{\r\n      animation:idm_dialog_wrap_shade_animation_hide 0.52s;\r\n      /*Safari and Chrome*/\r\n      -webkit-animation:idm_dialog_wrap_shade_animation_hide 0.52s;\r\n    }\r\n}\r\n@keyframes idm_dialog_wrap_shade_animation\r\n{\r\nfrom {opacity: 0;}\r\nto {opacity: 1;}\r\n}\r\n\r\n@-webkit-keyframes idm_dialog_wrap_shade_animation /*Safari and Chrome*/\r\n{\r\nfrom {opacity: 0;}\r\nto {opacity: 1;}\r\n}\r\n@keyframes idm_dialog_wrap_shade_animation_hide\r\n{\r\nfrom {opacity: 1;}\r\nto {opacity: 0;}\r\n}\r\n\r\n@-webkit-keyframes idm_dialog_wrap_shade_animation_hide /*Safari and Chrome*/\r\n{\r\nfrom {opacity: 1;}\r\nto {opacity: 0;}\r\n}\r\n@import \"../style/core/layer.scss\";\r\n\r\n\r\n\r\n.slide-fade-enter, .slide-fade-leave-to\r\n{\r\n  left:0;top: 0;right: 0;\r\n  position: absolute;\r\n  transform:translateX(100%);\r\n}\r\n.slide-fade-enter-active {\r\n  background-color: white;\r\n  transition: all 0.3s ease;\r\n}\r\n.slide-fade-leave-active {\r\n  transition: all 0.4s ease;\r\n  background-color: white;\r\n  transform:translateX(100%);\r\n  z-index: 100;\r\n}\r\n\r\n\r\n.idm_render_engine_page_container+.idm_render_engine_page_container{\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background-color: white;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--13-0!../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!./Preview.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--13-0!../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!./Preview.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Preview.vue?vue&type=template&id=4b015de0&\"\nimport script from \"./Preview.vue?vue&type=script&lang=js&\"\nexport * from \"./Preview.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Preview.vue?vue&type=style&index=0&id=4b015de0&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.10.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}"],"sourceRoot":""}